
    drop table if exists Hello;

    drop table if exists Attributes;

    drop table if exists AttributeStateEvents;

    drop table if exists AttributeValues;

    drop table if exists AttributeValueStateEvents;

    drop table if exists AttributeAlias;

    drop table if exists AttributeAliasStateEvents;

    drop table if exists AttributeSets;

    drop table if exists AttributeSetStateEvents;

    drop table if exists AttributeUses;

    drop table if exists AttributeUseStateEvents;

    drop table if exists DamageReasons;

    drop table if exists DamageReasonStateEvents;

    drop table if exists DamageTypes;

    drop table if exists DamageHandlingMethods;

    drop table if exists DocumentTypes;

    drop table if exists AttributeSetInstances;

    drop table if exists AttributeSetInstanceExtensionFields;

    drop table if exists AttributeSetInstanceExtensionFieldStateEvents;

    drop table if exists AttributeSetInstanceExtensionFieldGroups;

    drop table if exists AttributeSetInstanceExtensionFieldGroupStateEvents;

    drop table if exists AttributeValue_RV;

    drop table if exists AttributeValueMvoStateEvents;

    drop table if exists AttributeAlias_RV;

    drop table if exists AttributeAliasMvoStateEvents;

    drop table if exists AttributeUse_RV;

    drop table if exists AttributeUseMvoStateEvents;

    drop table if exists InOuts;

    drop table if exists InOutStateEvents;

    drop table if exists InOutLines;

    drop table if exists InOutLineStateEvents;

    drop table if exists InventoryItems;

    drop table if exists InventoryItemStateEvents;

    drop table if exists InventoryItemEntries;

    drop table if exists InventoryItemRequirements;

    drop table if exists InventoryItemRequirementEntries;

    drop table if exists InventoryPostingRules;

    drop table if exists InventoryPostingRuleStateEvents;

    drop table if exists InventoryPRTriggereds;

    drop table if exists Lots;

    drop table if exists LotStateEvents;

    drop table if exists Movements;

    drop table if exists MovementStateEvents;

    drop table if exists MovementLines;

    drop table if exists MovementLineStateEvents;

    drop table if exists MovementConfirmations;

    drop table if exists MovementConfirmationStateEvents;

    drop table if exists MovementConfirmationLines;

    drop table if exists MovementConfirmationLineStateEvents;

    drop table if exists MovementTypes;

    drop table if exists Orders;

    drop table if exists OrderStateEvents;

    drop table if exists OrderItems;

    drop table if exists OrderItemStateEvents;

    drop table if exists OrderShipments;

    drop table if exists OrderShipmentStateEvents;

    drop table if exists OrganizationStructures;

    drop table if exists OrganizationStructureStateEvents;

    drop table if exists OrganizationStructureTypes;

    drop table if exists OrganizationStructureTypeStateEvents;

    drop table if exists Parties;

    drop table if exists Organizations;

    drop table if exists PartyStateEvents;

    drop table if exists PhysicalInventories;

    drop table if exists PhysicalInventoryStateEvents;

    drop table if exists PhysicalInventoryLines;

    drop table if exists PhysicalInventoryLineStateEvents;

    drop table if exists Products;

    drop table if exists ProductStateEvents;

    drop table if exists ProductCategories;

    drop table if exists ProductCategoryStateEvents;

    drop table if exists ProductCategoryMembers;

    drop table if exists ProductCategoryMemberStateEvents;

    drop table if exists RejectionReasons;

    drop table if exists RejectionReasonStateEvents;

    drop table if exists SellableInventoryItems;

    drop table if exists SellableInventoryItemEntries;

    drop table if exists Shipments;

    drop table if exists ShipmentStateEvents;

    drop table if exists ShipmentItems;

    drop table if exists ShipmentItemStateEvents;

    drop table if exists ShipmentReceipts;

    drop table if exists ShipmentReceiptStateEvents;

    drop table if exists ShipmentTypes;

    drop table if exists StatusItems;

    drop table if exists SupplierProducts;

    drop table if exists SupplierProductStateEvents;

    drop table if exists Uoms;

    drop table if exists UomStateEvents;

    drop table if exists UomConversions;

    drop table if exists UomConversionStateEvents;

    drop table if exists UomTypes;

    drop table if exists Warehouses;

    drop table if exists WarehouseStateEvents;

    drop table if exists Locators;

    drop table if exists LocatorStateEvents;

    drop table if exists InOutLine_RV;

    drop table if exists InOutLineMvoStateEvents;

    drop table if exists InventoryItemEntry_RV;

    drop table if exists InventoryItemEntryMvoStateEvents;

    drop table if exists InventoryItemRequirementEntry_RV;

    drop table if exists InventoryItemRequirementEntryMvoStateEvents;

    drop table if exists MovementLine_RV;

    drop table if exists MovementLineMvoStateEvents;

    drop table if exists MovementConfirmationLine_RV;

    drop table if exists MovementConfirmationLineMvoStateEvents;

    drop table if exists OrderItem_RV;

    drop table if exists OrderItemMvoStateEvents;

    drop table if exists PhysicalInventoryLine_RV;

    drop table if exists PhysicalInventoryLineMvoStateEvents;

    drop table if exists SellableInventoryItemEntry_RV;

    drop table if exists SellableInventoryItemEntryMvoStateEvents;

    drop table if exists ShipmentItem_RV;

    drop table if exists ShipmentItemMvoStateEvents;

    drop table if exists ShipmentReceipt_RV;

    drop table if exists ShipmentReceiptMvoStateEvents;

    drop table if exists nhibernate_hilo_table;

    create table Hello (
        Id BIGINT not null,
       Message VARCHAR(255),
       primary key (Id)
    );

    create table Attributes (
        AttributeId VARCHAR(50) not null,
       Version BIGINT not null,
       AttributeName VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       IsMandatory TINYINT(1),
       AttributeValueType VARCHAR(255),
       AttributeValueLength INTEGER,
       IsList TINYINT(1),
       FieldName VARCHAR(255),
       ReferenceId VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeId),
      unique (FieldName)
    );

    create table AttributeStateEvents (
        AttributeId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       AttributeName VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       IsMandatory TINYINT(1),
       AttributeValueType VARCHAR(255),
       AttributeValueLength INTEGER,
       IsList TINYINT(1),
       FieldName VARCHAR(255),
       ReferenceId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyAttributeNameRemoved TINYINT(1),
       IsPropertyOrganizationIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyIsMandatoryRemoved TINYINT(1),
       IsPropertyAttributeValueTypeRemoved TINYINT(1),
       IsPropertyAttributeValueLengthRemoved TINYINT(1),
       IsPropertyIsListRemoved TINYINT(1),
       IsPropertyFieldNameRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeId, Version),
      unique (FieldName)
    );

    create table AttributeValues (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       Version BIGINT not null,
       AttributeValueName VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue)
    );

    create table AttributeValueStateEvents (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       AttributeValueName VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyAttributeValueNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue, AttributeVersion)
    );

    create table AttributeAlias (
        AttributeAliasIdAttributeId VARCHAR(50) not null,
       AttributeAliasIdCode VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeAliasIdAttributeId, AttributeAliasIdCode),
      unique (AttributeAliasIdCode),
      unique (Name)
    );

    create table AttributeAliasStateEvents (
        AttributeAliasIdAttributeId VARCHAR(50) not null,
       AttributeAliasIdCode VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeAliasIdAttributeId, AttributeAliasIdCode, AttributeVersion),
      unique (Name)
    );

    create table AttributeSets (
        AttributeSetId VARCHAR(50) not null,
       Version BIGINT not null,
       AttributeSetName VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       IsInstanceAttributeSet TINYINT(1),
       IsMandatory TINYINT(1),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeSetId)
    );

    create table AttributeSetStateEvents (
        AttributeSetId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       AttributeSetName VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       IsInstanceAttributeSet TINYINT(1),
       IsMandatory TINYINT(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyAttributeSetNameRemoved TINYINT(1),
       IsPropertyOrganizationIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyIsInstanceAttributeSetRemoved TINYINT(1),
       IsPropertyIsMandatoryRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeSetId, Version)
    );

    create table AttributeUses (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       Version BIGINT not null,
       SequenceNumber INTEGER,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId)
    );

    create table AttributeUseStateEvents (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       AttributeSetVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       SequenceNumber INTEGER,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertySequenceNumberRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId, AttributeSetVersion)
    );

    create table DamageReasons (
        DamageReasonId VARCHAR(60) not null,
       Version BIGINT not null,
       Description VARCHAR(255),
       SequenceId VARCHAR(20),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (DamageReasonId)
    );

    create table DamageReasonStateEvents (
        DamageReasonId VARCHAR(60) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description VARCHAR(255),
       SequenceId VARCHAR(20),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertySequenceIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (DamageReasonId, Version)
    );

    create table DamageTypes (
        DamageTypeId VARCHAR(60) not null,
       Version BIGINT not null,
       Description VARCHAR(255) not null,
       SequenceId VARCHAR(20),
       DefaultHandlingMethodId VARCHAR(60),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (DamageTypeId)
    );

    create table DamageHandlingMethods (
        DamageHandlingMethodId VARCHAR(60) not null,
       Version BIGINT not null,
       Description VARCHAR(255) not null,
       SequenceId VARCHAR(20),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (DamageHandlingMethodId)
    );

    create table DocumentTypes (
        DocumentTypeId VARCHAR(50) not null,
       Version BIGINT not null,
       Description VARCHAR(255) not null,
       ParentDocumentTypeId VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (DocumentTypeId)
    );

    create table AttributeSetInstances (
        AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       AttributeSetId VARCHAR(255),
       OrganizationId VARCHAR(255),
       ReferenceId VARCHAR(255),
       SerialNumber VARCHAR(255),
       LotId VARCHAR(255),
       Description VARCHAR(255),
       Hash VARCHAR(255),
       WidthInch NUMERIC(19,5),
       DiameterInch NUMERIC(19,5),
       WeightLbs NUMERIC(19,5),
       WeightKg NUMERIC(19,5),
       AirDryWeightLbs NUMERIC(19,5),
       AirDryWeightKg NUMERIC(19,5),
       AirDryMetricTon NUMERIC(19,5),
       PackageCount INTEGER,
       AirDryPct NUMERIC(19,5),
       _F_B_0_ TINYINT(1),
       _F_I_0_ INTEGER,
       _F_L_0_ BIGINT,
       _F_DT_0_ DATETIME,
       _F_N_0_ NUMERIC(19,5),
       _F_C5_0_ VARCHAR(5),
       _F_C10_0_ VARCHAR(10),
       _F_C20_0_ VARCHAR(20),
       _F_C50_0_ VARCHAR(50),
       _F_C100_0_ VARCHAR(100),
       _F_C200_0_ VARCHAR(200),
       _F_C500_0_ TEXT,
       _F_C1000_0_ TEXT,
       _F_B_1_ TINYINT(1),
       _F_I_1_ INTEGER,
       _F_L_1_ BIGINT,
       _F_DT_1_ DATETIME,
       _F_N_1_ NUMERIC(19,5),
       _F_C5_1_ VARCHAR(5),
       _F_C10_1_ VARCHAR(10),
       _F_C20_1_ VARCHAR(20),
       _F_C50_1_ VARCHAR(50),
       _F_C100_1_ VARCHAR(100),
       _F_C200_1_ VARCHAR(200),
       _F_B_2_ TINYINT(1),
       _F_I_2_ INTEGER,
       _F_L_2_ BIGINT,
       _F_DT_2_ DATETIME,
       _F_N_2_ NUMERIC(19,5),
       _F_C5_2_ VARCHAR(5),
       _F_C10_2_ VARCHAR(10),
       _F_C20_2_ VARCHAR(20),
       _F_C50_2_ VARCHAR(50),
       _F_B_3_ TINYINT(1),
       _F_I_3_ INTEGER,
       _F_L_3_ BIGINT,
       _F_DT_3_ DATETIME,
       _F_N_3_ NUMERIC(19,5),
       _F_C5_3_ VARCHAR(5),
       _F_C10_3_ VARCHAR(10),
       _F_C20_3_ VARCHAR(20),
       _F_C50_3_ VARCHAR(50),
       _F_B_4_ TINYINT(1),
       _F_I_4_ INTEGER,
       _F_L_4_ BIGINT,
       _F_DT_4_ DATETIME,
       _F_N_4_ NUMERIC(19,5),
       _F_C5_4_ VARCHAR(5),
       _F_C10_4_ VARCHAR(10),
       _F_C20_4_ VARCHAR(20),
       _F_C50_4_ VARCHAR(50),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (AttributeSetInstanceId)
    );

    create table AttributeSetInstanceExtensionFields (
        Name VARCHAR(50) not null,
       Version BIGINT not null,
       Type VARCHAR(255),
       Length INTEGER,
       Alias VARCHAR(255),
       Description VARCHAR(255),
       GroupId VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (Name),
      unique (Alias)
    );

    create table AttributeSetInstanceExtensionFieldStateEvents (
        Name VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Type VARCHAR(255),
       Length INTEGER,
       Alias VARCHAR(255),
       Description VARCHAR(255),
       GroupId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyTypeRemoved TINYINT(1),
       IsPropertyLengthRemoved TINYINT(1),
       IsPropertyAliasRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyGroupIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (Name, Version),
      unique (Alias)
    );

    create table AttributeSetInstanceExtensionFieldGroups (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       FieldType VARCHAR(255),
       FieldLength INTEGER,
       FieldCount INTEGER,
       NameFormat VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (Id)
    );

    create table AttributeSetInstanceExtensionFieldGroupStateEvents (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       FieldType VARCHAR(255),
       FieldLength INTEGER,
       FieldCount INTEGER,
       NameFormat VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyFieldTypeRemoved TINYINT(1),
       IsPropertyFieldLengthRemoved TINYINT(1),
       IsPropertyFieldCountRemoved TINYINT(1),
       IsPropertyNameFormatRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (Id, Version)
    );

    create table AttributeValue_RV (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       AttributeValueName VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       AttributeAttributeName VARCHAR(255),
       AttributeOrganizationId VARCHAR(255),
       AttributeDescription VARCHAR(255),
       AttributeIsMandatory TINYINT(1),
       AttributeAttributeValueType VARCHAR(255),
       AttributeAttributeValueLength INTEGER,
       AttributeIsList TINYINT(1),
       AttributeFieldName VARCHAR(255),
       AttributeReferenceId VARCHAR(255),
       AttributeCreatedBy VARCHAR(255),
       AttributeCreatedAt DATETIME,
       AttributeUpdatedBy VARCHAR(255),
       AttributeUpdatedAt DATETIME,
       AttributeActive TINYINT(1),
       AttributeDeleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue)
    );

    create table AttributeValueMvoStateEvents (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       AttributeValueName VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       AttributeAttributeName VARCHAR(255),
       AttributeOrganizationId VARCHAR(255),
       AttributeDescription VARCHAR(255),
       AttributeIsMandatory TINYINT(1),
       AttributeAttributeValueType VARCHAR(255),
       AttributeAttributeValueLength INTEGER,
       AttributeIsList TINYINT(1),
       AttributeFieldName VARCHAR(255),
       AttributeReferenceId VARCHAR(255),
       AttributeCreatedBy VARCHAR(255),
       AttributeCreatedAt DATETIME,
       AttributeUpdatedBy VARCHAR(255),
       AttributeUpdatedAt DATETIME,
       AttributeActive TINYINT(1),
       AttributeDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyAttributeValueNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyAttributeAttributeNameRemoved TINYINT(1),
       IsPropertyAttributeOrganizationIdRemoved TINYINT(1),
       IsPropertyAttributeDescriptionRemoved TINYINT(1),
       IsPropertyAttributeIsMandatoryRemoved TINYINT(1),
       IsPropertyAttributeAttributeValueTypeRemoved TINYINT(1),
       IsPropertyAttributeAttributeValueLengthRemoved TINYINT(1),
       IsPropertyAttributeIsListRemoved TINYINT(1),
       IsPropertyAttributeFieldNameRemoved TINYINT(1),
       IsPropertyAttributeReferenceIdRemoved TINYINT(1),
       IsPropertyAttributeCreatedByRemoved TINYINT(1),
       IsPropertyAttributeCreatedAtRemoved TINYINT(1),
       IsPropertyAttributeUpdatedByRemoved TINYINT(1),
       IsPropertyAttributeUpdatedAtRemoved TINYINT(1),
       IsPropertyAttributeActiveRemoved TINYINT(1),
       IsPropertyAttributeDeletedRemoved TINYINT(1),
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue, AttributeVersion)
    );

    create table AttributeAlias_RV (
        AttributeAliasIdAttributeId VARCHAR(50) not null,
       AttributeAliasIdCode VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       Name VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       AttributeAttributeName VARCHAR(255),
       AttributeOrganizationId VARCHAR(255),
       AttributeDescription VARCHAR(255),
       AttributeIsMandatory TINYINT(1),
       AttributeAttributeValueType VARCHAR(255),
       AttributeAttributeValueLength INTEGER,
       AttributeIsList TINYINT(1),
       AttributeFieldName VARCHAR(255),
       AttributeReferenceId VARCHAR(255),
       AttributeCreatedBy VARCHAR(255),
       AttributeCreatedAt DATETIME,
       AttributeUpdatedBy VARCHAR(255),
       AttributeUpdatedAt DATETIME,
       AttributeActive TINYINT(1),
       AttributeDeleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeAliasIdAttributeId, AttributeAliasIdCode),
      unique (AttributeAliasIdCode),
      unique (Name)
    );

    create table AttributeAliasMvoStateEvents (
        AttributeAliasIdAttributeId VARCHAR(50) not null,
       AttributeAliasIdCode VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       AttributeAttributeName VARCHAR(255),
       AttributeOrganizationId VARCHAR(255),
       AttributeDescription VARCHAR(255),
       AttributeIsMandatory TINYINT(1),
       AttributeAttributeValueType VARCHAR(255),
       AttributeAttributeValueLength INTEGER,
       AttributeIsList TINYINT(1),
       AttributeFieldName VARCHAR(255),
       AttributeReferenceId VARCHAR(255),
       AttributeCreatedBy VARCHAR(255),
       AttributeCreatedAt DATETIME,
       AttributeUpdatedBy VARCHAR(255),
       AttributeUpdatedAt DATETIME,
       AttributeActive TINYINT(1),
       AttributeDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyAttributeAttributeNameRemoved TINYINT(1),
       IsPropertyAttributeOrganizationIdRemoved TINYINT(1),
       IsPropertyAttributeDescriptionRemoved TINYINT(1),
       IsPropertyAttributeIsMandatoryRemoved TINYINT(1),
       IsPropertyAttributeAttributeValueTypeRemoved TINYINT(1),
       IsPropertyAttributeAttributeValueLengthRemoved TINYINT(1),
       IsPropertyAttributeIsListRemoved TINYINT(1),
       IsPropertyAttributeFieldNameRemoved TINYINT(1),
       IsPropertyAttributeReferenceIdRemoved TINYINT(1),
       IsPropertyAttributeCreatedByRemoved TINYINT(1),
       IsPropertyAttributeCreatedAtRemoved TINYINT(1),
       IsPropertyAttributeUpdatedByRemoved TINYINT(1),
       IsPropertyAttributeUpdatedAtRemoved TINYINT(1),
       IsPropertyAttributeActiveRemoved TINYINT(1),
       IsPropertyAttributeDeletedRemoved TINYINT(1),
       primary key (AttributeAliasIdAttributeId, AttributeAliasIdCode, AttributeVersion),
      unique (Name)
    );

    create table AttributeUse_RV (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       AttributeSetVersion BIGINT not null,
       SequenceNumber INTEGER,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       AttributeSetAttributeSetName VARCHAR(255),
       AttributeSetOrganizationId VARCHAR(255),
       AttributeSetDescription VARCHAR(255),
       AttributeSetReferenceId VARCHAR(255),
       AttributeSetIsInstanceAttributeSet TINYINT(1),
       AttributeSetIsMandatory TINYINT(1),
       AttributeSetCreatedBy VARCHAR(255),
       AttributeSetCreatedAt DATETIME,
       AttributeSetUpdatedBy VARCHAR(255),
       AttributeSetUpdatedAt DATETIME,
       AttributeSetActive TINYINT(1),
       AttributeSetDeleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId)
    );

    create table AttributeUseMvoStateEvents (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       AttributeSetVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       SequenceNumber INTEGER,
       Version BIGINT,
       Active TINYINT(1),
       AttributeSetAttributeSetName VARCHAR(255),
       AttributeSetOrganizationId VARCHAR(255),
       AttributeSetDescription VARCHAR(255),
       AttributeSetReferenceId VARCHAR(255),
       AttributeSetIsInstanceAttributeSet TINYINT(1),
       AttributeSetIsMandatory TINYINT(1),
       AttributeSetCreatedBy VARCHAR(255),
       AttributeSetCreatedAt DATETIME,
       AttributeSetUpdatedBy VARCHAR(255),
       AttributeSetUpdatedAt DATETIME,
       AttributeSetActive TINYINT(1),
       AttributeSetDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertySequenceNumberRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyAttributeSetAttributeSetNameRemoved TINYINT(1),
       IsPropertyAttributeSetOrganizationIdRemoved TINYINT(1),
       IsPropertyAttributeSetDescriptionRemoved TINYINT(1),
       IsPropertyAttributeSetReferenceIdRemoved TINYINT(1),
       IsPropertyAttributeSetIsInstanceAttributeSetRemoved TINYINT(1),
       IsPropertyAttributeSetIsMandatoryRemoved TINYINT(1),
       IsPropertyAttributeSetCreatedByRemoved TINYINT(1),
       IsPropertyAttributeSetCreatedAtRemoved TINYINT(1),
       IsPropertyAttributeSetUpdatedByRemoved TINYINT(1),
       IsPropertyAttributeSetUpdatedAtRemoved TINYINT(1),
       IsPropertyAttributeSetActiveRemoved TINYINT(1),
       IsPropertyAttributeSetDeletedRemoved TINYINT(1),
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId, AttributeSetVersion)
    );

    create table InOuts (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       DocumentStatusId VARCHAR(255),
       Posted TINYINT(1),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DocumentTypeId VARCHAR(255),
       Description VARCHAR(255),
       OrderId VARCHAR(255),
       DateOrdered DATETIME,
       IsPrinted TINYINT(1),
       MovementTypeId VARCHAR(255),
       MovementDate DATETIME,
       BusinessPartnerId VARCHAR(255),
       WarehouseId VARCHAR(255),
       POReference VARCHAR(255),
       FreightAmount NUMERIC(19,5),
       ShipperId VARCHAR(255),
       ChargeAmount NUMERIC(19,5),
       DatePrinted DATETIME,
       CreatedFrom VARCHAR(255),
       SalesRepresentativeId VARCHAR(255),
       NumberOfPackages INTEGER,
       PickDate DATETIME,
       ShipDate DATETIME,
       TrackingNumber VARCHAR(255),
       DateReceived DATETIME,
       IsInTransit TINYINT(1),
       IsApproved TINYINT(1),
       IsInDispute TINYINT(1),
       RmaDocumentNumber VARCHAR(255),
       ReversalDocumentNumber VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (DocumentNumber)
    );

    create table InOutStateEvents (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       DocumentStatusId VARCHAR(255),
       Posted TINYINT(1),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DocumentTypeId VARCHAR(255),
       Description VARCHAR(255),
       OrderId VARCHAR(255),
       DateOrdered DATETIME,
       IsPrinted TINYINT(1),
       MovementTypeId VARCHAR(255),
       MovementDate DATETIME,
       BusinessPartnerId VARCHAR(255),
       WarehouseId VARCHAR(255),
       POReference VARCHAR(255),
       FreightAmount NUMERIC(19,5),
       ShipperId VARCHAR(255),
       ChargeAmount NUMERIC(19,5),
       DatePrinted DATETIME,
       CreatedFrom VARCHAR(255),
       SalesRepresentativeId VARCHAR(255),
       NumberOfPackages INTEGER,
       PickDate DATETIME,
       ShipDate DATETIME,
       TrackingNumber VARCHAR(255),
       DateReceived DATETIME,
       IsInTransit TINYINT(1),
       IsApproved TINYINT(1),
       IsInDispute TINYINT(1),
       RmaDocumentNumber VARCHAR(255),
       ReversalDocumentNumber VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDocumentStatusIdRemoved TINYINT(1),
       IsPropertyPostedRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyProcessingRemoved TINYINT(1),
       IsPropertyDocumentTypeIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyOrderIdRemoved TINYINT(1),
       IsPropertyDateOrderedRemoved TINYINT(1),
       IsPropertyIsPrintedRemoved TINYINT(1),
       IsPropertyMovementTypeIdRemoved TINYINT(1),
       IsPropertyMovementDateRemoved TINYINT(1),
       IsPropertyBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyWarehouseIdRemoved TINYINT(1),
       IsPropertyPOReferenceRemoved TINYINT(1),
       IsPropertyFreightAmountRemoved TINYINT(1),
       IsPropertyShipperIdRemoved TINYINT(1),
       IsPropertyChargeAmountRemoved TINYINT(1),
       IsPropertyDatePrintedRemoved TINYINT(1),
       IsPropertyCreatedFromRemoved TINYINT(1),
       IsPropertySalesRepresentativeIdRemoved TINYINT(1),
       IsPropertyNumberOfPackagesRemoved TINYINT(1),
       IsPropertyPickDateRemoved TINYINT(1),
       IsPropertyShipDateRemoved TINYINT(1),
       IsPropertyTrackingNumberRemoved TINYINT(1),
       IsPropertyDateReceivedRemoved TINYINT(1),
       IsPropertyIsInTransitRemoved TINYINT(1),
       IsPropertyIsApprovedRemoved TINYINT(1),
       IsPropertyIsInDisputeRemoved TINYINT(1),
       IsPropertyRmaDocumentNumberRemoved TINYINT(1),
       IsPropertyReversalDocumentNumberRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (DocumentNumber, Version)
    );

    create table InOutLines (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdLineNumber VARCHAR(50) not null,
       Version BIGINT not null,
       LocatorId VARCHAR(255),
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Description VARCHAR(255),
       QuantityUomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       Processed TINYINT(1),
       RmaLineNumber VARCHAR(255),
       ReversalLineNumber VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdLineNumber)
    );

    create table InOutLineStateEvents (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdLineNumber VARCHAR(50) not null,
       InOutVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       LocatorId VARCHAR(255),
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Description VARCHAR(255),
       QuantityUomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       Processed TINYINT(1),
       RmaLineNumber VARCHAR(255),
       ReversalLineNumber VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyLocatorIdRemoved TINYINT(1),
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyQuantityUomIdRemoved TINYINT(1),
       IsPropertyMovementQuantityRemoved TINYINT(1),
       IsPropertyPickedQuantityRemoved TINYINT(1),
       IsPropertyIsInvoicedRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyRmaLineNumberRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdLineNumber, InOutVersion)
    );

    create table InventoryItems (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       OnHandQuantity NUMERIC(19,5),
       InTransitQuantity NUMERIC(19,5),
       ReservedQuantity NUMERIC(19,5),
       OccupiedQuantity NUMERIC(19,5),
       VirtualQuantity NUMERIC(19,5),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ProductId, LocatorId, AttributeSetInstanceId)
    );

    create table InventoryItemStateEvents (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       OnHandQuantity NUMERIC(19,5),
       InTransitQuantity NUMERIC(19,5),
       ReservedQuantity NUMERIC(19,5),
       OccupiedQuantity NUMERIC(19,5),
       VirtualQuantity NUMERIC(19,5),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyOnHandQuantityRemoved TINYINT(1),
       IsPropertyInTransitQuantityRemoved TINYINT(1),
       IsPropertyReservedQuantityRemoved TINYINT(1),
       IsPropertyOccupiedQuantityRemoved TINYINT(1),
       IsPropertyVirtualQuantityRemoved TINYINT(1),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, Version)
    );

    create table InventoryItemEntries (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       Version BIGINT not null,
       OnHandQuantity NUMERIC(19,5),
       InTransitQuantity NUMERIC(19,5),
       ReservedQuantity NUMERIC(19,5),
       OccupiedQuantity NUMERIC(19,5),
       VirtualQuantity NUMERIC(19,5),
       SourceDocumentTypeId VARCHAR(255) not null,
       SourceDocumentNumber VARCHAR(255) not null,
       SourceLineNumber VARCHAR(255),
       SourceLineSeqId INTEGER,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId),
      unique (SourceDocumentTypeId, SourceDocumentNumber, SourceLineNumber, SourceLineSeqId)
    );

    create table InventoryItemRequirements (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       Quantity NUMERIC(19,5),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (ProductId, LocatorId, AttributeSetInstanceId)
    );

    create table InventoryItemRequirementEntries (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       Version BIGINT not null,
       Quantity NUMERIC(19,5),
       SrcEventProductId VARCHAR(60),
       SrcEventLocatorId VARCHAR(50),
       SrcEventAttributeSetInstanceId VARCHAR(50),
       SrcEventEntrySeqId BIGINT,
       SrcEventInventoryPostingRuleId VARCHAR(50),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId),
      unique (SrcEventProductId, SrcEventLocatorId, SrcEventAttributeSetInstanceId, SrcEventEntrySeqId, SrcEventInventoryPostingRuleId)
    );

    create table InventoryPostingRules (
        InventoryPostingRuleId VARCHAR(50) not null,
       Version BIGINT not null,
       TriggerProductId VARCHAR(60),
       TriggerLocatorId VARCHAR(50),
       TriggerAttributeSetInstanceId VARCHAR(50),
       OutputProductId VARCHAR(60),
       OutputLocatorId VARCHAR(50),
       OutputAttributeSetInstanceId VARCHAR(50),
       TriggerAccountName VARCHAR(255),
       OutputAccountName VARCHAR(255),
       IsOutputNegated TINYINT(1),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (InventoryPostingRuleId)
    );

    create table InventoryPostingRuleStateEvents (
        InventoryPostingRuleId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       TriggerProductId VARCHAR(60),
       TriggerLocatorId VARCHAR(50),
       TriggerAttributeSetInstanceId VARCHAR(50),
       OutputProductId VARCHAR(60),
       OutputLocatorId VARCHAR(50),
       OutputAttributeSetInstanceId VARCHAR(50),
       TriggerAccountName VARCHAR(255),
       OutputAccountName VARCHAR(255),
       IsOutputNegated TINYINT(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyTriggerInventoryItemIdRemoved TINYINT(1),
       IsPropertyOutputInventoryItemIdRemoved TINYINT(1),
       IsPropertyTriggerAccountNameRemoved TINYINT(1),
       IsPropertyOutputAccountNameRemoved TINYINT(1),
       IsPropertyIsOutputNegatedRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (InventoryPostingRuleId, Version)
    );

    create table InventoryPRTriggereds (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       InventoryPostingRuleId VARCHAR(50) not null,
       Version BIGINT not null,
       IsProcessed TINYINT(1) not null,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId, InventoryPostingRuleId)
    );

    create table Lots (
        LotId VARCHAR(20) not null,
       Version BIGINT not null,
       Quantity DECIMAL(18,6),
       ExpirationDate DATETIME,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (LotId)
    );

    create table LotStateEvents (
        LotId VARCHAR(20) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Quantity DECIMAL(18,6),
       ExpirationDate DATETIME,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertyExpirationDateRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (LotId, Version)
    );

    create table Movements (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       DocumentStatusId VARCHAR(255),
       MovementDate DATETIME,
       Posted TINYINT(1),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DateReceived DATETIME,
       DocumentTypeId VARCHAR(255),
       IsInTransit TINYINT(1),
       IsApproved TINYINT(1),
       ApprovalAmount NUMERIC(19,5),
       ShipperId VARCHAR(255),
       SalesRepresentativeId VARCHAR(255),
       BusinessPartnerId VARCHAR(255),
       ChargeAmount NUMERIC(19,5),
       CreateFrom VARCHAR(255),
       FreightAmount NUMERIC(19,5),
       ReversalDocumentNumber VARCHAR(255),
       WarehouseIdFrom VARCHAR(255),
       WarehouseIdTo VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (DocumentNumber)
    );

    create table MovementStateEvents (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       DocumentStatusId VARCHAR(255),
       MovementDate DATETIME,
       Posted TINYINT(1),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DateReceived DATETIME,
       DocumentTypeId VARCHAR(255),
       IsInTransit TINYINT(1),
       IsApproved TINYINT(1),
       ApprovalAmount NUMERIC(19,5),
       ShipperId VARCHAR(255),
       SalesRepresentativeId VARCHAR(255),
       BusinessPartnerId VARCHAR(255),
       ChargeAmount NUMERIC(19,5),
       CreateFrom VARCHAR(255),
       FreightAmount NUMERIC(19,5),
       ReversalDocumentNumber VARCHAR(255),
       WarehouseIdFrom VARCHAR(255),
       WarehouseIdTo VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDocumentStatusIdRemoved TINYINT(1),
       IsPropertyMovementDateRemoved TINYINT(1),
       IsPropertyPostedRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyProcessingRemoved TINYINT(1),
       IsPropertyDateReceivedRemoved TINYINT(1),
       IsPropertyDocumentTypeIdRemoved TINYINT(1),
       IsPropertyIsInTransitRemoved TINYINT(1),
       IsPropertyIsApprovedRemoved TINYINT(1),
       IsPropertyApprovalAmountRemoved TINYINT(1),
       IsPropertyShipperIdRemoved TINYINT(1),
       IsPropertySalesRepresentativeIdRemoved TINYINT(1),
       IsPropertyBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyChargeAmountRemoved TINYINT(1),
       IsPropertyCreateFromRemoved TINYINT(1),
       IsPropertyFreightAmountRemoved TINYINT(1),
       IsPropertyReversalDocumentNumberRemoved TINYINT(1),
       IsPropertyWarehouseIdFromRemoved TINYINT(1),
       IsPropertyWarehouseIdToRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (DocumentNumber, Version)
    );

    create table MovementLines (
        MovementLineIdMovementDocumentNumber VARCHAR(50) not null,
       MovementLineIdLineNumber VARCHAR(50) not null,
       Version BIGINT not null,
       MovementQuantity NUMERIC(19,5),
       ProductId VARCHAR(60),
       LocatorIdFrom VARCHAR(255),
       LocatorIdTo VARCHAR(255),
       AttributeSetInstanceId VARCHAR(255),
       Processed TINYINT(1),
       ReversalLineNumber VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (MovementLineIdMovementDocumentNumber, MovementLineIdLineNumber)
    );

    create table MovementLineStateEvents (
        MovementLineIdMovementDocumentNumber VARCHAR(50) not null,
       MovementLineIdLineNumber VARCHAR(50) not null,
       MovementVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       MovementQuantity NUMERIC(19,5),
       ProductId VARCHAR(60),
       LocatorIdFrom VARCHAR(255),
       LocatorIdTo VARCHAR(255),
       AttributeSetInstanceId VARCHAR(255),
       Processed TINYINT(1),
       ReversalLineNumber VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyMovementQuantityRemoved TINYINT(1),
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyLocatorIdFromRemoved TINYINT(1),
       IsPropertyLocatorIdToRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (MovementLineIdMovementDocumentNumber, MovementLineIdLineNumber, MovementVersion)
    );

    create table MovementConfirmations (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       DocumentStatusId VARCHAR(255),
       MovementDocumentNumber VARCHAR(255),
       IsApproved TINYINT(1),
       ApprovalAmount NUMERIC(19,5),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DocumentTypeId VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (DocumentNumber)
    );

    create table MovementConfirmationStateEvents (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       DocumentStatusId VARCHAR(255),
       MovementDocumentNumber VARCHAR(255),
       IsApproved TINYINT(1),
       ApprovalAmount NUMERIC(19,5),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DocumentTypeId VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDocumentStatusIdRemoved TINYINT(1),
       IsPropertyMovementDocumentNumberRemoved TINYINT(1),
       IsPropertyIsApprovedRemoved TINYINT(1),
       IsPropertyApprovalAmountRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyProcessingRemoved TINYINT(1),
       IsPropertyDocumentTypeIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (DocumentNumber, Version)
    );

    create table MovementConfirmationLines (
        MovementConfirmationLineIdMovementConfirmationDocumentNumber VARCHAR(50) not null,
       MovementConfirmationLineIdLineNumber VARCHAR(50) not null,
       Version BIGINT not null,
       MovementLineNumber VARCHAR(255),
       TargetQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       DifferenceQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       Description VARCHAR(255),
       Processed TINYINT(1),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (MovementConfirmationLineIdMovementConfirmationDocumentNumber, MovementConfirmationLineIdLineNumber)
    );

    create table MovementConfirmationLineStateEvents (
        MovementConfirmationLineIdMovementConfirmationDocumentNumber VARCHAR(50) not null,
       MovementConfirmationLineIdLineNumber VARCHAR(50) not null,
       MovementConfirmationVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       MovementLineNumber VARCHAR(255),
       TargetQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       DifferenceQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       Description VARCHAR(255),
       Processed TINYINT(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyMovementLineNumberRemoved TINYINT(1),
       IsPropertyTargetQuantityRemoved TINYINT(1),
       IsPropertyConfirmedQuantityRemoved TINYINT(1),
       IsPropertyDifferenceQuantityRemoved TINYINT(1),
       IsPropertyScrappedQuantityRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (MovementConfirmationLineIdMovementConfirmationDocumentNumber, MovementConfirmationLineIdLineNumber, MovementConfirmationVersion)
    );

    create table MovementTypes (
        MovementTypeId VARCHAR(50) not null,
       Version BIGINT not null,
       Description VARCHAR(255) not null,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (MovementTypeId)
    );

    create table Orders (
        OrderId VARCHAR(20) not null,
       Version BIGINT not null,
       OrderTypeId VARCHAR(20),
       OrderName VARCHAR(100),
       ExternalId VARCHAR(20),
       SalesChannelEnumId VARCHAR(20),
       OrderDate DATETIME,
       Priority CHAR(1),
       EntryDate DATETIME,
       PickSheetPrintedDate DATETIME,
       StatusId VARCHAR(20),
       CurrencyUom VARCHAR(20),
       SyncStatusId VARCHAR(20),
       BillingAccountId VARCHAR(20),
       OriginFacilityId VARCHAR(20),
       WebSiteId VARCHAR(20),
       ProductStoreId VARCHAR(20),
       TerminalId VARCHAR(60),
       TransactionId VARCHAR(60),
       AutoOrderShoppingListId VARCHAR(20),
       NeedsInventoryIssuance CHAR(1),
       IsRushOrder CHAR(1),
       InternalCode VARCHAR(60),
       RemainingSubTotal DECIMAL(18,2),
       GrandTotal DECIMAL(18,2),
       InvoicePerShipment CHAR(1),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (OrderId)
    );

    create table OrderStateEvents (
        OrderId VARCHAR(20) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       OrderTypeId VARCHAR(20),
       OrderName VARCHAR(100),
       ExternalId VARCHAR(20),
       SalesChannelEnumId VARCHAR(20),
       OrderDate DATETIME,
       Priority CHAR(1),
       EntryDate DATETIME,
       PickSheetPrintedDate DATETIME,
       StatusId VARCHAR(20),
       CurrencyUom VARCHAR(20),
       SyncStatusId VARCHAR(20),
       BillingAccountId VARCHAR(20),
       OriginFacilityId VARCHAR(20),
       WebSiteId VARCHAR(20),
       ProductStoreId VARCHAR(20),
       TerminalId VARCHAR(60),
       TransactionId VARCHAR(60),
       AutoOrderShoppingListId VARCHAR(20),
       NeedsInventoryIssuance CHAR(1),
       IsRushOrder CHAR(1),
       InternalCode VARCHAR(60),
       RemainingSubTotal DECIMAL(18,2),
       GrandTotal DECIMAL(18,2),
       InvoicePerShipment CHAR(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyOrderTypeIdRemoved TINYINT(1),
       IsPropertyOrderNameRemoved TINYINT(1),
       IsPropertyExternalIdRemoved TINYINT(1),
       IsPropertySalesChannelEnumIdRemoved TINYINT(1),
       IsPropertyOrderDateRemoved TINYINT(1),
       IsPropertyPriorityRemoved TINYINT(1),
       IsPropertyEntryDateRemoved TINYINT(1),
       IsPropertyPickSheetPrintedDateRemoved TINYINT(1),
       IsPropertyStatusIdRemoved TINYINT(1),
       IsPropertyCurrencyUomRemoved TINYINT(1),
       IsPropertySyncStatusIdRemoved TINYINT(1),
       IsPropertyBillingAccountIdRemoved TINYINT(1),
       IsPropertyOriginFacilityIdRemoved TINYINT(1),
       IsPropertyWebSiteIdRemoved TINYINT(1),
       IsPropertyProductStoreIdRemoved TINYINT(1),
       IsPropertyTerminalIdRemoved TINYINT(1),
       IsPropertyTransactionIdRemoved TINYINT(1),
       IsPropertyAutoOrderShoppingListIdRemoved TINYINT(1),
       IsPropertyNeedsInventoryIssuanceRemoved TINYINT(1),
       IsPropertyIsRushOrderRemoved TINYINT(1),
       IsPropertyInternalCodeRemoved TINYINT(1),
       IsPropertyRemainingSubTotalRemoved TINYINT(1),
       IsPropertyGrandTotalRemoved TINYINT(1),
       IsPropertyInvoicePerShipmentRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (OrderId, Version)
    );

    create table OrderItems (
        OrderItemIdOrderId VARCHAR(20) not null,
       OrderItemIdOrderItemSeqId VARCHAR(20) not null,
       Version BIGINT not null,
       ProductId VARCHAR(60),
       ExternalProductId VARCHAR(60),
       Quantity DECIMAL(18,6),
       CancelQuantity DECIMAL(18,6),
       SelectedAmount DECIMAL(18,6),
       ExternalId VARCHAR(20),
       OrderItemTypeId VARCHAR(20),
       OrderItemGroupSeqId VARCHAR(20),
       IsItemGroupPrimary CHAR(1),
       FromInventoryItemId VARCHAR(20),
       IsPromo CHAR(1),
       QuoteId VARCHAR(20),
       QuoteItemSeqId VARCHAR(20),
       ShoppingListId VARCHAR(20),
       ShoppingListItemSeqId VARCHAR(20),
       UnitPrice DECIMAL(18,3),
       UnitListPrice DECIMAL(18,3),
       UnitAverageCost DECIMAL(18,2),
       UnitRecurringPrice DECIMAL(18,2),
       IsModifiedPrice CHAR(1),
       RecurringFreqUomId VARCHAR(20),
       ItemDescription VARCHAR(255),
       Comments VARCHAR(255),
       CorrespondingPoId VARCHAR(20),
       StatusId VARCHAR(20),
       SyncStatusId VARCHAR(20),
       EstimatedShipDate DATETIME,
       EstimatedDeliveryDate DATETIME,
       AutoCancelDate DATETIME,
       DontCancelSetDate DATETIME,
       DontCancelSetBy VARCHAR(250),
       ShipBeforeDate DATETIME,
       ShipAfterDate DATETIME,
       CancelBackOrderDate DATETIME,
       OverrideGlAccountId VARCHAR(20),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (OrderItemIdOrderId, OrderItemIdOrderItemSeqId)
    );

    create table OrderItemStateEvents (
        OrderItemIdOrderId VARCHAR(20) not null,
       OrderItemIdOrderItemSeqId VARCHAR(20) not null,
       OrderVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductId VARCHAR(60),
       ExternalProductId VARCHAR(60),
       Quantity DECIMAL(18,6),
       CancelQuantity DECIMAL(18,6),
       SelectedAmount DECIMAL(18,6),
       ExternalId VARCHAR(20),
       OrderItemTypeId VARCHAR(20),
       OrderItemGroupSeqId VARCHAR(20),
       IsItemGroupPrimary CHAR(1),
       FromInventoryItemId VARCHAR(20),
       IsPromo CHAR(1),
       QuoteId VARCHAR(20),
       QuoteItemSeqId VARCHAR(20),
       ShoppingListId VARCHAR(20),
       ShoppingListItemSeqId VARCHAR(20),
       UnitPrice DECIMAL(18,3),
       UnitListPrice DECIMAL(18,3),
       UnitAverageCost DECIMAL(18,2),
       UnitRecurringPrice DECIMAL(18,2),
       IsModifiedPrice CHAR(1),
       RecurringFreqUomId VARCHAR(20),
       ItemDescription VARCHAR(255),
       Comments VARCHAR(255),
       CorrespondingPoId VARCHAR(20),
       StatusId VARCHAR(20),
       SyncStatusId VARCHAR(20),
       EstimatedShipDate DATETIME,
       EstimatedDeliveryDate DATETIME,
       AutoCancelDate DATETIME,
       DontCancelSetDate DATETIME,
       DontCancelSetBy VARCHAR(250),
       ShipBeforeDate DATETIME,
       ShipAfterDate DATETIME,
       CancelBackOrderDate DATETIME,
       OverrideGlAccountId VARCHAR(20),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyExternalProductIdRemoved TINYINT(1),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertyCancelQuantityRemoved TINYINT(1),
       IsPropertySelectedAmountRemoved TINYINT(1),
       IsPropertyExternalIdRemoved TINYINT(1),
       IsPropertyOrderItemTypeIdRemoved TINYINT(1),
       IsPropertyOrderItemGroupSeqIdRemoved TINYINT(1),
       IsPropertyIsItemGroupPrimaryRemoved TINYINT(1),
       IsPropertyFromInventoryItemIdRemoved TINYINT(1),
       IsPropertyIsPromoRemoved TINYINT(1),
       IsPropertyQuoteIdRemoved TINYINT(1),
       IsPropertyQuoteItemSeqIdRemoved TINYINT(1),
       IsPropertyShoppingListIdRemoved TINYINT(1),
       IsPropertyShoppingListItemSeqIdRemoved TINYINT(1),
       IsPropertyUnitPriceRemoved TINYINT(1),
       IsPropertyUnitListPriceRemoved TINYINT(1),
       IsPropertyUnitAverageCostRemoved TINYINT(1),
       IsPropertyUnitRecurringPriceRemoved TINYINT(1),
       IsPropertyIsModifiedPriceRemoved TINYINT(1),
       IsPropertyRecurringFreqUomIdRemoved TINYINT(1),
       IsPropertyItemDescriptionRemoved TINYINT(1),
       IsPropertyCommentsRemoved TINYINT(1),
       IsPropertyCorrespondingPoIdRemoved TINYINT(1),
       IsPropertyStatusIdRemoved TINYINT(1),
       IsPropertySyncStatusIdRemoved TINYINT(1),
       IsPropertyEstimatedShipDateRemoved TINYINT(1),
       IsPropertyEstimatedDeliveryDateRemoved TINYINT(1),
       IsPropertyAutoCancelDateRemoved TINYINT(1),
       IsPropertyDontCancelSetDateRemoved TINYINT(1),
       IsPropertyDontCancelSetByRemoved TINYINT(1),
       IsPropertyShipBeforeDateRemoved TINYINT(1),
       IsPropertyShipAfterDateRemoved TINYINT(1),
       IsPropertyCancelBackOrderDateRemoved TINYINT(1),
       IsPropertyOverrideGlAccountIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (OrderItemIdOrderId, OrderItemIdOrderItemSeqId, OrderVersion)
    );

    create table OrderShipments (
        OrderShipmentIdOrderId VARCHAR(20) not null,
       OrderShipmentIdOrderItemSeqId VARCHAR(20) not null,
       OrderShipmentIdShipmentId VARCHAR(20) not null,
       OrderShipmentIdShipmentItemSeqId VARCHAR(20) not null,
       Version BIGINT not null,
       Quantity DECIMAL(18,6),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (OrderShipmentIdOrderId, OrderShipmentIdOrderItemSeqId, OrderShipmentIdShipmentId, OrderShipmentIdShipmentItemSeqId)
    );

    create table OrderShipmentStateEvents (
        OrderShipmentIdOrderId VARCHAR(20) not null,
       OrderShipmentIdOrderItemSeqId VARCHAR(20) not null,
       OrderShipmentIdShipmentId VARCHAR(20) not null,
       OrderShipmentIdShipmentItemSeqId VARCHAR(20) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Quantity DECIMAL(18,6),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (OrderShipmentIdOrderId, OrderShipmentIdOrderItemSeqId, OrderShipmentIdShipmentId, OrderShipmentIdShipmentItemSeqId, Version)
    );

    create table OrganizationStructures (
        IdOrganizationStructureTypeId VARCHAR(255) not null,
       IdParentId VARCHAR(255) not null,
       IdSubsidiaryId VARCHAR(255) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (IdOrganizationStructureTypeId, IdParentId, IdSubsidiaryId)
    );

    create table OrganizationStructureStateEvents (
        IdOrganizationStructureTypeId VARCHAR(255) not null,
       IdParentId VARCHAR(255) not null,
       IdSubsidiaryId VARCHAR(255) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (IdOrganizationStructureTypeId, IdParentId, IdSubsidiaryId, Version)
    );

    create table OrganizationStructureTypes (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (Id)
    );

    create table OrganizationStructureTypeStateEvents (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (Id, Version)
    );

    create table Parties (
        PartyId VARCHAR(50) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (PartyId)
    );

    create table Organizations (
        PartyId VARCHAR(50) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       OrganizationName VARCHAR(255),
       Description VARCHAR(255),
       Type VARCHAR(255),
       IsSummary TINYINT(1),
       primary key (PartyId)
    );

    create table PartyStateEvents (
        PartyId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       PartyTypeId VARCHAR(20),
       OrganizationName VARCHAR(255),
       Description VARCHAR(255),
       Type VARCHAR(255),
       IsSummary TINYINT(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyPartyTypeIdRemoved TINYINT(1),
       IsPropertyOrganizationNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyTypeRemoved TINYINT(1),
       IsPropertyIsSummaryRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (PartyId, Version)
    );

    create table PhysicalInventories (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       DocumentStatusId VARCHAR(255),
       WarehouseId VARCHAR(255),
       LocatorIdPattern VARCHAR(255),
       ProductIdPattern VARCHAR(60),
       Posted TINYINT(1),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DocumentTypeId VARCHAR(255),
       MovementDate DATETIME,
       Description VARCHAR(255),
       IsApproved TINYINT(1),
       ApprovalAmount NUMERIC(19,5),
       IsQuantityUpdated TINYINT(1),
       ReversalDocumentNumber VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (DocumentNumber)
    );

    create table PhysicalInventoryStateEvents (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       DocumentStatusId VARCHAR(255),
       WarehouseId VARCHAR(255),
       LocatorIdPattern VARCHAR(255),
       ProductIdPattern VARCHAR(60),
       Posted TINYINT(1),
       Processed TINYINT(1),
       Processing VARCHAR(255),
       DocumentTypeId VARCHAR(255),
       MovementDate DATETIME,
       Description VARCHAR(255),
       IsApproved TINYINT(1),
       ApprovalAmount NUMERIC(19,5),
       IsQuantityUpdated TINYINT(1),
       ReversalDocumentNumber VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDocumentStatusIdRemoved TINYINT(1),
       IsPropertyWarehouseIdRemoved TINYINT(1),
       IsPropertyLocatorIdPatternRemoved TINYINT(1),
       IsPropertyProductIdPatternRemoved TINYINT(1),
       IsPropertyPostedRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyProcessingRemoved TINYINT(1),
       IsPropertyDocumentTypeIdRemoved TINYINT(1),
       IsPropertyMovementDateRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyIsApprovedRemoved TINYINT(1),
       IsPropertyApprovalAmountRemoved TINYINT(1),
       IsPropertyIsQuantityUpdatedRemoved TINYINT(1),
       IsPropertyReversalDocumentNumberRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (DocumentNumber, Version)
    );

    create table PhysicalInventoryLines (
        PhysicalInventoryLineIdPhysicalInventoryDocumentNumber VARCHAR(50) not null,
       ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       BookQuantity NUMERIC(19,5),
       CountedQuantity NUMERIC(19,5),
       Processed TINYINT(1),
       ReversalLineNumber BIGINT,
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (PhysicalInventoryLineIdPhysicalInventoryDocumentNumber, ProductId, LocatorId, AttributeSetInstanceId)
    );

    create table PhysicalInventoryLineStateEvents (
        PhysicalInventoryLineIdPhysicalInventoryDocumentNumber VARCHAR(50) not null,
       ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       PhysicalInventoryVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       BookQuantity NUMERIC(19,5),
       CountedQuantity NUMERIC(19,5),
       Processed TINYINT(1),
       ReversalLineNumber BIGINT,
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyBookQuantityRemoved TINYINT(1),
       IsPropertyCountedQuantityRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       primary key (PhysicalInventoryLineIdPhysicalInventoryDocumentNumber, ProductId, LocatorId, AttributeSetInstanceId, PhysicalInventoryVersion)
    );

    create table Products (
        ProductId VARCHAR(60) not null,
       Version BIGINT not null,
       ProductTypeId VARCHAR(20),
       PrimaryProductCategoryId VARCHAR(20),
       ManufacturerPartyId VARCHAR(20),
       FacilityId VARCHAR(20),
       IntroductionDate DATETIME,
       ReleaseDate DATETIME,
       SupportDiscontinuationDate DATETIME,
       SalesDiscontinuationDate DATETIME,
       SalesDiscWhenNotAvail CHAR(1),
       InternalName VARCHAR(255),
       BrandName VARCHAR(100),
       Comments VARCHAR(255),
       ProductName VARCHAR(100),
       Description VARCHAR(255),
       PriceDetailText VARCHAR(255),
       SmallImageUrl VARCHAR(2000),
       MediumImageUrl VARCHAR(2000),
       LargeImageUrl VARCHAR(2000),
       DetailImageUrl VARCHAR(2000),
       OriginalImageUrl VARCHAR(2000),
       DetailScreen VARCHAR(255),
       InventoryMessage VARCHAR(255),
       InventoryItemTypeId VARCHAR(20),
       RequireInventory CHAR(1),
       QuantityUomId VARCHAR(20),
       QuantityIncluded DECIMAL(18,6),
       PiecesIncluded DECIMAL(20,0),
       RequireAmount CHAR(1),
       FixedAmount DECIMAL(18,2),
       AmountUomTypeId VARCHAR(20),
       WeightUomId VARCHAR(20),
       ShippingWeight DECIMAL(18,6),
       ProductWeight DECIMAL(18,6),
       HeightUomId VARCHAR(20),
       ProductHeight DECIMAL(18,6),
       ShippingHeight DECIMAL(18,6),
       WidthUomId VARCHAR(20),
       ProductWidth DECIMAL(18,6),
       ShippingWidth DECIMAL(18,6),
       DepthUomId VARCHAR(20),
       ProductDepth DECIMAL(18,6),
       ShippingDepth DECIMAL(18,6),
       DiameterUomId VARCHAR(20),
       ProductDiameter DECIMAL(18,6),
       ProductRating DECIMAL(18,6),
       RatingTypeEnum VARCHAR(20),
       Returnable CHAR(1),
       Taxable CHAR(1),
       ChargeShipping CHAR(1),
       AutoCreateKeywords CHAR(1),
       IncludeInPromotions CHAR(1),
       IsVirtual CHAR(1),
       IsVariant CHAR(1),
       VirtualVariantMethodEnum VARCHAR(20),
       InShippingBox CHAR(1),
       DefaultShipmentBoxTypeId VARCHAR(20),
       IsSerialNumbered TINYINT(1),
       IsManagedByLot TINYINT(1),
       AttributeSetId VARCHAR(255),
       AttributeSetInstanceId VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ProductId)
    );

    create table ProductStateEvents (
        ProductId VARCHAR(60) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductTypeId VARCHAR(20),
       PrimaryProductCategoryId VARCHAR(20),
       ManufacturerPartyId VARCHAR(20),
       FacilityId VARCHAR(20),
       IntroductionDate DATETIME,
       ReleaseDate DATETIME,
       SupportDiscontinuationDate DATETIME,
       SalesDiscontinuationDate DATETIME,
       SalesDiscWhenNotAvail CHAR(1),
       InternalName VARCHAR(255),
       BrandName VARCHAR(100),
       Comments VARCHAR(255),
       ProductName VARCHAR(100),
       Description VARCHAR(255),
       PriceDetailText VARCHAR(255),
       SmallImageUrl VARCHAR(2000),
       MediumImageUrl VARCHAR(2000),
       LargeImageUrl VARCHAR(2000),
       DetailImageUrl VARCHAR(2000),
       OriginalImageUrl VARCHAR(2000),
       DetailScreen VARCHAR(255),
       InventoryMessage VARCHAR(255),
       InventoryItemTypeId VARCHAR(20),
       RequireInventory CHAR(1),
       QuantityUomId VARCHAR(20),
       QuantityIncluded DECIMAL(18,6),
       PiecesIncluded DECIMAL(20,0),
       RequireAmount CHAR(1),
       FixedAmount DECIMAL(18,2),
       AmountUomTypeId VARCHAR(20),
       WeightUomId VARCHAR(20),
       ShippingWeight DECIMAL(18,6),
       ProductWeight DECIMAL(18,6),
       HeightUomId VARCHAR(20),
       ProductHeight DECIMAL(18,6),
       ShippingHeight DECIMAL(18,6),
       WidthUomId VARCHAR(20),
       ProductWidth DECIMAL(18,6),
       ShippingWidth DECIMAL(18,6),
       DepthUomId VARCHAR(20),
       ProductDepth DECIMAL(18,6),
       ShippingDepth DECIMAL(18,6),
       DiameterUomId VARCHAR(20),
       ProductDiameter DECIMAL(18,6),
       ProductRating DECIMAL(18,6),
       RatingTypeEnum VARCHAR(20),
       Returnable CHAR(1),
       Taxable CHAR(1),
       ChargeShipping CHAR(1),
       AutoCreateKeywords CHAR(1),
       IncludeInPromotions CHAR(1),
       IsVirtual CHAR(1),
       IsVariant CHAR(1),
       VirtualVariantMethodEnum VARCHAR(20),
       InShippingBox CHAR(1),
       DefaultShipmentBoxTypeId VARCHAR(20),
       IsSerialNumbered TINYINT(1),
       IsManagedByLot TINYINT(1),
       AttributeSetId VARCHAR(255),
       AttributeSetInstanceId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyProductTypeIdRemoved TINYINT(1),
       IsPropertyPrimaryProductCategoryIdRemoved TINYINT(1),
       IsPropertyManufacturerPartyIdRemoved TINYINT(1),
       IsPropertyFacilityIdRemoved TINYINT(1),
       IsPropertyIntroductionDateRemoved TINYINT(1),
       IsPropertyReleaseDateRemoved TINYINT(1),
       IsPropertySupportDiscontinuationDateRemoved TINYINT(1),
       IsPropertySalesDiscontinuationDateRemoved TINYINT(1),
       IsPropertySalesDiscWhenNotAvailRemoved TINYINT(1),
       IsPropertyInternalNameRemoved TINYINT(1),
       IsPropertyBrandNameRemoved TINYINT(1),
       IsPropertyCommentsRemoved TINYINT(1),
       IsPropertyProductNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyPriceDetailTextRemoved TINYINT(1),
       IsPropertySmallImageUrlRemoved TINYINT(1),
       IsPropertyMediumImageUrlRemoved TINYINT(1),
       IsPropertyLargeImageUrlRemoved TINYINT(1),
       IsPropertyDetailImageUrlRemoved TINYINT(1),
       IsPropertyOriginalImageUrlRemoved TINYINT(1),
       IsPropertyDetailScreenRemoved TINYINT(1),
       IsPropertyInventoryMessageRemoved TINYINT(1),
       IsPropertyInventoryItemTypeIdRemoved TINYINT(1),
       IsPropertyRequireInventoryRemoved TINYINT(1),
       IsPropertyQuantityUomIdRemoved TINYINT(1),
       IsPropertyQuantityIncludedRemoved TINYINT(1),
       IsPropertyPiecesIncludedRemoved TINYINT(1),
       IsPropertyRequireAmountRemoved TINYINT(1),
       IsPropertyFixedAmountRemoved TINYINT(1),
       IsPropertyAmountUomTypeIdRemoved TINYINT(1),
       IsPropertyWeightUomIdRemoved TINYINT(1),
       IsPropertyShippingWeightRemoved TINYINT(1),
       IsPropertyProductWeightRemoved TINYINT(1),
       IsPropertyHeightUomIdRemoved TINYINT(1),
       IsPropertyProductHeightRemoved TINYINT(1),
       IsPropertyShippingHeightRemoved TINYINT(1),
       IsPropertyWidthUomIdRemoved TINYINT(1),
       IsPropertyProductWidthRemoved TINYINT(1),
       IsPropertyShippingWidthRemoved TINYINT(1),
       IsPropertyDepthUomIdRemoved TINYINT(1),
       IsPropertyProductDepthRemoved TINYINT(1),
       IsPropertyShippingDepthRemoved TINYINT(1),
       IsPropertyDiameterUomIdRemoved TINYINT(1),
       IsPropertyProductDiameterRemoved TINYINT(1),
       IsPropertyProductRatingRemoved TINYINT(1),
       IsPropertyRatingTypeEnumRemoved TINYINT(1),
       IsPropertyReturnableRemoved TINYINT(1),
       IsPropertyTaxableRemoved TINYINT(1),
       IsPropertyChargeShippingRemoved TINYINT(1),
       IsPropertyAutoCreateKeywordsRemoved TINYINT(1),
       IsPropertyIncludeInPromotionsRemoved TINYINT(1),
       IsPropertyIsVirtualRemoved TINYINT(1),
       IsPropertyIsVariantRemoved TINYINT(1),
       IsPropertyVirtualVariantMethodEnumRemoved TINYINT(1),
       IsPropertyInShippingBoxRemoved TINYINT(1),
       IsPropertyDefaultShipmentBoxTypeIdRemoved TINYINT(1),
       IsPropertyIsSerialNumberedRemoved TINYINT(1),
       IsPropertyIsManagedByLotRemoved TINYINT(1),
       IsPropertyAttributeSetIdRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (ProductId, Version)
    );

    create table ProductCategories (
        ProductCategoryId VARCHAR(20) not null,
       Version BIGINT not null,
       ProductCategoryTypeId VARCHAR(20),
       PrimaryParentCategoryId VARCHAR(20),
       CategoryName VARCHAR(100),
       Description VARCHAR(255),
       CategoryImageUrl VARCHAR(2000),
       DetailScreen VARCHAR(255),
       ShowInSelect TINYINT(1),
       AttributeSetId VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ProductCategoryId)
    );

    create table ProductCategoryStateEvents (
        ProductCategoryId VARCHAR(20) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductCategoryTypeId VARCHAR(20),
       PrimaryParentCategoryId VARCHAR(20),
       CategoryName VARCHAR(100),
       Description VARCHAR(255),
       CategoryImageUrl VARCHAR(2000),
       DetailScreen VARCHAR(255),
       ShowInSelect TINYINT(1),
       AttributeSetId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyProductCategoryTypeIdRemoved TINYINT(1),
       IsPropertyPrimaryParentCategoryIdRemoved TINYINT(1),
       IsPropertyCategoryNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyCategoryImageUrlRemoved TINYINT(1),
       IsPropertyDetailScreenRemoved TINYINT(1),
       IsPropertyShowInSelectRemoved TINYINT(1),
       IsPropertyAttributeSetIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (ProductCategoryId, Version)
    );

    create table ProductCategoryMembers (
        ProductCategoryMemberIdProductCategoryId VARCHAR(20) not null,
       ProductCategoryMemberIdProductId VARCHAR(60) not null,
       Version BIGINT not null,
       ThruDate DATETIME,
       Comments VARCHAR(255),
       SequenceNum DECIMAL(20,0),
       Quantity DECIMAL(18,6),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ProductCategoryMemberIdProductCategoryId, ProductCategoryMemberIdProductId)
    );

    create table ProductCategoryMemberStateEvents (
        ProductCategoryMemberIdProductCategoryId VARCHAR(20) not null,
       ProductCategoryMemberIdProductId VARCHAR(60) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ThruDate DATETIME,
       Comments VARCHAR(255),
       SequenceNum DECIMAL(20,0),
       Quantity DECIMAL(18,6),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyThruDateRemoved TINYINT(1),
       IsPropertyCommentsRemoved TINYINT(1),
       IsPropertySequenceNumRemoved TINYINT(1),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (ProductCategoryMemberIdProductCategoryId, ProductCategoryMemberIdProductId, Version)
    );

    create table RejectionReasons (
        RejectionReasonId VARCHAR(60) not null,
       Version BIGINT not null,
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (RejectionReasonId)
    );

    create table RejectionReasonStateEvents (
        RejectionReasonId VARCHAR(60) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (RejectionReasonId, Version)
    );

    create table SellableInventoryItems (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       SellableQuantity NUMERIC(19,5),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (ProductId, LocatorId, AttributeSetInstanceId)
    );

    create table SellableInventoryItemEntries (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       Version BIGINT not null,
       SellableQuantity NUMERIC(19,5),
       SrcEventProductId VARCHAR(60),
       SrcEventLocatorId VARCHAR(50),
       SrcEventAttributeSetInstanceId VARCHAR(50),
       SrcEventEntrySeqId BIGINT,
       SrcEventInventoryPostingRuleId VARCHAR(50),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId),
      unique (SrcEventProductId, SrcEventLocatorId, SrcEventAttributeSetInstanceId, SrcEventEntrySeqId, SrcEventInventoryPostingRuleId)
    );

    create table Shipments (
        ShipmentId VARCHAR(20) not null,
       Version BIGINT not null,
       ShipmentTypeId VARCHAR(20),
       StatusId VARCHAR(20),
       PrimaryOrderId VARCHAR(20),
       PrimaryReturnId VARCHAR(20),
       PicklistBinId VARCHAR(20),
       EstimatedReadyDate DATETIME,
       EstimatedShipDate DATETIME,
       EstimatedShipWorkEffId VARCHAR(20),
       EstimatedArrivalDate DATETIME,
       EstimatedArrivalWorkEffId VARCHAR(20),
       LatestCancelDate DATETIME,
       EstimatedShipCost DECIMAL(18,2),
       CurrencyUomId VARCHAR(20),
       HandlingInstructions VARCHAR(255),
       OriginFacilityId VARCHAR(20),
       DestinationFacilityId VARCHAR(20),
       OriginContactMechId VARCHAR(20),
       OriginTelecomNumberId VARCHAR(20),
       DestinationContactMechId VARCHAR(20),
       DestinationTelecomNumberId VARCHAR(20),
       PartyIdTo VARCHAR(20),
       PartyIdFrom VARCHAR(20),
       AdditionalShippingCharge DECIMAL(18,2),
       AddtlShippingChargeDesc VARCHAR(255),
       ShipperId VARCHAR(20),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ShipmentId)
    );

    create table ShipmentStateEvents (
        ShipmentId VARCHAR(20) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ShipmentTypeId VARCHAR(20),
       StatusId VARCHAR(20),
       PrimaryOrderId VARCHAR(20),
       PrimaryReturnId VARCHAR(20),
       PicklistBinId VARCHAR(20),
       EstimatedReadyDate DATETIME,
       EstimatedShipDate DATETIME,
       EstimatedShipWorkEffId VARCHAR(20),
       EstimatedArrivalDate DATETIME,
       EstimatedArrivalWorkEffId VARCHAR(20),
       LatestCancelDate DATETIME,
       EstimatedShipCost DECIMAL(18,2),
       CurrencyUomId VARCHAR(20),
       HandlingInstructions VARCHAR(255),
       OriginFacilityId VARCHAR(20),
       DestinationFacilityId VARCHAR(20),
       OriginContactMechId VARCHAR(20),
       OriginTelecomNumberId VARCHAR(20),
       DestinationContactMechId VARCHAR(20),
       DestinationTelecomNumberId VARCHAR(20),
       PartyIdTo VARCHAR(20),
       PartyIdFrom VARCHAR(20),
       AdditionalShippingCharge DECIMAL(18,2),
       AddtlShippingChargeDesc VARCHAR(255),
       ShipperId VARCHAR(20),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyShipmentTypeIdRemoved TINYINT(1),
       IsPropertyStatusIdRemoved TINYINT(1),
       IsPropertyPrimaryOrderIdRemoved TINYINT(1),
       IsPropertyPrimaryReturnIdRemoved TINYINT(1),
       IsPropertyPicklistBinIdRemoved TINYINT(1),
       IsPropertyEstimatedReadyDateRemoved TINYINT(1),
       IsPropertyEstimatedShipDateRemoved TINYINT(1),
       IsPropertyEstimatedShipWorkEffIdRemoved TINYINT(1),
       IsPropertyEstimatedArrivalDateRemoved TINYINT(1),
       IsPropertyEstimatedArrivalWorkEffIdRemoved TINYINT(1),
       IsPropertyLatestCancelDateRemoved TINYINT(1),
       IsPropertyEstimatedShipCostRemoved TINYINT(1),
       IsPropertyCurrencyUomIdRemoved TINYINT(1),
       IsPropertyHandlingInstructionsRemoved TINYINT(1),
       IsPropertyOriginFacilityIdRemoved TINYINT(1),
       IsPropertyDestinationFacilityIdRemoved TINYINT(1),
       IsPropertyOriginContactMechIdRemoved TINYINT(1),
       IsPropertyOriginTelecomNumberIdRemoved TINYINT(1),
       IsPropertyDestinationContactMechIdRemoved TINYINT(1),
       IsPropertyDestinationTelecomNumberIdRemoved TINYINT(1),
       IsPropertyPartyIdToRemoved TINYINT(1),
       IsPropertyPartyIdFromRemoved TINYINT(1),
       IsPropertyAdditionalShippingChargeRemoved TINYINT(1),
       IsPropertyAddtlShippingChargeDescRemoved TINYINT(1),
       IsPropertyShipperIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (ShipmentId, Version)
    );

    create table ShipmentItems (
        ShipmentItemIdShipmentId VARCHAR(20) not null,
       ShipmentItemIdShipmentItemSeqId VARCHAR(20) not null,
       Version BIGINT not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Quantity DECIMAL(18,6) not null,
       TargetQuantity DECIMAL(18,6),
       ShipmentContentDescription VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ShipmentItemIdShipmentId, ShipmentItemIdShipmentItemSeqId)
    );

    create table ShipmentItemStateEvents (
        ShipmentItemIdShipmentId VARCHAR(20) not null,
       ShipmentItemIdShipmentItemSeqId VARCHAR(20) not null,
       ShipmentVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Quantity DECIMAL(18,6),
       TargetQuantity DECIMAL(18,6),
       ShipmentContentDescription VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertyTargetQuantityRemoved TINYINT(1),
       IsPropertyShipmentContentDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (ShipmentItemIdShipmentId, ShipmentItemIdShipmentItemSeqId, ShipmentVersion)
    );

    create table ShipmentReceipts (
        ShipmentReceiptIdShipmentId VARCHAR(20) not null,
       ShipmentReceiptIdReceiptSeqId VARCHAR(20) not null,
       Version BIGINT not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       ShipmentItemSeqId VARCHAR(20),
       RejectionReasonId VARCHAR(60),
       DamageStatusId VARCHAR(20),
       DamageReasonId VARCHAR(60),
       ReceivedBy VARCHAR(250),
       DatetimeReceived DATETIME,
       ItemDescription VARCHAR(255),
       AcceptedQuantity DECIMAL(18,6) not null,
       RejectedQuantity DECIMAL(18,6) not null,
       DamagedQuantity DECIMAL(18,6) not null,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ShipmentReceiptIdShipmentId, ShipmentReceiptIdReceiptSeqId)
    );

    create table ShipmentReceiptStateEvents (
        ShipmentReceiptIdShipmentId VARCHAR(20) not null,
       ShipmentReceiptIdReceiptSeqId VARCHAR(20) not null,
       ShipmentVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       ShipmentItemSeqId VARCHAR(20),
       RejectionReasonId VARCHAR(60),
       DamageStatusId VARCHAR(20),
       DamageReasonId VARCHAR(60),
       ReceivedBy VARCHAR(250),
       DatetimeReceived DATETIME,
       ItemDescription VARCHAR(255),
       AcceptedQuantity DECIMAL(18,6),
       RejectedQuantity DECIMAL(18,6),
       DamagedQuantity DECIMAL(18,6),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyShipmentItemSeqIdRemoved TINYINT(1),
       IsPropertyRejectionReasonIdRemoved TINYINT(1),
       IsPropertyDamageStatusIdRemoved TINYINT(1),
       IsPropertyDamageReasonIdRemoved TINYINT(1),
       IsPropertyReceivedByRemoved TINYINT(1),
       IsPropertyDatetimeReceivedRemoved TINYINT(1),
       IsPropertyItemDescriptionRemoved TINYINT(1),
       IsPropertyAcceptedQuantityRemoved TINYINT(1),
       IsPropertyRejectedQuantityRemoved TINYINT(1),
       IsPropertyDamagedQuantityRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (ShipmentReceiptIdShipmentId, ShipmentReceiptIdReceiptSeqId, ShipmentVersion)
    );

    create table ShipmentTypes (
        ShipmentTypeId VARCHAR(20) not null,
       Version BIGINT not null,
       ParentTypeId VARCHAR(20),
       HasTable CHAR(1),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (ShipmentTypeId)
    );

    create table StatusItems (
        StatusId VARCHAR(20) not null,
       Version BIGINT not null,
       StatusTypeId VARCHAR(20),
       StatusCode VARCHAR(60),
       SequenceId VARCHAR(20),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (StatusId)
    );

    create table SupplierProducts (
        SupplierProductIdProductId VARCHAR(60) not null,
       SupplierProductIdPartyId VARCHAR(20) not null,
       SupplierProductIdCurrencyUomId VARCHAR(20) not null,
       SupplierProductIdMinimumOrderQuantity DECIMAL(18,6) not null,
       Version BIGINT not null,
       AvailableThruDate DATETIME,
       SupplierPrefOrderId VARCHAR(20),
       SupplierRatingTypeId VARCHAR(20),
       StandardLeadTimeDays DECIMAL(18,6),
       ManufacturingLeadTimeDays DECIMAL(18,6),
       DeliveryLeadTimeDays DECIMAL(18,6),
       QuantityUomId VARCHAR(20),
       LastPrice DECIMAL(18,3),
       ShippingPrice DECIMAL(18,3),
       ExternalProductName VARCHAR(100),
       ExternalProductId VARCHAR(60),
       CanDropShip TINYINT(1),
       Comments VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (SupplierProductIdProductId, SupplierProductIdPartyId, SupplierProductIdCurrencyUomId, SupplierProductIdMinimumOrderQuantity)
    );

    create table SupplierProductStateEvents (
        SupplierProductIdProductId VARCHAR(60) not null,
       SupplierProductIdPartyId VARCHAR(20) not null,
       SupplierProductIdCurrencyUomId VARCHAR(20) not null,
       SupplierProductIdMinimumOrderQuantity DECIMAL(18,6) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       AvailableThruDate DATETIME,
       SupplierPrefOrderId VARCHAR(20),
       SupplierRatingTypeId VARCHAR(20),
       StandardLeadTimeDays DECIMAL(18,6),
       ManufacturingLeadTimeDays DECIMAL(18,6),
       DeliveryLeadTimeDays DECIMAL(18,6),
       QuantityUomId VARCHAR(20),
       LastPrice DECIMAL(18,3),
       ShippingPrice DECIMAL(18,3),
       ExternalProductName VARCHAR(100),
       ExternalProductId VARCHAR(60),
       CanDropShip TINYINT(1),
       Comments VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyAvailableThruDateRemoved TINYINT(1),
       IsPropertySupplierPrefOrderIdRemoved TINYINT(1),
       IsPropertySupplierRatingTypeIdRemoved TINYINT(1),
       IsPropertyStandardLeadTimeDaysRemoved TINYINT(1),
       IsPropertyManufacturingLeadTimeDaysRemoved TINYINT(1),
       IsPropertyDeliveryLeadTimeDaysRemoved TINYINT(1),
       IsPropertyQuantityUomIdRemoved TINYINT(1),
       IsPropertyLastPriceRemoved TINYINT(1),
       IsPropertyShippingPriceRemoved TINYINT(1),
       IsPropertyExternalProductNameRemoved TINYINT(1),
       IsPropertyExternalProductIdRemoved TINYINT(1),
       IsPropertyCanDropShipRemoved TINYINT(1),
       IsPropertyCommentsRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (SupplierProductIdProductId, SupplierProductIdPartyId, SupplierProductIdCurrencyUomId, SupplierProductIdMinimumOrderQuantity, Version)
    );

    create table Uoms (
        UomId VARCHAR(20) not null,
       Version BIGINT not null,
       UomTypeId VARCHAR(20),
       Abbreviation VARCHAR(60),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (UomId)
    );

    create table UomStateEvents (
        UomId VARCHAR(20) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       UomTypeId VARCHAR(20),
       Abbreviation VARCHAR(60),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyUomTypeIdRemoved TINYINT(1),
       IsPropertyAbbreviationRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (UomId, Version)
    );

    create table UomConversions (
        UomConversionIdUomId VARCHAR(20) not null,
       UomConversionIdUomIdTo VARCHAR(20) not null,
       Version BIGINT not null,
       ConversionFactor DOUBLE,
       CustomMethodId VARCHAR(20),
       DecimalScale DECIMAL(20,0),
       RoundingMode VARCHAR(20),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (UomConversionIdUomId, UomConversionIdUomIdTo)
    );

    create table UomConversionStateEvents (
        UomConversionIdUomId VARCHAR(20) not null,
       UomConversionIdUomIdTo VARCHAR(20) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ConversionFactor DOUBLE,
       CustomMethodId VARCHAR(20),
       DecimalScale DECIMAL(20,0),
       RoundingMode VARCHAR(20),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyConversionFactorRemoved TINYINT(1),
       IsPropertyCustomMethodIdRemoved TINYINT(1),
       IsPropertyDecimalScaleRemoved TINYINT(1),
       IsPropertyRoundingModeRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (UomConversionIdUomId, UomConversionIdUomIdTo, Version)
    );

    create table UomTypes (
        UomTypeId VARCHAR(20) not null,
       Version BIGINT not null,
       ParentTypeId VARCHAR(20),
       HasTable CHAR(1),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (UomTypeId)
    );

    create table Warehouses (
        WarehouseId VARCHAR(50) not null,
       Version BIGINT not null,
       WarehouseName VARCHAR(255),
       Description VARCHAR(255),
       IsInTransit TINYINT(1),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (WarehouseId)
    );

    create table WarehouseStateEvents (
        WarehouseId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       WarehouseName VARCHAR(255),
       Description VARCHAR(255),
       IsInTransit TINYINT(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyWarehouseNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyIsInTransitRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (WarehouseId, Version)
    );

    create table Locators (
        LocatorId VARCHAR(50) not null,
       Version BIGINT not null,
       WarehouseId VARCHAR(255) not null,
       ParentLocatorId VARCHAR(255),
       LocatorType VARCHAR(255),
       PriorityNumber VARCHAR(255),
       IsDefault TINYINT(1),
       X VARCHAR(255),
       Y VARCHAR(255),
       Z VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (LocatorId)
    );

    create table LocatorStateEvents (
        LocatorId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       WarehouseId VARCHAR(255),
       ParentLocatorId VARCHAR(255),
       LocatorType VARCHAR(255),
       PriorityNumber VARCHAR(255),
       IsDefault TINYINT(1),
       X VARCHAR(255),
       Y VARCHAR(255),
       Z VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyWarehouseIdRemoved TINYINT(1),
       IsPropertyParentLocatorIdRemoved TINYINT(1),
       IsPropertyLocatorTypeRemoved TINYINT(1),
       IsPropertyPriorityNumberRemoved TINYINT(1),
       IsPropertyIsDefaultRemoved TINYINT(1),
       IsPropertyXRemoved TINYINT(1),
       IsPropertyYRemoved TINYINT(1),
       IsPropertyZRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (LocatorId, Version)
    );

    create table InOutLine_RV (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdLineNumber VARCHAR(50) not null,
       InOutVersion BIGINT not null,
       LocatorId VARCHAR(255),
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Description VARCHAR(255),
       QuantityUomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       Processed TINYINT(1),
       RmaLineNumber VARCHAR(255),
       ReversalLineNumber VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       InOutDocumentStatusId VARCHAR(255),
       InOutPosted TINYINT(1),
       InOutProcessed TINYINT(1),
       InOutProcessing VARCHAR(255),
       InOutDocumentTypeId VARCHAR(255),
       InOutDescription VARCHAR(255),
       InOutOrderId VARCHAR(255),
       InOutDateOrdered DATETIME,
       InOutIsPrinted TINYINT(1),
       InOutMovementTypeId VARCHAR(255),
       InOutMovementDate DATETIME,
       InOutBusinessPartnerId VARCHAR(255),
       InOutWarehouseId VARCHAR(255),
       InOutPOReference VARCHAR(255),
       InOutFreightAmount NUMERIC(19,5),
       InOutShipperId VARCHAR(255),
       InOutChargeAmount NUMERIC(19,5),
       InOutDatePrinted DATETIME,
       InOutCreatedFrom VARCHAR(255),
       InOutSalesRepresentativeId VARCHAR(255),
       InOutNumberOfPackages INTEGER,
       InOutPickDate DATETIME,
       InOutShipDate DATETIME,
       InOutTrackingNumber VARCHAR(255),
       InOutDateReceived DATETIME,
       InOutIsInTransit TINYINT(1),
       InOutIsApproved TINYINT(1),
       InOutIsInDispute TINYINT(1),
       InOutRmaDocumentNumber VARCHAR(255),
       InOutReversalDocumentNumber VARCHAR(255),
       InOutCreatedBy VARCHAR(255),
       InOutCreatedAt DATETIME,
       InOutUpdatedBy VARCHAR(255),
       InOutUpdatedAt DATETIME,
       InOutActive TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdLineNumber)
    );

    create table InOutLineMvoStateEvents (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdLineNumber VARCHAR(50) not null,
       InOutVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       LocatorId VARCHAR(255),
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Description VARCHAR(255),
       QuantityUomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       Processed TINYINT(1),
       RmaLineNumber VARCHAR(255),
       ReversalLineNumber VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       InOutDocumentStatusId VARCHAR(255),
       InOutPosted TINYINT(1),
       InOutProcessed TINYINT(1),
       InOutProcessing VARCHAR(255),
       InOutDocumentTypeId VARCHAR(255),
       InOutDescription VARCHAR(255),
       InOutOrderId VARCHAR(255),
       InOutDateOrdered DATETIME,
       InOutIsPrinted TINYINT(1),
       InOutMovementTypeId VARCHAR(255),
       InOutMovementDate DATETIME,
       InOutBusinessPartnerId VARCHAR(255),
       InOutWarehouseId VARCHAR(255),
       InOutPOReference VARCHAR(255),
       InOutFreightAmount NUMERIC(19,5),
       InOutShipperId VARCHAR(255),
       InOutChargeAmount NUMERIC(19,5),
       InOutDatePrinted DATETIME,
       InOutCreatedFrom VARCHAR(255),
       InOutSalesRepresentativeId VARCHAR(255),
       InOutNumberOfPackages INTEGER,
       InOutPickDate DATETIME,
       InOutShipDate DATETIME,
       InOutTrackingNumber VARCHAR(255),
       InOutDateReceived DATETIME,
       InOutIsInTransit TINYINT(1),
       InOutIsApproved TINYINT(1),
       InOutIsInDispute TINYINT(1),
       InOutRmaDocumentNumber VARCHAR(255),
       InOutReversalDocumentNumber VARCHAR(255),
       InOutCreatedBy VARCHAR(255),
       InOutCreatedAt DATETIME,
       InOutUpdatedBy VARCHAR(255),
       InOutUpdatedAt DATETIME,
       InOutActive TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyLocatorIdRemoved TINYINT(1),
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyQuantityUomIdRemoved TINYINT(1),
       IsPropertyMovementQuantityRemoved TINYINT(1),
       IsPropertyPickedQuantityRemoved TINYINT(1),
       IsPropertyIsInvoicedRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyRmaLineNumberRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyInOutDocumentStatusIdRemoved TINYINT(1),
       IsPropertyInOutPostedRemoved TINYINT(1),
       IsPropertyInOutProcessedRemoved TINYINT(1),
       IsPropertyInOutProcessingRemoved TINYINT(1),
       IsPropertyInOutDocumentTypeIdRemoved TINYINT(1),
       IsPropertyInOutDescriptionRemoved TINYINT(1),
       IsPropertyInOutOrderIdRemoved TINYINT(1),
       IsPropertyInOutDateOrderedRemoved TINYINT(1),
       IsPropertyInOutIsPrintedRemoved TINYINT(1),
       IsPropertyInOutMovementTypeIdRemoved TINYINT(1),
       IsPropertyInOutMovementDateRemoved TINYINT(1),
       IsPropertyInOutBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyInOutWarehouseIdRemoved TINYINT(1),
       IsPropertyInOutPOReferenceRemoved TINYINT(1),
       IsPropertyInOutFreightAmountRemoved TINYINT(1),
       IsPropertyInOutShipperIdRemoved TINYINT(1),
       IsPropertyInOutChargeAmountRemoved TINYINT(1),
       IsPropertyInOutDatePrintedRemoved TINYINT(1),
       IsPropertyInOutCreatedFromRemoved TINYINT(1),
       IsPropertyInOutSalesRepresentativeIdRemoved TINYINT(1),
       IsPropertyInOutNumberOfPackagesRemoved TINYINT(1),
       IsPropertyInOutPickDateRemoved TINYINT(1),
       IsPropertyInOutShipDateRemoved TINYINT(1),
       IsPropertyInOutTrackingNumberRemoved TINYINT(1),
       IsPropertyInOutDateReceivedRemoved TINYINT(1),
       IsPropertyInOutIsInTransitRemoved TINYINT(1),
       IsPropertyInOutIsApprovedRemoved TINYINT(1),
       IsPropertyInOutIsInDisputeRemoved TINYINT(1),
       IsPropertyInOutRmaDocumentNumberRemoved TINYINT(1),
       IsPropertyInOutReversalDocumentNumberRemoved TINYINT(1),
       IsPropertyInOutCreatedByRemoved TINYINT(1),
       IsPropertyInOutCreatedAtRemoved TINYINT(1),
       IsPropertyInOutUpdatedByRemoved TINYINT(1),
       IsPropertyInOutUpdatedAtRemoved TINYINT(1),
       IsPropertyInOutActiveRemoved TINYINT(1),
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdLineNumber, InOutVersion)
    );

    create table InventoryItemEntry_RV (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       InventoryItemVersion BIGINT not null,
       OnHandQuantity NUMERIC(19,5),
       InTransitQuantity NUMERIC(19,5),
       ReservedQuantity NUMERIC(19,5),
       OccupiedQuantity NUMERIC(19,5),
       VirtualQuantity NUMERIC(19,5),
       SourceDocumentTypeId VARCHAR(255) not null,
       SourceDocumentNumber VARCHAR(255) not null,
       SourceLineNumber VARCHAR(255),
       SourceLineSeqId INTEGER,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       InventoryItemOnHandQuantity NUMERIC(19,5),
       InventoryItemInTransitQuantity NUMERIC(19,5),
       InventoryItemReservedQuantity NUMERIC(19,5),
       InventoryItemOccupiedQuantity NUMERIC(19,5),
       InventoryItemVirtualQuantity NUMERIC(19,5),
       InventoryItemCreatedBy VARCHAR(255),
       InventoryItemCreatedAt DATETIME,
       InventoryItemUpdatedBy VARCHAR(255),
       InventoryItemUpdatedAt DATETIME,
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId),
      unique (SourceDocumentTypeId, SourceDocumentNumber, SourceLineNumber, SourceLineSeqId)
    );

    create table InventoryItemEntryMvoStateEvents (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       InventoryItemVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       OnHandQuantity NUMERIC(19,5),
       InTransitQuantity NUMERIC(19,5),
       ReservedQuantity NUMERIC(19,5),
       OccupiedQuantity NUMERIC(19,5),
       VirtualQuantity NUMERIC(19,5),
       SourceDocumentTypeId VARCHAR(255),
       SourceDocumentNumber VARCHAR(255),
       SourceLineNumber VARCHAR(255),
       SourceLineSeqId INTEGER,
       Version BIGINT,
       InventoryItemOnHandQuantity NUMERIC(19,5),
       InventoryItemInTransitQuantity NUMERIC(19,5),
       InventoryItemReservedQuantity NUMERIC(19,5),
       InventoryItemOccupiedQuantity NUMERIC(19,5),
       InventoryItemVirtualQuantity NUMERIC(19,5),
       InventoryItemCreatedBy VARCHAR(255),
       InventoryItemCreatedAt DATETIME,
       InventoryItemUpdatedBy VARCHAR(255),
       InventoryItemUpdatedAt DATETIME,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyOnHandQuantityRemoved TINYINT(1),
       IsPropertyInTransitQuantityRemoved TINYINT(1),
       IsPropertyReservedQuantityRemoved TINYINT(1),
       IsPropertyOccupiedQuantityRemoved TINYINT(1),
       IsPropertyVirtualQuantityRemoved TINYINT(1),
       IsPropertySourceRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyInventoryItemOnHandQuantityRemoved TINYINT(1),
       IsPropertyInventoryItemInTransitQuantityRemoved TINYINT(1),
       IsPropertyInventoryItemReservedQuantityRemoved TINYINT(1),
       IsPropertyInventoryItemOccupiedQuantityRemoved TINYINT(1),
       IsPropertyInventoryItemVirtualQuantityRemoved TINYINT(1),
       IsPropertyInventoryItemCreatedByRemoved TINYINT(1),
       IsPropertyInventoryItemCreatedAtRemoved TINYINT(1),
       IsPropertyInventoryItemUpdatedByRemoved TINYINT(1),
       IsPropertyInventoryItemUpdatedAtRemoved TINYINT(1),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId, InventoryItemVersion)
    );

    create table InventoryItemRequirementEntry_RV (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       InventoryItemRequirementVersion BIGINT not null,
       Quantity NUMERIC(19,5),
       SrcEventProductId VARCHAR(60),
       SrcEventLocatorId VARCHAR(50),
       SrcEventAttributeSetInstanceId VARCHAR(50),
       SrcEventEntrySeqId BIGINT,
       SrcEventInventoryPostingRuleId VARCHAR(50),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       InventoryItemRequirementQuantity NUMERIC(19,5),
       InventoryItemRequirementCreatedBy VARCHAR(255),
       InventoryItemRequirementCreatedAt DATETIME,
       InventoryItemRequirementUpdatedBy VARCHAR(255),
       InventoryItemRequirementUpdatedAt DATETIME,
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId),
      unique (SrcEventProductId, SrcEventLocatorId, SrcEventAttributeSetInstanceId, SrcEventEntrySeqId, SrcEventInventoryPostingRuleId)
    );

    create table InventoryItemRequirementEntryMvoStateEvents (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       InventoryItemRequirementVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Quantity NUMERIC(19,5),
       SrcEventProductId VARCHAR(60),
       SrcEventLocatorId VARCHAR(50),
       SrcEventAttributeSetInstanceId VARCHAR(50),
       SrcEventEntrySeqId BIGINT,
       SrcEventInventoryPostingRuleId VARCHAR(50),
       Version BIGINT,
       InventoryItemRequirementQuantity NUMERIC(19,5),
       InventoryItemRequirementCreatedBy VARCHAR(255),
       InventoryItemRequirementCreatedAt DATETIME,
       InventoryItemRequirementUpdatedBy VARCHAR(255),
       InventoryItemRequirementUpdatedAt DATETIME,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertySourceEventIdRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyInventoryItemRequirementQuantityRemoved TINYINT(1),
       IsPropertyInventoryItemRequirementCreatedByRemoved TINYINT(1),
       IsPropertyInventoryItemRequirementCreatedAtRemoved TINYINT(1),
       IsPropertyInventoryItemRequirementUpdatedByRemoved TINYINT(1),
       IsPropertyInventoryItemRequirementUpdatedAtRemoved TINYINT(1),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId, InventoryItemRequirementVersion)
    );

    create table MovementLine_RV (
        MovementLineIdMovementDocumentNumber VARCHAR(50) not null,
       MovementLineIdLineNumber VARCHAR(50) not null,
       MovementVersion BIGINT not null,
       MovementQuantity NUMERIC(19,5),
       ProductId VARCHAR(60),
       LocatorIdFrom VARCHAR(255),
       LocatorIdTo VARCHAR(255),
       AttributeSetInstanceId VARCHAR(255),
       Processed TINYINT(1),
       ReversalLineNumber VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       MovementDocumentStatusId VARCHAR(255),
       MovementMovementDate DATETIME,
       MovementPosted TINYINT(1),
       MovementProcessed TINYINT(1),
       MovementProcessing VARCHAR(255),
       MovementDateReceived DATETIME,
       MovementDocumentTypeId VARCHAR(255),
       MovementIsInTransit TINYINT(1),
       MovementIsApproved TINYINT(1),
       MovementApprovalAmount NUMERIC(19,5),
       MovementShipperId VARCHAR(255),
       MovementSalesRepresentativeId VARCHAR(255),
       MovementBusinessPartnerId VARCHAR(255),
       MovementChargeAmount NUMERIC(19,5),
       MovementCreateFrom VARCHAR(255),
       MovementFreightAmount NUMERIC(19,5),
       MovementReversalDocumentNumber VARCHAR(255),
       MovementWarehouseIdFrom VARCHAR(255),
       MovementWarehouseIdTo VARCHAR(255),
       MovementDescription VARCHAR(255),
       MovementCreatedBy VARCHAR(255),
       MovementCreatedAt DATETIME,
       MovementUpdatedBy VARCHAR(255),
       MovementUpdatedAt DATETIME,
       MovementActive TINYINT(1),
       MovementDeleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (MovementLineIdMovementDocumentNumber, MovementLineIdLineNumber)
    );

    create table MovementLineMvoStateEvents (
        MovementLineIdMovementDocumentNumber VARCHAR(50) not null,
       MovementLineIdLineNumber VARCHAR(50) not null,
       MovementVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       MovementQuantity NUMERIC(19,5),
       ProductId VARCHAR(60),
       LocatorIdFrom VARCHAR(255),
       LocatorIdTo VARCHAR(255),
       AttributeSetInstanceId VARCHAR(255),
       Processed TINYINT(1),
       ReversalLineNumber VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       MovementDocumentStatusId VARCHAR(255),
       MovementMovementDate DATETIME,
       MovementPosted TINYINT(1),
       MovementProcessed TINYINT(1),
       MovementProcessing VARCHAR(255),
       MovementDateReceived DATETIME,
       MovementDocumentTypeId VARCHAR(255),
       MovementIsInTransit TINYINT(1),
       MovementIsApproved TINYINT(1),
       MovementApprovalAmount NUMERIC(19,5),
       MovementShipperId VARCHAR(255),
       MovementSalesRepresentativeId VARCHAR(255),
       MovementBusinessPartnerId VARCHAR(255),
       MovementChargeAmount NUMERIC(19,5),
       MovementCreateFrom VARCHAR(255),
       MovementFreightAmount NUMERIC(19,5),
       MovementReversalDocumentNumber VARCHAR(255),
       MovementWarehouseIdFrom VARCHAR(255),
       MovementWarehouseIdTo VARCHAR(255),
       MovementDescription VARCHAR(255),
       MovementCreatedBy VARCHAR(255),
       MovementCreatedAt DATETIME,
       MovementUpdatedBy VARCHAR(255),
       MovementUpdatedAt DATETIME,
       MovementActive TINYINT(1),
       MovementDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyMovementQuantityRemoved TINYINT(1),
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyLocatorIdFromRemoved TINYINT(1),
       IsPropertyLocatorIdToRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyMovementDocumentStatusIdRemoved TINYINT(1),
       IsPropertyMovementMovementDateRemoved TINYINT(1),
       IsPropertyMovementPostedRemoved TINYINT(1),
       IsPropertyMovementProcessedRemoved TINYINT(1),
       IsPropertyMovementProcessingRemoved TINYINT(1),
       IsPropertyMovementDateReceivedRemoved TINYINT(1),
       IsPropertyMovementDocumentTypeIdRemoved TINYINT(1),
       IsPropertyMovementIsInTransitRemoved TINYINT(1),
       IsPropertyMovementIsApprovedRemoved TINYINT(1),
       IsPropertyMovementApprovalAmountRemoved TINYINT(1),
       IsPropertyMovementShipperIdRemoved TINYINT(1),
       IsPropertyMovementSalesRepresentativeIdRemoved TINYINT(1),
       IsPropertyMovementBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyMovementChargeAmountRemoved TINYINT(1),
       IsPropertyMovementCreateFromRemoved TINYINT(1),
       IsPropertyMovementFreightAmountRemoved TINYINT(1),
       IsPropertyMovementReversalDocumentNumberRemoved TINYINT(1),
       IsPropertyMovementWarehouseIdFromRemoved TINYINT(1),
       IsPropertyMovementWarehouseIdToRemoved TINYINT(1),
       IsPropertyMovementDescriptionRemoved TINYINT(1),
       IsPropertyMovementCreatedByRemoved TINYINT(1),
       IsPropertyMovementCreatedAtRemoved TINYINT(1),
       IsPropertyMovementUpdatedByRemoved TINYINT(1),
       IsPropertyMovementUpdatedAtRemoved TINYINT(1),
       IsPropertyMovementActiveRemoved TINYINT(1),
       IsPropertyMovementDeletedRemoved TINYINT(1),
       primary key (MovementLineIdMovementDocumentNumber, MovementLineIdLineNumber, MovementVersion)
    );

    create table MovementConfirmationLine_RV (
        MovementConfirmationLineIdMovementConfirmationDocumentNumber VARCHAR(50) not null,
       MovementConfirmationLineIdLineNumber VARCHAR(50) not null,
       MovementConfirmationVersion BIGINT not null,
       MovementLineNumber VARCHAR(255),
       TargetQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       DifferenceQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       Description VARCHAR(255),
       Processed TINYINT(1),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       Deleted TINYINT(1),
       MovementConfirmationDocumentStatusId VARCHAR(255),
       MovementConfirmationMovementDocumentNumber VARCHAR(255),
       MovementConfirmationIsApproved TINYINT(1),
       MovementConfirmationApprovalAmount NUMERIC(19,5),
       MovementConfirmationProcessed TINYINT(1),
       MovementConfirmationProcessing VARCHAR(255),
       MovementConfirmationDocumentTypeId VARCHAR(255),
       MovementConfirmationDescription VARCHAR(255),
       MovementConfirmationCreatedBy VARCHAR(255),
       MovementConfirmationCreatedAt DATETIME,
       MovementConfirmationUpdatedBy VARCHAR(255),
       MovementConfirmationUpdatedAt DATETIME,
       MovementConfirmationActive TINYINT(1),
       MovementConfirmationDeleted TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (MovementConfirmationLineIdMovementConfirmationDocumentNumber, MovementConfirmationLineIdLineNumber)
    );

    create table MovementConfirmationLineMvoStateEvents (
        MovementConfirmationLineIdMovementConfirmationDocumentNumber VARCHAR(50) not null,
       MovementConfirmationLineIdLineNumber VARCHAR(50) not null,
       MovementConfirmationVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       MovementLineNumber VARCHAR(255),
       TargetQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       DifferenceQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       Description VARCHAR(255),
       Processed TINYINT(1),
       Version BIGINT,
       Active TINYINT(1),
       MovementConfirmationDocumentStatusId VARCHAR(255),
       MovementConfirmationMovementDocumentNumber VARCHAR(255),
       MovementConfirmationIsApproved TINYINT(1),
       MovementConfirmationApprovalAmount NUMERIC(19,5),
       MovementConfirmationProcessed TINYINT(1),
       MovementConfirmationProcessing VARCHAR(255),
       MovementConfirmationDocumentTypeId VARCHAR(255),
       MovementConfirmationDescription VARCHAR(255),
       MovementConfirmationCreatedBy VARCHAR(255),
       MovementConfirmationCreatedAt DATETIME,
       MovementConfirmationUpdatedBy VARCHAR(255),
       MovementConfirmationUpdatedAt DATETIME,
       MovementConfirmationActive TINYINT(1),
       MovementConfirmationDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyMovementLineNumberRemoved TINYINT(1),
       IsPropertyTargetQuantityRemoved TINYINT(1),
       IsPropertyConfirmedQuantityRemoved TINYINT(1),
       IsPropertyDifferenceQuantityRemoved TINYINT(1),
       IsPropertyScrappedQuantityRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyMovementConfirmationDocumentStatusIdRemoved TINYINT(1),
       IsPropertyMovementConfirmationMovementDocumentNumberRemoved TINYINT(1),
       IsPropertyMovementConfirmationIsApprovedRemoved TINYINT(1),
       IsPropertyMovementConfirmationApprovalAmountRemoved TINYINT(1),
       IsPropertyMovementConfirmationProcessedRemoved TINYINT(1),
       IsPropertyMovementConfirmationProcessingRemoved TINYINT(1),
       IsPropertyMovementConfirmationDocumentTypeIdRemoved TINYINT(1),
       IsPropertyMovementConfirmationDescriptionRemoved TINYINT(1),
       IsPropertyMovementConfirmationCreatedByRemoved TINYINT(1),
       IsPropertyMovementConfirmationCreatedAtRemoved TINYINT(1),
       IsPropertyMovementConfirmationUpdatedByRemoved TINYINT(1),
       IsPropertyMovementConfirmationUpdatedAtRemoved TINYINT(1),
       IsPropertyMovementConfirmationActiveRemoved TINYINT(1),
       IsPropertyMovementConfirmationDeletedRemoved TINYINT(1),
       primary key (MovementConfirmationLineIdMovementConfirmationDocumentNumber, MovementConfirmationLineIdLineNumber, MovementConfirmationVersion)
    );

    create table OrderItem_RV (
        OrderItemIdOrderId VARCHAR(20) not null,
       OrderItemIdOrderItemSeqId VARCHAR(20) not null,
       OrderVersion BIGINT not null,
       ProductId VARCHAR(60),
       ExternalProductId VARCHAR(60),
       Quantity DECIMAL(18,6),
       CancelQuantity DECIMAL(18,6),
       SelectedAmount DECIMAL(18,6),
       ExternalId VARCHAR(20),
       OrderItemTypeId VARCHAR(20),
       OrderItemGroupSeqId VARCHAR(20),
       IsItemGroupPrimary CHAR(1),
       FromInventoryItemId VARCHAR(20),
       IsPromo CHAR(1),
       QuoteId VARCHAR(20),
       QuoteItemSeqId VARCHAR(20),
       ShoppingListId VARCHAR(20),
       ShoppingListItemSeqId VARCHAR(20),
       UnitPrice DECIMAL(18,3),
       UnitListPrice DECIMAL(18,3),
       UnitAverageCost DECIMAL(18,2),
       UnitRecurringPrice DECIMAL(18,2),
       IsModifiedPrice CHAR(1),
       RecurringFreqUomId VARCHAR(20),
       ItemDescription VARCHAR(255),
       Comments VARCHAR(255),
       CorrespondingPoId VARCHAR(20),
       StatusId VARCHAR(20),
       SyncStatusId VARCHAR(20),
       EstimatedShipDate DATETIME,
       EstimatedDeliveryDate DATETIME,
       AutoCancelDate DATETIME,
       DontCancelSetDate DATETIME,
       DontCancelSetBy VARCHAR(250),
       ShipBeforeDate DATETIME,
       ShipAfterDate DATETIME,
       CancelBackOrderDate DATETIME,
       OverrideGlAccountId VARCHAR(20),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       OrderOrderTypeId VARCHAR(20),
       OrderOrderName VARCHAR(100),
       OrderExternalId VARCHAR(20),
       OrderSalesChannelEnumId VARCHAR(20),
       OrderOrderDate DATETIME,
       OrderPriority CHAR(1),
       OrderEntryDate DATETIME,
       OrderPickSheetPrintedDate DATETIME,
       OrderStatusId VARCHAR(20),
       OrderCurrencyUom VARCHAR(20),
       OrderSyncStatusId VARCHAR(20),
       OrderBillingAccountId VARCHAR(20),
       OrderOriginFacilityId VARCHAR(20),
       OrderWebSiteId VARCHAR(20),
       OrderProductStoreId VARCHAR(20),
       OrderTerminalId VARCHAR(60),
       OrderTransactionId VARCHAR(60),
       OrderAutoOrderShoppingListId VARCHAR(20),
       OrderNeedsInventoryIssuance CHAR(1),
       OrderIsRushOrder CHAR(1),
       OrderInternalCode VARCHAR(60),
       OrderRemainingSubTotal DECIMAL(18,2),
       OrderGrandTotal DECIMAL(18,2),
       OrderInvoicePerShipment CHAR(1),
       OrderCreatedBy VARCHAR(255),
       OrderCreatedAt DATETIME,
       OrderUpdatedBy VARCHAR(255),
       OrderUpdatedAt DATETIME,
       OrderActive TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (OrderItemIdOrderId, OrderItemIdOrderItemSeqId)
    );

    create table OrderItemMvoStateEvents (
        OrderItemIdOrderId VARCHAR(20) not null,
       OrderItemIdOrderItemSeqId VARCHAR(20) not null,
       OrderVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductId VARCHAR(60),
       ExternalProductId VARCHAR(60),
       Quantity DECIMAL(18,6),
       CancelQuantity DECIMAL(18,6),
       SelectedAmount DECIMAL(18,6),
       ExternalId VARCHAR(20),
       OrderItemTypeId VARCHAR(20),
       OrderItemGroupSeqId VARCHAR(20),
       IsItemGroupPrimary CHAR(1),
       FromInventoryItemId VARCHAR(20),
       IsPromo CHAR(1),
       QuoteId VARCHAR(20),
       QuoteItemSeqId VARCHAR(20),
       ShoppingListId VARCHAR(20),
       ShoppingListItemSeqId VARCHAR(20),
       UnitPrice DECIMAL(18,3),
       UnitListPrice DECIMAL(18,3),
       UnitAverageCost DECIMAL(18,2),
       UnitRecurringPrice DECIMAL(18,2),
       IsModifiedPrice CHAR(1),
       RecurringFreqUomId VARCHAR(20),
       ItemDescription VARCHAR(255),
       Comments VARCHAR(255),
       CorrespondingPoId VARCHAR(20),
       StatusId VARCHAR(20),
       SyncStatusId VARCHAR(20),
       EstimatedShipDate DATETIME,
       EstimatedDeliveryDate DATETIME,
       AutoCancelDate DATETIME,
       DontCancelSetDate DATETIME,
       DontCancelSetBy VARCHAR(250),
       ShipBeforeDate DATETIME,
       ShipAfterDate DATETIME,
       CancelBackOrderDate DATETIME,
       OverrideGlAccountId VARCHAR(20),
       Version BIGINT,
       Active TINYINT(1),
       OrderOrderTypeId VARCHAR(20),
       OrderOrderName VARCHAR(100),
       OrderExternalId VARCHAR(20),
       OrderSalesChannelEnumId VARCHAR(20),
       OrderOrderDate DATETIME,
       OrderPriority CHAR(1),
       OrderEntryDate DATETIME,
       OrderPickSheetPrintedDate DATETIME,
       OrderStatusId VARCHAR(20),
       OrderCurrencyUom VARCHAR(20),
       OrderSyncStatusId VARCHAR(20),
       OrderBillingAccountId VARCHAR(20),
       OrderOriginFacilityId VARCHAR(20),
       OrderWebSiteId VARCHAR(20),
       OrderProductStoreId VARCHAR(20),
       OrderTerminalId VARCHAR(60),
       OrderTransactionId VARCHAR(60),
       OrderAutoOrderShoppingListId VARCHAR(20),
       OrderNeedsInventoryIssuance CHAR(1),
       OrderIsRushOrder CHAR(1),
       OrderInternalCode VARCHAR(60),
       OrderRemainingSubTotal DECIMAL(18,2),
       OrderGrandTotal DECIMAL(18,2),
       OrderInvoicePerShipment CHAR(1),
       OrderCreatedBy VARCHAR(255),
       OrderCreatedAt DATETIME,
       OrderUpdatedBy VARCHAR(255),
       OrderUpdatedAt DATETIME,
       OrderActive TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyExternalProductIdRemoved TINYINT(1),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertyCancelQuantityRemoved TINYINT(1),
       IsPropertySelectedAmountRemoved TINYINT(1),
       IsPropertyExternalIdRemoved TINYINT(1),
       IsPropertyOrderItemTypeIdRemoved TINYINT(1),
       IsPropertyOrderItemGroupSeqIdRemoved TINYINT(1),
       IsPropertyIsItemGroupPrimaryRemoved TINYINT(1),
       IsPropertyFromInventoryItemIdRemoved TINYINT(1),
       IsPropertyIsPromoRemoved TINYINT(1),
       IsPropertyQuoteIdRemoved TINYINT(1),
       IsPropertyQuoteItemSeqIdRemoved TINYINT(1),
       IsPropertyShoppingListIdRemoved TINYINT(1),
       IsPropertyShoppingListItemSeqIdRemoved TINYINT(1),
       IsPropertyUnitPriceRemoved TINYINT(1),
       IsPropertyUnitListPriceRemoved TINYINT(1),
       IsPropertyUnitAverageCostRemoved TINYINT(1),
       IsPropertyUnitRecurringPriceRemoved TINYINT(1),
       IsPropertyIsModifiedPriceRemoved TINYINT(1),
       IsPropertyRecurringFreqUomIdRemoved TINYINT(1),
       IsPropertyItemDescriptionRemoved TINYINT(1),
       IsPropertyCommentsRemoved TINYINT(1),
       IsPropertyCorrespondingPoIdRemoved TINYINT(1),
       IsPropertyStatusIdRemoved TINYINT(1),
       IsPropertySyncStatusIdRemoved TINYINT(1),
       IsPropertyEstimatedShipDateRemoved TINYINT(1),
       IsPropertyEstimatedDeliveryDateRemoved TINYINT(1),
       IsPropertyAutoCancelDateRemoved TINYINT(1),
       IsPropertyDontCancelSetDateRemoved TINYINT(1),
       IsPropertyDontCancelSetByRemoved TINYINT(1),
       IsPropertyShipBeforeDateRemoved TINYINT(1),
       IsPropertyShipAfterDateRemoved TINYINT(1),
       IsPropertyCancelBackOrderDateRemoved TINYINT(1),
       IsPropertyOverrideGlAccountIdRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyOrderOrderTypeIdRemoved TINYINT(1),
       IsPropertyOrderOrderNameRemoved TINYINT(1),
       IsPropertyOrderExternalIdRemoved TINYINT(1),
       IsPropertyOrderSalesChannelEnumIdRemoved TINYINT(1),
       IsPropertyOrderOrderDateRemoved TINYINT(1),
       IsPropertyOrderPriorityRemoved TINYINT(1),
       IsPropertyOrderEntryDateRemoved TINYINT(1),
       IsPropertyOrderPickSheetPrintedDateRemoved TINYINT(1),
       IsPropertyOrderStatusIdRemoved TINYINT(1),
       IsPropertyOrderCurrencyUomRemoved TINYINT(1),
       IsPropertyOrderSyncStatusIdRemoved TINYINT(1),
       IsPropertyOrderBillingAccountIdRemoved TINYINT(1),
       IsPropertyOrderOriginFacilityIdRemoved TINYINT(1),
       IsPropertyOrderWebSiteIdRemoved TINYINT(1),
       IsPropertyOrderProductStoreIdRemoved TINYINT(1),
       IsPropertyOrderTerminalIdRemoved TINYINT(1),
       IsPropertyOrderTransactionIdRemoved TINYINT(1),
       IsPropertyOrderAutoOrderShoppingListIdRemoved TINYINT(1),
       IsPropertyOrderNeedsInventoryIssuanceRemoved TINYINT(1),
       IsPropertyOrderIsRushOrderRemoved TINYINT(1),
       IsPropertyOrderInternalCodeRemoved TINYINT(1),
       IsPropertyOrderRemainingSubTotalRemoved TINYINT(1),
       IsPropertyOrderGrandTotalRemoved TINYINT(1),
       IsPropertyOrderInvoicePerShipmentRemoved TINYINT(1),
       IsPropertyOrderCreatedByRemoved TINYINT(1),
       IsPropertyOrderCreatedAtRemoved TINYINT(1),
       IsPropertyOrderUpdatedByRemoved TINYINT(1),
       IsPropertyOrderUpdatedAtRemoved TINYINT(1),
       IsPropertyOrderActiveRemoved TINYINT(1),
       primary key (OrderItemIdOrderId, OrderItemIdOrderItemSeqId, OrderVersion)
    );

    create table PhysicalInventoryLine_RV (
        PhysicalInventoryLineIdPhysicalInventoryDocumentNumber VARCHAR(50) not null,
       ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       PhysicalInventoryVersion BIGINT not null,
       BookQuantity NUMERIC(19,5),
       CountedQuantity NUMERIC(19,5),
       Processed TINYINT(1),
       ReversalLineNumber BIGINT,
       Description VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Deleted TINYINT(1),
       PhysicalInventoryDocumentStatusId VARCHAR(255),
       PhysicalInventoryWarehouseId VARCHAR(255),
       PhysicalInventoryLocatorIdPattern VARCHAR(255),
       PhysicalInventoryProductIdPattern VARCHAR(60),
       PhysicalInventoryPosted TINYINT(1),
       PhysicalInventoryProcessed TINYINT(1),
       PhysicalInventoryProcessing VARCHAR(255),
       PhysicalInventoryDocumentTypeId VARCHAR(255),
       PhysicalInventoryMovementDate DATETIME,
       PhysicalInventoryDescription VARCHAR(255),
       PhysicalInventoryIsApproved TINYINT(1),
       PhysicalInventoryApprovalAmount NUMERIC(19,5),
       PhysicalInventoryIsQuantityUpdated TINYINT(1),
       PhysicalInventoryReversalDocumentNumber VARCHAR(255),
       PhysicalInventoryCreatedBy VARCHAR(255),
       PhysicalInventoryCreatedAt DATETIME,
       PhysicalInventoryUpdatedBy VARCHAR(255),
       PhysicalInventoryUpdatedAt DATETIME,
       PhysicalInventoryActive TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (PhysicalInventoryLineIdPhysicalInventoryDocumentNumber, ProductId, LocatorId, AttributeSetInstanceId)
    );

    create table PhysicalInventoryLineMvoStateEvents (
        PhysicalInventoryLineIdPhysicalInventoryDocumentNumber VARCHAR(50) not null,
       ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       PhysicalInventoryVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       BookQuantity NUMERIC(19,5),
       CountedQuantity NUMERIC(19,5),
       Processed TINYINT(1),
       ReversalLineNumber BIGINT,
       Description VARCHAR(255),
       Version BIGINT,
       PhysicalInventoryDocumentStatusId VARCHAR(255),
       PhysicalInventoryWarehouseId VARCHAR(255),
       PhysicalInventoryLocatorIdPattern VARCHAR(255),
       PhysicalInventoryProductIdPattern VARCHAR(60),
       PhysicalInventoryPosted TINYINT(1),
       PhysicalInventoryProcessed TINYINT(1),
       PhysicalInventoryProcessing VARCHAR(255),
       PhysicalInventoryDocumentTypeId VARCHAR(255),
       PhysicalInventoryMovementDate DATETIME,
       PhysicalInventoryDescription VARCHAR(255),
       PhysicalInventoryIsApproved TINYINT(1),
       PhysicalInventoryApprovalAmount NUMERIC(19,5),
       PhysicalInventoryIsQuantityUpdated TINYINT(1),
       PhysicalInventoryReversalDocumentNumber VARCHAR(255),
       PhysicalInventoryCreatedBy VARCHAR(255),
       PhysicalInventoryCreatedAt DATETIME,
       PhysicalInventoryUpdatedBy VARCHAR(255),
       PhysicalInventoryUpdatedAt DATETIME,
       PhysicalInventoryActive TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyBookQuantityRemoved TINYINT(1),
       IsPropertyCountedQuantityRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyPhysicalInventoryDocumentStatusIdRemoved TINYINT(1),
       IsPropertyPhysicalInventoryWarehouseIdRemoved TINYINT(1),
       IsPropertyPhysicalInventoryLocatorIdPatternRemoved TINYINT(1),
       IsPropertyPhysicalInventoryProductIdPatternRemoved TINYINT(1),
       IsPropertyPhysicalInventoryPostedRemoved TINYINT(1),
       IsPropertyPhysicalInventoryProcessedRemoved TINYINT(1),
       IsPropertyPhysicalInventoryProcessingRemoved TINYINT(1),
       IsPropertyPhysicalInventoryDocumentTypeIdRemoved TINYINT(1),
       IsPropertyPhysicalInventoryMovementDateRemoved TINYINT(1),
       IsPropertyPhysicalInventoryDescriptionRemoved TINYINT(1),
       IsPropertyPhysicalInventoryIsApprovedRemoved TINYINT(1),
       IsPropertyPhysicalInventoryApprovalAmountRemoved TINYINT(1),
       IsPropertyPhysicalInventoryIsQuantityUpdatedRemoved TINYINT(1),
       IsPropertyPhysicalInventoryReversalDocumentNumberRemoved TINYINT(1),
       IsPropertyPhysicalInventoryCreatedByRemoved TINYINT(1),
       IsPropertyPhysicalInventoryCreatedAtRemoved TINYINT(1),
       IsPropertyPhysicalInventoryUpdatedByRemoved TINYINT(1),
       IsPropertyPhysicalInventoryUpdatedAtRemoved TINYINT(1),
       IsPropertyPhysicalInventoryActiveRemoved TINYINT(1),
       primary key (PhysicalInventoryLineIdPhysicalInventoryDocumentNumber, ProductId, LocatorId, AttributeSetInstanceId, PhysicalInventoryVersion)
    );

    create table SellableInventoryItemEntry_RV (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       SellableInventoryItemVersion BIGINT not null,
       SellableQuantity NUMERIC(19,5),
       SrcEventProductId VARCHAR(60),
       SrcEventLocatorId VARCHAR(50),
       SrcEventAttributeSetInstanceId VARCHAR(50),
       SrcEventEntrySeqId BIGINT,
       SrcEventInventoryPostingRuleId VARCHAR(50),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       SellableInventoryItemSellableQuantity NUMERIC(19,5),
       SellableInventoryItemCreatedBy VARCHAR(255),
       SellableInventoryItemCreatedAt DATETIME,
       SellableInventoryItemUpdatedBy VARCHAR(255),
       SellableInventoryItemUpdatedAt DATETIME,
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId),
      unique (SrcEventProductId, SrcEventLocatorId, SrcEventAttributeSetInstanceId, SrcEventEntrySeqId, SrcEventInventoryPostingRuleId)
    );

    create table SellableInventoryItemEntryMvoStateEvents (
        ProductId VARCHAR(60) not null,
       LocatorId VARCHAR(50) not null,
       AttributeSetInstanceId VARCHAR(50) not null,
       EntrySeqId BIGINT not null,
       SellableInventoryItemVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       SellableQuantity NUMERIC(19,5),
       SrcEventProductId VARCHAR(60),
       SrcEventLocatorId VARCHAR(50),
       SrcEventAttributeSetInstanceId VARCHAR(50),
       SrcEventEntrySeqId BIGINT,
       SrcEventInventoryPostingRuleId VARCHAR(50),
       Version BIGINT,
       SellableInventoryItemSellableQuantity NUMERIC(19,5),
       SellableInventoryItemCreatedBy VARCHAR(255),
       SellableInventoryItemCreatedAt DATETIME,
       SellableInventoryItemUpdatedBy VARCHAR(255),
       SellableInventoryItemUpdatedAt DATETIME,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertySellableQuantityRemoved TINYINT(1),
       IsPropertySourceEventIdRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertySellableInventoryItemSellableQuantityRemoved TINYINT(1),
       IsPropertySellableInventoryItemCreatedByRemoved TINYINT(1),
       IsPropertySellableInventoryItemCreatedAtRemoved TINYINT(1),
       IsPropertySellableInventoryItemUpdatedByRemoved TINYINT(1),
       IsPropertySellableInventoryItemUpdatedAtRemoved TINYINT(1),
       primary key (ProductId, LocatorId, AttributeSetInstanceId, EntrySeqId, SellableInventoryItemVersion)
    );

    create table ShipmentItem_RV (
        ShipmentItemIdShipmentId VARCHAR(20) not null,
       ShipmentItemIdShipmentItemSeqId VARCHAR(20) not null,
       ShipmentVersion BIGINT not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Quantity DECIMAL(18,6) not null,
       TargetQuantity DECIMAL(18,6),
       ShipmentContentDescription VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       ShipmentShipmentTypeId VARCHAR(20),
       ShipmentStatusId VARCHAR(20),
       ShipmentPrimaryOrderId VARCHAR(20),
       ShipmentPrimaryReturnId VARCHAR(20),
       ShipmentPicklistBinId VARCHAR(20),
       ShipmentEstimatedReadyDate DATETIME,
       ShipmentEstimatedShipDate DATETIME,
       ShipmentEstimatedShipWorkEffId VARCHAR(20),
       ShipmentEstimatedArrivalDate DATETIME,
       ShipmentEstimatedArrivalWorkEffId VARCHAR(20),
       ShipmentLatestCancelDate DATETIME,
       ShipmentEstimatedShipCost DECIMAL(18,2),
       ShipmentCurrencyUomId VARCHAR(20),
       ShipmentHandlingInstructions VARCHAR(255),
       ShipmentOriginFacilityId VARCHAR(20),
       ShipmentDestinationFacilityId VARCHAR(20),
       ShipmentOriginContactMechId VARCHAR(20),
       ShipmentOriginTelecomNumberId VARCHAR(20),
       ShipmentDestinationContactMechId VARCHAR(20),
       ShipmentDestinationTelecomNumberId VARCHAR(20),
       ShipmentPartyIdTo VARCHAR(20),
       ShipmentPartyIdFrom VARCHAR(20),
       ShipmentAdditionalShippingCharge DECIMAL(18,2),
       ShipmentAddtlShippingChargeDesc VARCHAR(255),
       ShipmentShipperId VARCHAR(20),
       ShipmentCreatedBy VARCHAR(255),
       ShipmentCreatedAt DATETIME,
       ShipmentUpdatedBy VARCHAR(255),
       ShipmentUpdatedAt DATETIME,
       ShipmentActive TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ShipmentItemIdShipmentId, ShipmentItemIdShipmentItemSeqId)
    );

    create table ShipmentItemMvoStateEvents (
        ShipmentItemIdShipmentId VARCHAR(20) not null,
       ShipmentItemIdShipmentItemSeqId VARCHAR(20) not null,
       ShipmentVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       Quantity DECIMAL(18,6),
       TargetQuantity DECIMAL(18,6),
       ShipmentContentDescription VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       ShipmentShipmentTypeId VARCHAR(20),
       ShipmentStatusId VARCHAR(20),
       ShipmentPrimaryOrderId VARCHAR(20),
       ShipmentPrimaryReturnId VARCHAR(20),
       ShipmentPicklistBinId VARCHAR(20),
       ShipmentEstimatedReadyDate DATETIME,
       ShipmentEstimatedShipDate DATETIME,
       ShipmentEstimatedShipWorkEffId VARCHAR(20),
       ShipmentEstimatedArrivalDate DATETIME,
       ShipmentEstimatedArrivalWorkEffId VARCHAR(20),
       ShipmentLatestCancelDate DATETIME,
       ShipmentEstimatedShipCost DECIMAL(18,2),
       ShipmentCurrencyUomId VARCHAR(20),
       ShipmentHandlingInstructions VARCHAR(255),
       ShipmentOriginFacilityId VARCHAR(20),
       ShipmentDestinationFacilityId VARCHAR(20),
       ShipmentOriginContactMechId VARCHAR(20),
       ShipmentOriginTelecomNumberId VARCHAR(20),
       ShipmentDestinationContactMechId VARCHAR(20),
       ShipmentDestinationTelecomNumberId VARCHAR(20),
       ShipmentPartyIdTo VARCHAR(20),
       ShipmentPartyIdFrom VARCHAR(20),
       ShipmentAdditionalShippingCharge DECIMAL(18,2),
       ShipmentAddtlShippingChargeDesc VARCHAR(255),
       ShipmentShipperId VARCHAR(20),
       ShipmentCreatedBy VARCHAR(255),
       ShipmentCreatedAt DATETIME,
       ShipmentUpdatedBy VARCHAR(255),
       ShipmentUpdatedAt DATETIME,
       ShipmentActive TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyQuantityRemoved TINYINT(1),
       IsPropertyTargetQuantityRemoved TINYINT(1),
       IsPropertyShipmentContentDescriptionRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyShipmentShipmentTypeIdRemoved TINYINT(1),
       IsPropertyShipmentStatusIdRemoved TINYINT(1),
       IsPropertyShipmentPrimaryOrderIdRemoved TINYINT(1),
       IsPropertyShipmentPrimaryReturnIdRemoved TINYINT(1),
       IsPropertyShipmentPicklistBinIdRemoved TINYINT(1),
       IsPropertyShipmentEstimatedReadyDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedShipDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedShipWorkEffIdRemoved TINYINT(1),
       IsPropertyShipmentEstimatedArrivalDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedArrivalWorkEffIdRemoved TINYINT(1),
       IsPropertyShipmentLatestCancelDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedShipCostRemoved TINYINT(1),
       IsPropertyShipmentCurrencyUomIdRemoved TINYINT(1),
       IsPropertyShipmentHandlingInstructionsRemoved TINYINT(1),
       IsPropertyShipmentOriginFacilityIdRemoved TINYINT(1),
       IsPropertyShipmentDestinationFacilityIdRemoved TINYINT(1),
       IsPropertyShipmentOriginContactMechIdRemoved TINYINT(1),
       IsPropertyShipmentOriginTelecomNumberIdRemoved TINYINT(1),
       IsPropertyShipmentDestinationContactMechIdRemoved TINYINT(1),
       IsPropertyShipmentDestinationTelecomNumberIdRemoved TINYINT(1),
       IsPropertyShipmentPartyIdToRemoved TINYINT(1),
       IsPropertyShipmentPartyIdFromRemoved TINYINT(1),
       IsPropertyShipmentAdditionalShippingChargeRemoved TINYINT(1),
       IsPropertyShipmentAddtlShippingChargeDescRemoved TINYINT(1),
       IsPropertyShipmentShipperIdRemoved TINYINT(1),
       IsPropertyShipmentCreatedByRemoved TINYINT(1),
       IsPropertyShipmentCreatedAtRemoved TINYINT(1),
       IsPropertyShipmentUpdatedByRemoved TINYINT(1),
       IsPropertyShipmentUpdatedAtRemoved TINYINT(1),
       IsPropertyShipmentActiveRemoved TINYINT(1),
       primary key (ShipmentItemIdShipmentId, ShipmentItemIdShipmentItemSeqId, ShipmentVersion)
    );

    create table ShipmentReceipt_RV (
        ShipmentReceiptIdShipmentId VARCHAR(20) not null,
       ShipmentReceiptIdReceiptSeqId VARCHAR(20) not null,
       ShipmentVersion BIGINT not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       ShipmentItemSeqId VARCHAR(20),
       RejectionReasonId VARCHAR(60),
       DamageStatusId VARCHAR(20),
       DamageReasonId VARCHAR(60),
       ReceivedBy VARCHAR(250),
       DatetimeReceived DATETIME,
       ItemDescription VARCHAR(255),
       AcceptedQuantity DECIMAL(18,6) not null,
       RejectedQuantity DECIMAL(18,6) not null,
       DamagedQuantity DECIMAL(18,6) not null,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Active TINYINT(1),
       ShipmentShipmentTypeId VARCHAR(20),
       ShipmentStatusId VARCHAR(20),
       ShipmentPrimaryOrderId VARCHAR(20),
       ShipmentPrimaryReturnId VARCHAR(20),
       ShipmentPicklistBinId VARCHAR(20),
       ShipmentEstimatedReadyDate DATETIME,
       ShipmentEstimatedShipDate DATETIME,
       ShipmentEstimatedShipWorkEffId VARCHAR(20),
       ShipmentEstimatedArrivalDate DATETIME,
       ShipmentEstimatedArrivalWorkEffId VARCHAR(20),
       ShipmentLatestCancelDate DATETIME,
       ShipmentEstimatedShipCost DECIMAL(18,2),
       ShipmentCurrencyUomId VARCHAR(20),
       ShipmentHandlingInstructions VARCHAR(255),
       ShipmentOriginFacilityId VARCHAR(20),
       ShipmentDestinationFacilityId VARCHAR(20),
       ShipmentOriginContactMechId VARCHAR(20),
       ShipmentOriginTelecomNumberId VARCHAR(20),
       ShipmentDestinationContactMechId VARCHAR(20),
       ShipmentDestinationTelecomNumberId VARCHAR(20),
       ShipmentPartyIdTo VARCHAR(20),
       ShipmentPartyIdFrom VARCHAR(20),
       ShipmentAdditionalShippingCharge DECIMAL(18,2),
       ShipmentAddtlShippingChargeDesc VARCHAR(255),
       ShipmentShipperId VARCHAR(20),
       ShipmentCreatedBy VARCHAR(255),
       ShipmentCreatedAt DATETIME,
       ShipmentUpdatedBy VARCHAR(255),
       ShipmentUpdatedAt DATETIME,
       ShipmentActive TINYINT(1),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       primary key (ShipmentReceiptIdShipmentId, ShipmentReceiptIdReceiptSeqId)
    );

    create table ShipmentReceiptMvoStateEvents (
        ShipmentReceiptIdShipmentId VARCHAR(20) not null,
       ShipmentReceiptIdReceiptSeqId VARCHAR(20) not null,
       ShipmentVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ProductId VARCHAR(60),
       AttributeSetInstanceId VARCHAR(255),
       ShipmentItemSeqId VARCHAR(20),
       RejectionReasonId VARCHAR(60),
       DamageStatusId VARCHAR(20),
       DamageReasonId VARCHAR(60),
       ReceivedBy VARCHAR(250),
       DatetimeReceived DATETIME,
       ItemDescription VARCHAR(255),
       AcceptedQuantity DECIMAL(18,6),
       RejectedQuantity DECIMAL(18,6),
       DamagedQuantity DECIMAL(18,6),
       Version BIGINT,
       Active TINYINT(1),
       ShipmentShipmentTypeId VARCHAR(20),
       ShipmentStatusId VARCHAR(20),
       ShipmentPrimaryOrderId VARCHAR(20),
       ShipmentPrimaryReturnId VARCHAR(20),
       ShipmentPicklistBinId VARCHAR(20),
       ShipmentEstimatedReadyDate DATETIME,
       ShipmentEstimatedShipDate DATETIME,
       ShipmentEstimatedShipWorkEffId VARCHAR(20),
       ShipmentEstimatedArrivalDate DATETIME,
       ShipmentEstimatedArrivalWorkEffId VARCHAR(20),
       ShipmentLatestCancelDate DATETIME,
       ShipmentEstimatedShipCost DECIMAL(18,2),
       ShipmentCurrencyUomId VARCHAR(20),
       ShipmentHandlingInstructions VARCHAR(255),
       ShipmentOriginFacilityId VARCHAR(20),
       ShipmentDestinationFacilityId VARCHAR(20),
       ShipmentOriginContactMechId VARCHAR(20),
       ShipmentOriginTelecomNumberId VARCHAR(20),
       ShipmentDestinationContactMechId VARCHAR(20),
       ShipmentDestinationTelecomNumberId VARCHAR(20),
       ShipmentPartyIdTo VARCHAR(20),
       ShipmentPartyIdFrom VARCHAR(20),
       ShipmentAdditionalShippingCharge DECIMAL(18,2),
       ShipmentAddtlShippingChargeDesc VARCHAR(255),
       ShipmentShipperId VARCHAR(20),
       ShipmentCreatedBy VARCHAR(255),
       ShipmentCreatedAt DATETIME,
       ShipmentUpdatedBy VARCHAR(255),
       ShipmentUpdatedAt DATETIME,
       ShipmentActive TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyProductIdRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyShipmentItemSeqIdRemoved TINYINT(1),
       IsPropertyRejectionReasonIdRemoved TINYINT(1),
       IsPropertyDamageStatusIdRemoved TINYINT(1),
       IsPropertyDamageReasonIdRemoved TINYINT(1),
       IsPropertyReceivedByRemoved TINYINT(1),
       IsPropertyDatetimeReceivedRemoved TINYINT(1),
       IsPropertyItemDescriptionRemoved TINYINT(1),
       IsPropertyAcceptedQuantityRemoved TINYINT(1),
       IsPropertyRejectedQuantityRemoved TINYINT(1),
       IsPropertyDamagedQuantityRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyShipmentShipmentTypeIdRemoved TINYINT(1),
       IsPropertyShipmentStatusIdRemoved TINYINT(1),
       IsPropertyShipmentPrimaryOrderIdRemoved TINYINT(1),
       IsPropertyShipmentPrimaryReturnIdRemoved TINYINT(1),
       IsPropertyShipmentPicklistBinIdRemoved TINYINT(1),
       IsPropertyShipmentEstimatedReadyDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedShipDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedShipWorkEffIdRemoved TINYINT(1),
       IsPropertyShipmentEstimatedArrivalDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedArrivalWorkEffIdRemoved TINYINT(1),
       IsPropertyShipmentLatestCancelDateRemoved TINYINT(1),
       IsPropertyShipmentEstimatedShipCostRemoved TINYINT(1),
       IsPropertyShipmentCurrencyUomIdRemoved TINYINT(1),
       IsPropertyShipmentHandlingInstructionsRemoved TINYINT(1),
       IsPropertyShipmentOriginFacilityIdRemoved TINYINT(1),
       IsPropertyShipmentDestinationFacilityIdRemoved TINYINT(1),
       IsPropertyShipmentOriginContactMechIdRemoved TINYINT(1),
       IsPropertyShipmentOriginTelecomNumberIdRemoved TINYINT(1),
       IsPropertyShipmentDestinationContactMechIdRemoved TINYINT(1),
       IsPropertyShipmentDestinationTelecomNumberIdRemoved TINYINT(1),
       IsPropertyShipmentPartyIdToRemoved TINYINT(1),
       IsPropertyShipmentPartyIdFromRemoved TINYINT(1),
       IsPropertyShipmentAdditionalShippingChargeRemoved TINYINT(1),
       IsPropertyShipmentAddtlShippingChargeDescRemoved TINYINT(1),
       IsPropertyShipmentShipperIdRemoved TINYINT(1),
       IsPropertyShipmentCreatedByRemoved TINYINT(1),
       IsPropertyShipmentCreatedAtRemoved TINYINT(1),
       IsPropertyShipmentUpdatedByRemoved TINYINT(1),
       IsPropertyShipmentUpdatedAtRemoved TINYINT(1),
       IsPropertyShipmentActiveRemoved TINYINT(1),
       primary key (ShipmentReceiptIdShipmentId, ShipmentReceiptIdReceiptSeqId, ShipmentVersion)
    );

    create table nhibernate_hilo_table (
         next_val BIGINT 
    );

    insert into nhibernate_hilo_table values ( 1 );
