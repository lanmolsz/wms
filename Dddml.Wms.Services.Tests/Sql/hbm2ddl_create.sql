
    
alter table AttributeSetInstanceStateEventRemovedProperties  drop foreign key FK9C8A405747E4A019
;

    
alter table TeamPlayers  drop foreign key FKB13B0820CF73904F
;

    
alter table TeamMascots  drop foreign key FK5FD05D69CF73904F
;

    
alter table TeamStateEventPlayers  drop foreign key FKA55D710EDFD9A6F1
;

    
alter table TeamStateEventMascots  drop foreign key FK750DD7B3DFD9A6F1
;

    drop table if exists AttributeSetInstances;

    drop table if exists AttributeSetInstanceStateEvents;

    drop table if exists AttributeSetInstanceStateEventRemovedProperties;

    drop table if exists AttributeSetInstanceExtensionFieldGroups;

    drop table if exists AttributeSetInstanceExtensionFieldGroupStateEvents;

    drop table if exists AttributeSetInstanceExtensionFields;

    drop table if exists AttributeSetInstanceExtensionFieldStateEvents;

    drop table if exists Attributes;

    drop table if exists AttributeStateEvents;

    drop table if exists AttributeValues;

    drop table if exists AttributeValueStateEvents;

    drop table if exists AttributeSets;

    drop table if exists AttributeSetStateEvents;

    drop table if exists AttributeUses;

    drop table if exists AttributeUseStateEvents;

    drop table if exists Audiences;

    drop table if exists AudienceStateEvents;

    drop table if exists DayPlans;

    drop table if exists DayPlanStateEvents;

    drop table if exists AttributeSetInstanceExtensionField_RV;

    drop table if exists AttributeSetInstanceExtensionFieldMvoStateEvents;

    drop table if exists AttributeValue_RV;

    drop table if exists AttributeValueMvoStateEvents;

    drop table if exists AttributeUse_RV;

    drop table if exists AttributeUseMvoStateEvents;

    drop table if exists DayPlan_RV;

    drop table if exists DayPlanMvoStateEvents;

    drop table if exists Roles;

    drop table if exists RoleStateEvents;

    drop table if exists Permissions;

    drop table if exists PermissionStateEvents;

    drop table if exists RolePermissions;

    drop table if exists RolePermissionStateEvents;

    drop table if exists Users;

    drop table if exists UserStateEvents;

    drop table if exists UserRoles;

    drop table if exists UserRoleStateEvents;

    drop table if exists UserClaims;

    drop table if exists UserClaimStateEvents;

    drop table if exists UserPermissions;

    drop table if exists UserPermissionStateEvents;

    drop table if exists UserLogins;

    drop table if exists UserLoginStateEvents;

    drop table if exists InOuts;

    drop table if exists InOutStateEvents;

    drop table if exists InOutLines;

    drop table if exists InOutLineStateEvents;

    drop table if exists Organizations;

    drop table if exists OrganizationStateEvents;

    drop table if exists OrganizationStructureTypes;

    drop table if exists OrganizationStructureTypeStateEvents;

    drop table if exists OrganizationStructures;

    drop table if exists OrganizationStructureStateEvents;

    drop table if exists Warehouses;

    drop table if exists WarehouseStateEvents;

    drop table if exists Locators;

    drop table if exists LocatorStateEvents;

    drop table if exists People;

    drop table if exists PersonStateEvents;

    drop table if exists YearPlans;

    drop table if exists YearPlanStateEvents;

    drop table if exists MonthPlans;

    drop table if exists MonthPlanStateEvents;

    drop table if exists Teams;

    drop table if exists TeamPlayers;

    drop table if exists TeamMascots;

    drop table if exists TeamStateEvents;

    drop table if exists TeamStateEventPlayers;

    drop table if exists TeamStateEventMascots;

    drop table if exists UserRole_RV;

    drop table if exists UserRoleMvoStateEvents;

    drop table if exists UserClaim_RV;

    drop table if exists UserClaimMvoStateEvents;

    drop table if exists UserPermission_RV;

    drop table if exists UserPermissionMvoStateEvents;

    drop table if exists UserLogin_RV;

    drop table if exists UserLoginMvoStateEvents;

    drop table if exists InOutLine_RV;

    drop table if exists InOutLineMvoStateEvents;

    drop table if exists YearPlan_RV;

    drop table if exists YearPlanMvoStateEvents;

    drop table if exists MonthPlan_RV;

    drop table if exists MonthPlanMvoStateEvents;

    create table AttributeSetInstances (
        AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       AttributeSetId VARCHAR(255),
       OrganizationId VARCHAR(255),
       ReferenceId VARCHAR(255),
       SerialNumber VARCHAR(255),
       Lot VARCHAR(255),
       Description VARCHAR(255),
       Hash VARCHAR(255),
       _F_B_0_ TINYINT(1),
       _F_I_0_ INTEGER,
       _F_L_0_ BIGINT,
       _F_DT_0_ DATETIME,
       _F_N_0_ NUMERIC(19,5),
       _F_C5_0_ VARCHAR(5),
       _F_C10_0_ VARCHAR(10),
       _F_C20_0_ VARCHAR(20),
       _F_C50_0_ VARCHAR(50),
       _F_C100_0_ VARCHAR(100),
       _F_C200_0_ VARCHAR(200),
       _F_C500_0_ TEXT,
       _F_C1000_0_ TEXT,
       _F_B_1_ TINYINT(1),
       _F_I_1_ INTEGER,
       _F_L_1_ BIGINT,
       _F_DT_1_ DATETIME,
       _F_N_1_ NUMERIC(19,5),
       _F_C5_1_ VARCHAR(5),
       _F_C10_1_ VARCHAR(10),
       _F_C20_1_ VARCHAR(20),
       _F_C50_1_ VARCHAR(50),
       _F_C100_1_ VARCHAR(100),
       _F_C200_1_ VARCHAR(200),
       _F_C500_1_ TEXT,
       _F_C1000_1_ TEXT,
       _F_B_2_ TINYINT(1),
       _F_I_2_ INTEGER,
       _F_L_2_ BIGINT,
       _F_DT_2_ DATETIME,
       _F_N_2_ NUMERIC(19,5),
       _F_C5_2_ VARCHAR(5),
       _F_C10_2_ VARCHAR(10),
       _F_C20_2_ VARCHAR(20),
       _F_C50_2_ VARCHAR(50),
       _F_C100_2_ VARCHAR(100),
       _F_C200_2_ VARCHAR(200),
       _F_C500_2_ TEXT,
       _F_C1000_2_ TEXT,
       _F_B_3_ TINYINT(1),
       _F_I_3_ INTEGER,
       _F_L_3_ BIGINT,
       _F_DT_3_ DATETIME,
       _F_N_3_ NUMERIC(19,5),
       _F_C5_3_ VARCHAR(5),
       _F_C10_3_ VARCHAR(10),
       _F_C20_3_ VARCHAR(20),
       _F_C50_3_ VARCHAR(50),
       _F_C100_3_ VARCHAR(100),
       _F_C200_3_ VARCHAR(200),
       _F_C500_3_ TEXT,
       _F_C1000_3_ TEXT,
       _F_B_4_ TINYINT(1),
       _F_I_4_ INTEGER,
       _F_L_4_ BIGINT,
       _F_DT_4_ DATETIME,
       _F_N_4_ NUMERIC(19,5),
       _F_C5_4_ VARCHAR(5),
       _F_C10_4_ VARCHAR(10),
       _F_C20_4_ VARCHAR(20),
       _F_C50_4_ VARCHAR(50),
       _F_C100_4_ VARCHAR(100),
       _F_C200_4_ VARCHAR(200),
       _F_C500_4_ TEXT,
       _F_C1000_4_ TEXT,
       _F_B_5_ TINYINT(1),
       _F_I_5_ INTEGER,
       _F_L_5_ BIGINT,
       _F_DT_5_ DATETIME,
       _F_N_5_ NUMERIC(19,5),
       _F_C5_5_ VARCHAR(5),
       _F_C10_5_ VARCHAR(10),
       _F_C20_5_ VARCHAR(20),
       _F_C50_5_ VARCHAR(50),
       _F_C100_5_ VARCHAR(100),
       _F_C200_5_ VARCHAR(200),
       _F_C500_5_ TEXT,
       _F_B_6_ TINYINT(1),
       _F_I_6_ INTEGER,
       _F_L_6_ BIGINT,
       _F_DT_6_ DATETIME,
       _F_N_6_ NUMERIC(19,5),
       _F_C5_6_ VARCHAR(5),
       _F_C10_6_ VARCHAR(10),
       _F_C20_6_ VARCHAR(20),
       _F_C50_6_ VARCHAR(50),
       _F_C100_6_ VARCHAR(100),
       _F_C200_6_ VARCHAR(200),
       _F_C500_6_ TEXT,
       _F_B_7_ TINYINT(1),
       _F_I_7_ INTEGER,
       _F_L_7_ BIGINT,
       _F_DT_7_ DATETIME,
       _F_N_7_ NUMERIC(19,5),
       _F_C5_7_ VARCHAR(5),
       _F_C10_7_ VARCHAR(10),
       _F_C20_7_ VARCHAR(20),
       _F_C50_7_ VARCHAR(50),
       _F_C100_7_ VARCHAR(100),
       _F_C200_7_ VARCHAR(200),
       _F_C500_7_ TEXT,
       _F_B_8_ TINYINT(1),
       _F_I_8_ INTEGER,
       _F_L_8_ BIGINT,
       _F_DT_8_ DATETIME,
       _F_N_8_ NUMERIC(19,5),
       _F_C5_8_ VARCHAR(5),
       _F_C10_8_ VARCHAR(10),
       _F_C20_8_ VARCHAR(20),
       _F_C50_8_ VARCHAR(50),
       _F_C100_8_ VARCHAR(100),
       _F_C200_8_ VARCHAR(200),
       _F_C500_8_ TEXT,
       _F_B_9_ TINYINT(1),
       _F_I_9_ INTEGER,
       _F_L_9_ BIGINT,
       _F_DT_9_ DATETIME,
       _F_N_9_ NUMERIC(19,5),
       _F_C5_9_ VARCHAR(5),
       _F_C10_9_ VARCHAR(10),
       _F_C20_9_ VARCHAR(20),
       _F_C50_9_ VARCHAR(50),
       _F_C100_9_ VARCHAR(100),
       _F_C200_9_ VARCHAR(200),
       _F_C500_9_ TEXT,
       _F_B_10_ TINYINT(1),
       _F_I_10_ INTEGER,
       _F_L_10_ BIGINT,
       _F_DT_10_ DATETIME,
       _F_N_10_ NUMERIC(19,5),
       _F_C5_10_ VARCHAR(5),
       _F_C10_10_ VARCHAR(10),
       _F_C20_10_ VARCHAR(20),
       _F_C50_10_ VARCHAR(50),
       _F_C100_10_ VARCHAR(100),
       _F_C200_10_ VARCHAR(200),
       _F_B_11_ TINYINT(1),
       _F_I_11_ INTEGER,
       _F_L_11_ BIGINT,
       _F_DT_11_ DATETIME,
       _F_N_11_ NUMERIC(19,5),
       _F_C5_11_ VARCHAR(5),
       _F_C10_11_ VARCHAR(10),
       _F_C20_11_ VARCHAR(20),
       _F_C50_11_ VARCHAR(50),
       _F_C100_11_ VARCHAR(100),
       _F_C200_11_ VARCHAR(200),
       _F_B_12_ TINYINT(1),
       _F_I_12_ INTEGER,
       _F_L_12_ BIGINT,
       _F_DT_12_ DATETIME,
       _F_N_12_ NUMERIC(19,5),
       _F_C5_12_ VARCHAR(5),
       _F_C10_12_ VARCHAR(10),
       _F_C20_12_ VARCHAR(20),
       _F_C50_12_ VARCHAR(50),
       _F_C100_12_ VARCHAR(100),
       _F_C200_12_ VARCHAR(200),
       _F_B_13_ TINYINT(1),
       _F_I_13_ INTEGER,
       _F_L_13_ BIGINT,
       _F_DT_13_ DATETIME,
       _F_N_13_ NUMERIC(19,5),
       _F_C5_13_ VARCHAR(5),
       _F_C10_13_ VARCHAR(10),
       _F_C20_13_ VARCHAR(20),
       _F_C50_13_ VARCHAR(50),
       _F_C100_13_ VARCHAR(100),
       _F_C200_13_ VARCHAR(200),
       _F_B_14_ TINYINT(1),
       _F_I_14_ INTEGER,
       _F_L_14_ BIGINT,
       _F_DT_14_ DATETIME,
       _F_N_14_ NUMERIC(19,5),
       _F_C5_14_ VARCHAR(5),
       _F_C10_14_ VARCHAR(10),
       _F_C20_14_ VARCHAR(20),
       _F_C50_14_ VARCHAR(50),
       _F_C100_14_ VARCHAR(100),
       _F_C200_14_ VARCHAR(200),
       _F_B_15_ TINYINT(1),
       _F_I_15_ INTEGER,
       _F_L_15_ BIGINT,
       _F_DT_15_ DATETIME,
       _F_N_15_ NUMERIC(19,5),
       _F_C5_15_ VARCHAR(5),
       _F_C10_15_ VARCHAR(10),
       _F_C20_15_ VARCHAR(20),
       _F_C50_15_ VARCHAR(50),
       _F_C100_15_ VARCHAR(100),
       _F_C200_15_ VARCHAR(200),
       _F_B_16_ TINYINT(1),
       _F_I_16_ INTEGER,
       _F_L_16_ BIGINT,
       _F_DT_16_ DATETIME,
       _F_N_16_ NUMERIC(19,5),
       _F_C5_16_ VARCHAR(5),
       _F_C10_16_ VARCHAR(10),
       _F_C20_16_ VARCHAR(20),
       _F_C50_16_ VARCHAR(50),
       _F_C100_16_ VARCHAR(100),
       _F_C200_16_ VARCHAR(200),
       _F_B_17_ TINYINT(1),
       _F_I_17_ INTEGER,
       _F_L_17_ BIGINT,
       _F_DT_17_ DATETIME,
       _F_N_17_ NUMERIC(19,5),
       _F_C5_17_ VARCHAR(5),
       _F_C10_17_ VARCHAR(10),
       _F_C20_17_ VARCHAR(20),
       _F_C50_17_ VARCHAR(50),
       _F_C100_17_ VARCHAR(100),
       _F_C200_17_ VARCHAR(200),
       _F_B_18_ TINYINT(1),
       _F_I_18_ INTEGER,
       _F_L_18_ BIGINT,
       _F_DT_18_ DATETIME,
       _F_N_18_ NUMERIC(19,5),
       _F_C5_18_ VARCHAR(5),
       _F_C10_18_ VARCHAR(10),
       _F_C20_18_ VARCHAR(20),
       _F_C50_18_ VARCHAR(50),
       _F_C100_18_ VARCHAR(100),
       _F_C200_18_ VARCHAR(200),
       _F_B_19_ TINYINT(1),
       _F_I_19_ INTEGER,
       _F_L_19_ BIGINT,
       _F_DT_19_ DATETIME,
       _F_N_19_ NUMERIC(19,5),
       _F_C5_19_ VARCHAR(5),
       _F_C10_19_ VARCHAR(10),
       _F_C20_19_ VARCHAR(20),
       _F_C50_19_ VARCHAR(50),
       _F_C100_19_ VARCHAR(100),
       _F_C200_19_ VARCHAR(200),
       _F_B_20_ TINYINT(1),
       _F_I_20_ INTEGER,
       _F_L_20_ BIGINT,
       _F_N_20_ NUMERIC(19,5),
       _F_C5_20_ VARCHAR(5),
       _F_C10_20_ VARCHAR(10),
       _F_C20_20_ VARCHAR(20),
       _F_C50_20_ VARCHAR(50),
       _F_B_21_ TINYINT(1),
       _F_I_21_ INTEGER,
       _F_L_21_ BIGINT,
       _F_N_21_ NUMERIC(19,5),
       _F_C5_21_ VARCHAR(5),
       _F_C10_21_ VARCHAR(10),
       _F_C20_21_ VARCHAR(20),
       _F_C50_21_ VARCHAR(50),
       _F_B_22_ TINYINT(1),
       _F_I_22_ INTEGER,
       _F_L_22_ BIGINT,
       _F_N_22_ NUMERIC(19,5),
       _F_C5_22_ VARCHAR(5),
       _F_C10_22_ VARCHAR(10),
       _F_C20_22_ VARCHAR(20),
       _F_C50_22_ VARCHAR(50),
       _F_B_23_ TINYINT(1),
       _F_I_23_ INTEGER,
       _F_L_23_ BIGINT,
       _F_N_23_ NUMERIC(19,5),
       _F_C5_23_ VARCHAR(5),
       _F_C10_23_ VARCHAR(10),
       _F_C20_23_ VARCHAR(20),
       _F_C50_23_ VARCHAR(50),
       _F_B_24_ TINYINT(1),
       _F_I_24_ INTEGER,
       _F_L_24_ BIGINT,
       _F_N_24_ NUMERIC(19,5),
       _F_C5_24_ VARCHAR(5),
       _F_C10_24_ VARCHAR(10),
       _F_C20_24_ VARCHAR(20),
       _F_C50_24_ VARCHAR(50),
       _F_B_25_ TINYINT(1),
       _F_I_25_ INTEGER,
       _F_L_25_ BIGINT,
       _F_N_25_ NUMERIC(19,5),
       _F_C5_25_ VARCHAR(5),
       _F_C10_25_ VARCHAR(10),
       _F_C20_25_ VARCHAR(20),
       _F_C50_25_ VARCHAR(50),
       _F_B_26_ TINYINT(1),
       _F_I_26_ INTEGER,
       _F_L_26_ BIGINT,
       _F_N_26_ NUMERIC(19,5),
       _F_C5_26_ VARCHAR(5),
       _F_C10_26_ VARCHAR(10),
       _F_C20_26_ VARCHAR(20),
       _F_C50_26_ VARCHAR(50),
       _F_B_27_ TINYINT(1),
       _F_I_27_ INTEGER,
       _F_L_27_ BIGINT,
       _F_N_27_ NUMERIC(19,5),
       _F_C5_27_ VARCHAR(5),
       _F_C10_27_ VARCHAR(10),
       _F_C20_27_ VARCHAR(20),
       _F_C50_27_ VARCHAR(50),
       _F_B_28_ TINYINT(1),
       _F_I_28_ INTEGER,
       _F_L_28_ BIGINT,
       _F_N_28_ NUMERIC(19,5),
       _F_C5_28_ VARCHAR(5),
       _F_C10_28_ VARCHAR(10),
       _F_C20_28_ VARCHAR(20),
       _F_C50_28_ VARCHAR(50),
       _F_B_29_ TINYINT(1),
       _F_I_29_ INTEGER,
       _F_L_29_ BIGINT,
       _F_N_29_ NUMERIC(19,5),
       _F_C5_29_ VARCHAR(5),
       _F_C10_29_ VARCHAR(10),
       _F_C20_29_ VARCHAR(20),
       _F_C50_29_ VARCHAR(50),
       _F_B_30_ TINYINT(1),
       _F_I_30_ INTEGER,
       _F_N_30_ NUMERIC(19,5),
       _F_C5_30_ VARCHAR(5),
       _F_C10_30_ VARCHAR(10),
       _F_C20_30_ VARCHAR(20),
       _F_C50_30_ VARCHAR(50),
       _F_B_31_ TINYINT(1),
       _F_I_31_ INTEGER,
       _F_N_31_ NUMERIC(19,5),
       _F_C5_31_ VARCHAR(5),
       _F_C10_31_ VARCHAR(10),
       _F_C20_31_ VARCHAR(20),
       _F_C50_31_ VARCHAR(50),
       _F_B_32_ TINYINT(1),
       _F_I_32_ INTEGER,
       _F_N_32_ NUMERIC(19,5),
       _F_C5_32_ VARCHAR(5),
       _F_C10_32_ VARCHAR(10),
       _F_C20_32_ VARCHAR(20),
       _F_C50_32_ VARCHAR(50),
       _F_B_33_ TINYINT(1),
       _F_I_33_ INTEGER,
       _F_N_33_ NUMERIC(19,5),
       _F_C5_33_ VARCHAR(5),
       _F_C10_33_ VARCHAR(10),
       _F_C20_33_ VARCHAR(20),
       _F_C50_33_ VARCHAR(50),
       _F_B_34_ TINYINT(1),
       _F_I_34_ INTEGER,
       _F_N_34_ NUMERIC(19,5),
       _F_C5_34_ VARCHAR(5),
       _F_C10_34_ VARCHAR(10),
       _F_C20_34_ VARCHAR(20),
       _F_C50_34_ VARCHAR(50),
       _F_B_35_ TINYINT(1),
       _F_I_35_ INTEGER,
       _F_N_35_ NUMERIC(19,5),
       _F_C5_35_ VARCHAR(5),
       _F_C10_35_ VARCHAR(10),
       _F_C20_35_ VARCHAR(20),
       _F_C50_35_ VARCHAR(50),
       _F_B_36_ TINYINT(1),
       _F_I_36_ INTEGER,
       _F_N_36_ NUMERIC(19,5),
       _F_C5_36_ VARCHAR(5),
       _F_C10_36_ VARCHAR(10),
       _F_C20_36_ VARCHAR(20),
       _F_C50_36_ VARCHAR(50),
       _F_B_37_ TINYINT(1),
       _F_I_37_ INTEGER,
       _F_N_37_ NUMERIC(19,5),
       _F_C5_37_ VARCHAR(5),
       _F_C10_37_ VARCHAR(10),
       _F_C20_37_ VARCHAR(20),
       _F_C50_37_ VARCHAR(50),
       _F_B_38_ TINYINT(1),
       _F_I_38_ INTEGER,
       _F_N_38_ NUMERIC(19,5),
       _F_C5_38_ VARCHAR(5),
       _F_C10_38_ VARCHAR(10),
       _F_C20_38_ VARCHAR(20),
       _F_C50_38_ VARCHAR(50),
       _F_B_39_ TINYINT(1),
       _F_I_39_ INTEGER,
       _F_N_39_ NUMERIC(19,5),
       _F_C5_39_ VARCHAR(5),
       _F_C10_39_ VARCHAR(10),
       _F_C20_39_ VARCHAR(20),
       _F_C50_39_ VARCHAR(50),
       _F_B_40_ TINYINT(1),
       _F_I_40_ INTEGER,
       _F_N_40_ NUMERIC(19,5),
       _F_C5_40_ VARCHAR(5),
       _F_C10_40_ VARCHAR(10),
       _F_C20_40_ VARCHAR(20),
       _F_C50_40_ VARCHAR(50),
       _F_B_41_ TINYINT(1),
       _F_I_41_ INTEGER,
       _F_N_41_ NUMERIC(19,5),
       _F_C5_41_ VARCHAR(5),
       _F_C10_41_ VARCHAR(10),
       _F_C20_41_ VARCHAR(20),
       _F_C50_41_ VARCHAR(50),
       _F_B_42_ TINYINT(1),
       _F_I_42_ INTEGER,
       _F_N_42_ NUMERIC(19,5),
       _F_C5_42_ VARCHAR(5),
       _F_C10_42_ VARCHAR(10),
       _F_C20_42_ VARCHAR(20),
       _F_C50_42_ VARCHAR(50),
       _F_B_43_ TINYINT(1),
       _F_I_43_ INTEGER,
       _F_N_43_ NUMERIC(19,5),
       _F_C5_43_ VARCHAR(5),
       _F_C10_43_ VARCHAR(10),
       _F_C20_43_ VARCHAR(20),
       _F_C50_43_ VARCHAR(50),
       _F_B_44_ TINYINT(1),
       _F_I_44_ INTEGER,
       _F_N_44_ NUMERIC(19,5),
       _F_C5_44_ VARCHAR(5),
       _F_C10_44_ VARCHAR(10),
       _F_C20_44_ VARCHAR(20),
       _F_C50_44_ VARCHAR(50),
       _F_B_45_ TINYINT(1),
       _F_I_45_ INTEGER,
       _F_N_45_ NUMERIC(19,5),
       _F_C5_45_ VARCHAR(5),
       _F_C10_45_ VARCHAR(10),
       _F_C20_45_ VARCHAR(20),
       _F_C50_45_ VARCHAR(50),
       _F_B_46_ TINYINT(1),
       _F_I_46_ INTEGER,
       _F_N_46_ NUMERIC(19,5),
       _F_C5_46_ VARCHAR(5),
       _F_C10_46_ VARCHAR(10),
       _F_C20_46_ VARCHAR(20),
       _F_C50_46_ VARCHAR(50),
       _F_B_47_ TINYINT(1),
       _F_I_47_ INTEGER,
       _F_N_47_ NUMERIC(19,5),
       _F_C5_47_ VARCHAR(5),
       _F_C10_47_ VARCHAR(10),
       _F_C20_47_ VARCHAR(20),
       _F_C50_47_ VARCHAR(50),
       _F_B_48_ TINYINT(1),
       _F_I_48_ INTEGER,
       _F_N_48_ NUMERIC(19,5),
       _F_C5_48_ VARCHAR(5),
       _F_C10_48_ VARCHAR(10),
       _F_C20_48_ VARCHAR(20),
       _F_C50_48_ VARCHAR(50),
       _F_B_49_ TINYINT(1),
       _F_I_49_ INTEGER,
       _F_N_49_ NUMERIC(19,5),
       _F_C5_49_ VARCHAR(5),
       _F_C10_49_ VARCHAR(10),
       _F_C20_49_ VARCHAR(20),
       _F_C50_49_ VARCHAR(50),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (AttributeSetInstanceId)
    );

    create table AttributeSetInstanceStateEvents (
        AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       AttributeSetId VARCHAR(255),
       OrganizationId VARCHAR(255),
       ReferenceId VARCHAR(255),
       SerialNumber VARCHAR(255),
       Lot VARCHAR(255),
       Description VARCHAR(255),
       Hash VARCHAR(255),
       _F_B_0_ TINYINT(1),
       _F_I_0_ INTEGER,
       _F_L_0_ BIGINT,
       _F_DT_0_ DATETIME,
       _F_N_0_ NUMERIC(19,5),
       _F_C5_0_ VARCHAR(5),
       _F_C10_0_ VARCHAR(10),
       _F_C20_0_ VARCHAR(20),
       _F_C50_0_ VARCHAR(50),
       _F_C100_0_ VARCHAR(100),
       _F_C200_0_ VARCHAR(200),
       _F_C500_0_ TEXT,
       _F_C1000_0_ TEXT,
       _F_B_1_ TINYINT(1),
       _F_I_1_ INTEGER,
       _F_L_1_ BIGINT,
       _F_DT_1_ DATETIME,
       _F_N_1_ NUMERIC(19,5),
       _F_C5_1_ VARCHAR(5),
       _F_C10_1_ VARCHAR(10),
       _F_C20_1_ VARCHAR(20),
       _F_C50_1_ VARCHAR(50),
       _F_C100_1_ VARCHAR(100),
       _F_C200_1_ VARCHAR(200),
       _F_C500_1_ TEXT,
       _F_C1000_1_ TEXT,
       _F_B_2_ TINYINT(1),
       _F_I_2_ INTEGER,
       _F_L_2_ BIGINT,
       _F_DT_2_ DATETIME,
       _F_N_2_ NUMERIC(19,5),
       _F_C5_2_ VARCHAR(5),
       _F_C10_2_ VARCHAR(10),
       _F_C20_2_ VARCHAR(20),
       _F_C50_2_ VARCHAR(50),
       _F_C100_2_ VARCHAR(100),
       _F_C200_2_ VARCHAR(200),
       _F_C500_2_ TEXT,
       _F_C1000_2_ TEXT,
       _F_B_3_ TINYINT(1),
       _F_I_3_ INTEGER,
       _F_L_3_ BIGINT,
       _F_DT_3_ DATETIME,
       _F_N_3_ NUMERIC(19,5),
       _F_C5_3_ VARCHAR(5),
       _F_C10_3_ VARCHAR(10),
       _F_C20_3_ VARCHAR(20),
       _F_C50_3_ VARCHAR(50),
       _F_C100_3_ VARCHAR(100),
       _F_C200_3_ VARCHAR(200),
       _F_C500_3_ TEXT,
       _F_C1000_3_ TEXT,
       _F_B_4_ TINYINT(1),
       _F_I_4_ INTEGER,
       _F_L_4_ BIGINT,
       _F_DT_4_ DATETIME,
       _F_N_4_ NUMERIC(19,5),
       _F_C5_4_ VARCHAR(5),
       _F_C10_4_ VARCHAR(10),
       _F_C20_4_ VARCHAR(20),
       _F_C50_4_ VARCHAR(50),
       _F_C100_4_ VARCHAR(100),
       _F_C200_4_ VARCHAR(200),
       _F_C500_4_ TEXT,
       _F_C1000_4_ TEXT,
       _F_B_5_ TINYINT(1),
       _F_I_5_ INTEGER,
       _F_L_5_ BIGINT,
       _F_DT_5_ DATETIME,
       _F_N_5_ NUMERIC(19,5),
       _F_C5_5_ VARCHAR(5),
       _F_C10_5_ VARCHAR(10),
       _F_C20_5_ VARCHAR(20),
       _F_C50_5_ VARCHAR(50),
       _F_C100_5_ VARCHAR(100),
       _F_C200_5_ VARCHAR(200),
       _F_C500_5_ TEXT,
       _F_B_6_ TINYINT(1),
       _F_I_6_ INTEGER,
       _F_L_6_ BIGINT,
       _F_DT_6_ DATETIME,
       _F_N_6_ NUMERIC(19,5),
       _F_C5_6_ VARCHAR(5),
       _F_C10_6_ VARCHAR(10),
       _F_C20_6_ VARCHAR(20),
       _F_C50_6_ VARCHAR(50),
       _F_C100_6_ VARCHAR(100),
       _F_C200_6_ VARCHAR(200),
       _F_C500_6_ TEXT,
       _F_B_7_ TINYINT(1),
       _F_I_7_ INTEGER,
       _F_L_7_ BIGINT,
       _F_DT_7_ DATETIME,
       _F_N_7_ NUMERIC(19,5),
       _F_C5_7_ VARCHAR(5),
       _F_C10_7_ VARCHAR(10),
       _F_C20_7_ VARCHAR(20),
       _F_C50_7_ VARCHAR(50),
       _F_C100_7_ VARCHAR(100),
       _F_C200_7_ VARCHAR(200),
       _F_C500_7_ TEXT,
       _F_B_8_ TINYINT(1),
       _F_I_8_ INTEGER,
       _F_L_8_ BIGINT,
       _F_DT_8_ DATETIME,
       _F_N_8_ NUMERIC(19,5),
       _F_C5_8_ VARCHAR(5),
       _F_C10_8_ VARCHAR(10),
       _F_C20_8_ VARCHAR(20),
       _F_C50_8_ VARCHAR(50),
       _F_C100_8_ VARCHAR(100),
       _F_C200_8_ VARCHAR(200),
       _F_C500_8_ TEXT,
       _F_B_9_ TINYINT(1),
       _F_I_9_ INTEGER,
       _F_L_9_ BIGINT,
       _F_DT_9_ DATETIME,
       _F_N_9_ NUMERIC(19,5),
       _F_C5_9_ VARCHAR(5),
       _F_C10_9_ VARCHAR(10),
       _F_C20_9_ VARCHAR(20),
       _F_C50_9_ VARCHAR(50),
       _F_C100_9_ VARCHAR(100),
       _F_C200_9_ VARCHAR(200),
       _F_C500_9_ TEXT,
       _F_B_10_ TINYINT(1),
       _F_I_10_ INTEGER,
       _F_L_10_ BIGINT,
       _F_DT_10_ DATETIME,
       _F_N_10_ NUMERIC(19,5),
       _F_C5_10_ VARCHAR(5),
       _F_C10_10_ VARCHAR(10),
       _F_C20_10_ VARCHAR(20),
       _F_C50_10_ VARCHAR(50),
       _F_C100_10_ VARCHAR(100),
       _F_C200_10_ VARCHAR(200),
       _F_B_11_ TINYINT(1),
       _F_I_11_ INTEGER,
       _F_L_11_ BIGINT,
       _F_DT_11_ DATETIME,
       _F_N_11_ NUMERIC(19,5),
       _F_C5_11_ VARCHAR(5),
       _F_C10_11_ VARCHAR(10),
       _F_C20_11_ VARCHAR(20),
       _F_C50_11_ VARCHAR(50),
       _F_C100_11_ VARCHAR(100),
       _F_C200_11_ VARCHAR(200),
       _F_B_12_ TINYINT(1),
       _F_I_12_ INTEGER,
       _F_L_12_ BIGINT,
       _F_DT_12_ DATETIME,
       _F_N_12_ NUMERIC(19,5),
       _F_C5_12_ VARCHAR(5),
       _F_C10_12_ VARCHAR(10),
       _F_C20_12_ VARCHAR(20),
       _F_C50_12_ VARCHAR(50),
       _F_C100_12_ VARCHAR(100),
       _F_C200_12_ VARCHAR(200),
       _F_B_13_ TINYINT(1),
       _F_I_13_ INTEGER,
       _F_L_13_ BIGINT,
       _F_DT_13_ DATETIME,
       _F_N_13_ NUMERIC(19,5),
       _F_C5_13_ VARCHAR(5),
       _F_C10_13_ VARCHAR(10),
       _F_C20_13_ VARCHAR(20),
       _F_C50_13_ VARCHAR(50),
       _F_C100_13_ VARCHAR(100),
       _F_C200_13_ VARCHAR(200),
       _F_B_14_ TINYINT(1),
       _F_I_14_ INTEGER,
       _F_L_14_ BIGINT,
       _F_DT_14_ DATETIME,
       _F_N_14_ NUMERIC(19,5),
       _F_C5_14_ VARCHAR(5),
       _F_C10_14_ VARCHAR(10),
       _F_C20_14_ VARCHAR(20),
       _F_C50_14_ VARCHAR(50),
       _F_C100_14_ VARCHAR(100),
       _F_C200_14_ VARCHAR(200),
       _F_B_15_ TINYINT(1),
       _F_I_15_ INTEGER,
       _F_L_15_ BIGINT,
       _F_DT_15_ DATETIME,
       _F_N_15_ NUMERIC(19,5),
       _F_C5_15_ VARCHAR(5),
       _F_C10_15_ VARCHAR(10),
       _F_C20_15_ VARCHAR(20),
       _F_C50_15_ VARCHAR(50),
       _F_C100_15_ VARCHAR(100),
       _F_C200_15_ VARCHAR(200),
       _F_B_16_ TINYINT(1),
       _F_I_16_ INTEGER,
       _F_L_16_ BIGINT,
       _F_DT_16_ DATETIME,
       _F_N_16_ NUMERIC(19,5),
       _F_C5_16_ VARCHAR(5),
       _F_C10_16_ VARCHAR(10),
       _F_C20_16_ VARCHAR(20),
       _F_C50_16_ VARCHAR(50),
       _F_C100_16_ VARCHAR(100),
       _F_C200_16_ VARCHAR(200),
       _F_B_17_ TINYINT(1),
       _F_I_17_ INTEGER,
       _F_L_17_ BIGINT,
       _F_DT_17_ DATETIME,
       _F_N_17_ NUMERIC(19,5),
       _F_C5_17_ VARCHAR(5),
       _F_C10_17_ VARCHAR(10),
       _F_C20_17_ VARCHAR(20),
       _F_C50_17_ VARCHAR(50),
       _F_C100_17_ VARCHAR(100),
       _F_C200_17_ VARCHAR(200),
       _F_B_18_ TINYINT(1),
       _F_I_18_ INTEGER,
       _F_L_18_ BIGINT,
       _F_DT_18_ DATETIME,
       _F_N_18_ NUMERIC(19,5),
       _F_C5_18_ VARCHAR(5),
       _F_C10_18_ VARCHAR(10),
       _F_C20_18_ VARCHAR(20),
       _F_C50_18_ VARCHAR(50),
       _F_C100_18_ VARCHAR(100),
       _F_C200_18_ VARCHAR(200),
       _F_B_19_ TINYINT(1),
       _F_I_19_ INTEGER,
       _F_L_19_ BIGINT,
       _F_DT_19_ DATETIME,
       _F_N_19_ NUMERIC(19,5),
       _F_C5_19_ VARCHAR(5),
       _F_C10_19_ VARCHAR(10),
       _F_C20_19_ VARCHAR(20),
       _F_C50_19_ VARCHAR(50),
       _F_C100_19_ VARCHAR(100),
       _F_C200_19_ VARCHAR(200),
       _F_B_20_ TINYINT(1),
       _F_I_20_ INTEGER,
       _F_L_20_ BIGINT,
       _F_N_20_ NUMERIC(19,5),
       _F_C5_20_ VARCHAR(5),
       _F_C10_20_ VARCHAR(10),
       _F_C20_20_ VARCHAR(20),
       _F_C50_20_ VARCHAR(50),
       _F_B_21_ TINYINT(1),
       _F_I_21_ INTEGER,
       _F_L_21_ BIGINT,
       _F_N_21_ NUMERIC(19,5),
       _F_C5_21_ VARCHAR(5),
       _F_C10_21_ VARCHAR(10),
       _F_C20_21_ VARCHAR(20),
       _F_C50_21_ VARCHAR(50),
       _F_B_22_ TINYINT(1),
       _F_I_22_ INTEGER,
       _F_L_22_ BIGINT,
       _F_N_22_ NUMERIC(19,5),
       _F_C5_22_ VARCHAR(5),
       _F_C10_22_ VARCHAR(10),
       _F_C20_22_ VARCHAR(20),
       _F_C50_22_ VARCHAR(50),
       _F_B_23_ TINYINT(1),
       _F_I_23_ INTEGER,
       _F_L_23_ BIGINT,
       _F_N_23_ NUMERIC(19,5),
       _F_C5_23_ VARCHAR(5),
       _F_C10_23_ VARCHAR(10),
       _F_C20_23_ VARCHAR(20),
       _F_C50_23_ VARCHAR(50),
       _F_B_24_ TINYINT(1),
       _F_I_24_ INTEGER,
       _F_L_24_ BIGINT,
       _F_N_24_ NUMERIC(19,5),
       _F_C5_24_ VARCHAR(5),
       _F_C10_24_ VARCHAR(10),
       _F_C20_24_ VARCHAR(20),
       _F_C50_24_ VARCHAR(50),
       _F_B_25_ TINYINT(1),
       _F_I_25_ INTEGER,
       _F_L_25_ BIGINT,
       _F_N_25_ NUMERIC(19,5),
       _F_C5_25_ VARCHAR(5),
       _F_C10_25_ VARCHAR(10),
       _F_C20_25_ VARCHAR(20),
       _F_C50_25_ VARCHAR(50),
       _F_B_26_ TINYINT(1),
       _F_I_26_ INTEGER,
       _F_L_26_ BIGINT,
       _F_N_26_ NUMERIC(19,5),
       _F_C5_26_ VARCHAR(5),
       _F_C10_26_ VARCHAR(10),
       _F_C20_26_ VARCHAR(20),
       _F_C50_26_ VARCHAR(50),
       _F_B_27_ TINYINT(1),
       _F_I_27_ INTEGER,
       _F_L_27_ BIGINT,
       _F_N_27_ NUMERIC(19,5),
       _F_C5_27_ VARCHAR(5),
       _F_C10_27_ VARCHAR(10),
       _F_C20_27_ VARCHAR(20),
       _F_C50_27_ VARCHAR(50),
       _F_B_28_ TINYINT(1),
       _F_I_28_ INTEGER,
       _F_L_28_ BIGINT,
       _F_N_28_ NUMERIC(19,5),
       _F_C5_28_ VARCHAR(5),
       _F_C10_28_ VARCHAR(10),
       _F_C20_28_ VARCHAR(20),
       _F_C50_28_ VARCHAR(50),
       _F_B_29_ TINYINT(1),
       _F_I_29_ INTEGER,
       _F_L_29_ BIGINT,
       _F_N_29_ NUMERIC(19,5),
       _F_C5_29_ VARCHAR(5),
       _F_C10_29_ VARCHAR(10),
       _F_C20_29_ VARCHAR(20),
       _F_C50_29_ VARCHAR(50),
       _F_B_30_ TINYINT(1),
       _F_I_30_ INTEGER,
       _F_N_30_ NUMERIC(19,5),
       _F_C5_30_ VARCHAR(5),
       _F_C10_30_ VARCHAR(10),
       _F_C20_30_ VARCHAR(20),
       _F_C50_30_ VARCHAR(50),
       _F_B_31_ TINYINT(1),
       _F_I_31_ INTEGER,
       _F_N_31_ NUMERIC(19,5),
       _F_C5_31_ VARCHAR(5),
       _F_C10_31_ VARCHAR(10),
       _F_C20_31_ VARCHAR(20),
       _F_C50_31_ VARCHAR(50),
       _F_B_32_ TINYINT(1),
       _F_I_32_ INTEGER,
       _F_N_32_ NUMERIC(19,5),
       _F_C5_32_ VARCHAR(5),
       _F_C10_32_ VARCHAR(10),
       _F_C20_32_ VARCHAR(20),
       _F_C50_32_ VARCHAR(50),
       _F_B_33_ TINYINT(1),
       _F_I_33_ INTEGER,
       _F_N_33_ NUMERIC(19,5),
       _F_C5_33_ VARCHAR(5),
       _F_C10_33_ VARCHAR(10),
       _F_C20_33_ VARCHAR(20),
       _F_C50_33_ VARCHAR(50),
       _F_B_34_ TINYINT(1),
       _F_I_34_ INTEGER,
       _F_N_34_ NUMERIC(19,5),
       _F_C5_34_ VARCHAR(5),
       _F_C10_34_ VARCHAR(10),
       _F_C20_34_ VARCHAR(20),
       _F_C50_34_ VARCHAR(50),
       _F_B_35_ TINYINT(1),
       _F_I_35_ INTEGER,
       _F_N_35_ NUMERIC(19,5),
       _F_C5_35_ VARCHAR(5),
       _F_C10_35_ VARCHAR(10),
       _F_C20_35_ VARCHAR(20),
       _F_C50_35_ VARCHAR(50),
       _F_B_36_ TINYINT(1),
       _F_I_36_ INTEGER,
       _F_N_36_ NUMERIC(19,5),
       _F_C5_36_ VARCHAR(5),
       _F_C10_36_ VARCHAR(10),
       _F_C20_36_ VARCHAR(20),
       _F_C50_36_ VARCHAR(50),
       _F_B_37_ TINYINT(1),
       _F_I_37_ INTEGER,
       _F_N_37_ NUMERIC(19,5),
       _F_C5_37_ VARCHAR(5),
       _F_C10_37_ VARCHAR(10),
       _F_C20_37_ VARCHAR(20),
       _F_C50_37_ VARCHAR(50),
       _F_B_38_ TINYINT(1),
       _F_I_38_ INTEGER,
       _F_N_38_ NUMERIC(19,5),
       _F_C5_38_ VARCHAR(5),
       _F_C10_38_ VARCHAR(10),
       _F_C20_38_ VARCHAR(20),
       _F_C50_38_ VARCHAR(50),
       _F_B_39_ TINYINT(1),
       _F_I_39_ INTEGER,
       _F_N_39_ NUMERIC(19,5),
       _F_C5_39_ VARCHAR(5),
       _F_C10_39_ VARCHAR(10),
       _F_C20_39_ VARCHAR(20),
       _F_C50_39_ VARCHAR(50),
       _F_B_40_ TINYINT(1),
       _F_I_40_ INTEGER,
       _F_N_40_ NUMERIC(19,5),
       _F_C5_40_ VARCHAR(5),
       _F_C10_40_ VARCHAR(10),
       _F_C20_40_ VARCHAR(20),
       _F_C50_40_ VARCHAR(50),
       _F_B_41_ TINYINT(1),
       _F_I_41_ INTEGER,
       _F_N_41_ NUMERIC(19,5),
       _F_C5_41_ VARCHAR(5),
       _F_C10_41_ VARCHAR(10),
       _F_C20_41_ VARCHAR(20),
       _F_C50_41_ VARCHAR(50),
       _F_B_42_ TINYINT(1),
       _F_I_42_ INTEGER,
       _F_N_42_ NUMERIC(19,5),
       _F_C5_42_ VARCHAR(5),
       _F_C10_42_ VARCHAR(10),
       _F_C20_42_ VARCHAR(20),
       _F_C50_42_ VARCHAR(50),
       _F_B_43_ TINYINT(1),
       _F_I_43_ INTEGER,
       _F_N_43_ NUMERIC(19,5),
       _F_C5_43_ VARCHAR(5),
       _F_C10_43_ VARCHAR(10),
       _F_C20_43_ VARCHAR(20),
       _F_C50_43_ VARCHAR(50),
       _F_B_44_ TINYINT(1),
       _F_I_44_ INTEGER,
       _F_N_44_ NUMERIC(19,5),
       _F_C5_44_ VARCHAR(5),
       _F_C10_44_ VARCHAR(10),
       _F_C20_44_ VARCHAR(20),
       _F_C50_44_ VARCHAR(50),
       _F_B_45_ TINYINT(1),
       _F_I_45_ INTEGER,
       _F_N_45_ NUMERIC(19,5),
       _F_C5_45_ VARCHAR(5),
       _F_C10_45_ VARCHAR(10),
       _F_C20_45_ VARCHAR(20),
       _F_C50_45_ VARCHAR(50),
       _F_B_46_ TINYINT(1),
       _F_I_46_ INTEGER,
       _F_N_46_ NUMERIC(19,5),
       _F_C5_46_ VARCHAR(5),
       _F_C10_46_ VARCHAR(10),
       _F_C20_46_ VARCHAR(20),
       _F_C50_46_ VARCHAR(50),
       _F_B_47_ TINYINT(1),
       _F_I_47_ INTEGER,
       _F_N_47_ NUMERIC(19,5),
       _F_C5_47_ VARCHAR(5),
       _F_C10_47_ VARCHAR(10),
       _F_C20_47_ VARCHAR(20),
       _F_C50_47_ VARCHAR(50),
       _F_B_48_ TINYINT(1),
       _F_I_48_ INTEGER,
       _F_N_48_ NUMERIC(19,5),
       _F_C5_48_ VARCHAR(5),
       _F_C10_48_ VARCHAR(10),
       _F_C20_48_ VARCHAR(20),
       _F_C50_48_ VARCHAR(50),
       _F_B_49_ TINYINT(1),
       _F_I_49_ INTEGER,
       _F_N_49_ NUMERIC(19,5),
       _F_C5_49_ VARCHAR(5),
       _F_C10_49_ VARCHAR(10),
       _F_C20_49_ VARCHAR(20),
       _F_C50_49_ VARCHAR(50),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       primary key (AttributeSetInstanceId, Version)
    );

    create table AttributeSetInstanceStateEventRemovedProperties (
        AttributeSetInstanceId VARCHAR(50) not null,
       Version BIGINT not null,
       RemovedPropertyName VARCHAR(255) not null,
       primary key (AttributeSetInstanceId, Version, RemovedPropertyName)
    );

    create table AttributeSetInstanceExtensionFieldGroups (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       FieldType VARCHAR(255),
       FieldLength INTEGER,
       FieldCount INTEGER,
       NameFormat VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (Id)
    );

    create table AttributeSetInstanceExtensionFieldGroupStateEvents (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       FieldType VARCHAR(255),
       FieldLength INTEGER,
       FieldCount INTEGER,
       NameFormat VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyFieldTypeRemoved TINYINT(1),
       IsPropertyFieldLengthRemoved TINYINT(1),
       IsPropertyFieldCountRemoved TINYINT(1),
       IsPropertyNameFormatRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (Id, Version)
    );

    create table AttributeSetInstanceExtensionFields (
        AttributeSetInstanceExtensionFieldIdGroupId VARCHAR(50) not null,
       AttributeSetInstanceExtensionFieldIdIndex VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       Type VARCHAR(255),
       Length INTEGER,
       Alias VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (AttributeSetInstanceExtensionFieldIdGroupId, AttributeSetInstanceExtensionFieldIdIndex),
      unique (Name),
      unique (Alias)
    );

    create table AttributeSetInstanceExtensionFieldStateEvents (
        AttributeSetInstanceExtensionFieldIdGroupId VARCHAR(50) not null,
       AttributeSetInstanceExtensionFieldIdIndex VARCHAR(50) not null,
       AttributeSetInstanceExtensionFieldGroupVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Type VARCHAR(255),
       Length INTEGER,
       Alias VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyTypeRemoved TINYINT(1),
       IsPropertyLengthRemoved TINYINT(1),
       IsPropertyAliasRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeSetInstanceExtensionFieldIdGroupId, AttributeSetInstanceExtensionFieldIdIndex, AttributeSetInstanceExtensionFieldGroupVersion),
      unique (Name),
      unique (Alias)
    );

    create table Attributes (
        AttributeId VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       IsMandatory TINYINT(1),
       IsInstanceAttribute TINYINT(1),
       AttributeValueType VARCHAR(255),
       AttributeValueLength INTEGER,
       IsList TINYINT(1),
       FieldName VARCHAR(255),
       ReferenceId VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (AttributeId),
      unique (FieldName)
    );

    create table AttributeStateEvents (
        AttributeId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       IsMandatory TINYINT(1),
       IsInstanceAttribute TINYINT(1),
       AttributeValueType VARCHAR(255),
       AttributeValueLength INTEGER,
       IsList TINYINT(1),
       FieldName VARCHAR(255),
       ReferenceId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyOrganizationIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyIsMandatoryRemoved TINYINT(1),
       IsPropertyIsInstanceAttributeRemoved TINYINT(1),
       IsPropertyAttributeValueTypeRemoved TINYINT(1),
       IsPropertyAttributeValueLengthRemoved TINYINT(1),
       IsPropertyIsListRemoved TINYINT(1),
       IsPropertyFieldNameRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeId, Version),
      unique (FieldName)
    );

    create table AttributeValues (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue)
    );

    create table AttributeValueStateEvents (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue, AttributeVersion)
    );

    create table AttributeSets (
        AttributeSetId VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       SerialNumberAttributeId VARCHAR(255),
       LotAttributeId VARCHAR(255),
       ReferenceId VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (AttributeSetId)
    );

    create table AttributeSetStateEvents (
        AttributeSetId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       OrganizationId VARCHAR(255),
       Description VARCHAR(255),
       SerialNumberAttributeId VARCHAR(255),
       LotAttributeId VARCHAR(255),
       ReferenceId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyOrganizationIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertySerialNumberAttributeIdRemoved TINYINT(1),
       IsPropertyLotAttributeIdRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeSetId, Version)
    );

    create table AttributeUses (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       Version BIGINT not null,
       SequenceNumber INTEGER,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId)
    );

    create table AttributeUseStateEvents (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       AttributeSetVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       SequenceNumber INTEGER,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertySequenceNumberRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId, AttributeSetVersion)
    );

    create table Audiences (
        ClientId VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       Base64Secret VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (ClientId)
    );

    create table AudienceStateEvents (
        ClientId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Base64Secret VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyBase64SecretRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (ClientId, Version)
    );

    create table DayPlans (
        DayPlanIdPersonalNameFirstName VARCHAR(50) not null,
       DayPlanIdPersonalNameLastName VARCHAR(50) not null,
       DayPlanIdYear INTEGER not null,
       DayPlanIdMonth INTEGER not null,
       DayPlanIdDay INTEGER not null,
       Version BIGINT not null,
       Description TEXT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (DayPlanIdPersonalNameFirstName, DayPlanIdPersonalNameLastName, DayPlanIdYear, DayPlanIdMonth, DayPlanIdDay)
    );

    create table DayPlanStateEvents (
        DayPlanIdPersonalNameFirstName VARCHAR(50) not null,
       DayPlanIdPersonalNameLastName VARCHAR(50) not null,
       DayPlanIdYear INTEGER not null,
       DayPlanIdMonth INTEGER not null,
       DayPlanIdDay INTEGER not null,
       PersonVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description TEXT,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (DayPlanIdPersonalNameFirstName, DayPlanIdPersonalNameLastName, DayPlanIdYear, DayPlanIdMonth, DayPlanIdDay, PersonVersion)
    );

    create table AttributeSetInstanceExtensionField_RV (
        AttributeSetInstanceExtensionFieldIdGroupId VARCHAR(50) not null,
       AttributeSetInstanceExtensionFieldIdIndex VARCHAR(50) not null,
       AttrSetInstEFGroupVersion BIGINT not null,
       Name VARCHAR(255),
       Type VARCHAR(255),
       Length INTEGER,
       Alias VARCHAR(255),
       Description VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       AttrSetInstEFGroupFieldType VARCHAR(255),
       AttrSetInstEFGroupFieldLength INTEGER,
       AttrSetInstEFGroupFieldCount INTEGER,
       AttrSetInstEFGroupNameFormat VARCHAR(255),
       AttrSetInstEFGroupDescription VARCHAR(255),
       AttrSetInstEFGroupCreatedBy VARCHAR(255),
       AttrSetInstEFGroupCreatedAt DATETIME,
       AttrSetInstEFGroupUpdatedBy VARCHAR(255),
       AttrSetInstEFGroupUpdatedAt DATETIME,
       AttrSetInstEFGroupActive TINYINT(1),
       AttrSetInstEFGroupDeleted TINYINT(1),
       primary key (AttributeSetInstanceExtensionFieldIdGroupId, AttributeSetInstanceExtensionFieldIdIndex),
      unique (Name),
      unique (Alias)
    );

    create table AttributeSetInstanceExtensionFieldMvoStateEvents (
        AttributeSetInstanceExtensionFieldIdGroupId VARCHAR(50) not null,
       AttributeSetInstanceExtensionFieldIdIndex VARCHAR(50) not null,
       AttrSetInstEFGroupVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Type VARCHAR(255),
       Length INTEGER,
       Alias VARCHAR(255),
       Description VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       AttrSetInstEFGroupFieldType VARCHAR(255),
       AttrSetInstEFGroupFieldLength INTEGER,
       AttrSetInstEFGroupFieldCount INTEGER,
       AttrSetInstEFGroupNameFormat VARCHAR(255),
       AttrSetInstEFGroupDescription VARCHAR(255),
       AttrSetInstEFGroupCreatedBy VARCHAR(255),
       AttrSetInstEFGroupCreatedAt DATETIME,
       AttrSetInstEFGroupUpdatedBy VARCHAR(255),
       AttrSetInstEFGroupUpdatedAt DATETIME,
       AttrSetInstEFGroupActive TINYINT(1),
       AttrSetInstEFGroupDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyTypeRemoved TINYINT(1),
       IsPropertyLengthRemoved TINYINT(1),
       IsPropertyAliasRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupFieldTypeRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupFieldLengthRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupFieldCountRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupNameFormatRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupDescriptionRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupCreatedByRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupCreatedAtRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupUpdatedByRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupUpdatedAtRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupActiveRemoved TINYINT(1),
       IsPropertyAttrSetInstEFGroupDeletedRemoved TINYINT(1),
       primary key (AttributeSetInstanceExtensionFieldIdGroupId, AttributeSetInstanceExtensionFieldIdIndex, AttrSetInstEFGroupVersion),
      unique (Name),
      unique (Alias)
    );

    create table AttributeValue_RV (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       AttributeName VARCHAR(255),
       AttributeOrganizationId VARCHAR(255),
       AttributeDescription VARCHAR(255),
       AttributeIsMandatory TINYINT(1),
       AttributeIsInstanceAttribute TINYINT(1),
       AttributeAttributeValueType VARCHAR(255),
       AttributeAttributeValueLength INTEGER,
       AttributeIsList TINYINT(1),
       AttributeFieldName VARCHAR(255),
       AttributeReferenceId VARCHAR(255),
       AttributeCreatedBy VARCHAR(255),
       AttributeCreatedAt DATETIME,
       AttributeUpdatedBy VARCHAR(255),
       AttributeUpdatedAt DATETIME,
       AttributeActive TINYINT(1),
       AttributeDeleted TINYINT(1),
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue)
    );

    create table AttributeValueMvoStateEvents (
        AttributeValueIdAttributeId VARCHAR(50) not null,
       AttributeValueIdValue VARCHAR(50) not null,
       AttributeVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       ReferenceId VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       AttributeName VARCHAR(255),
       AttributeOrganizationId VARCHAR(255),
       AttributeDescription VARCHAR(255),
       AttributeIsMandatory TINYINT(1),
       AttributeIsInstanceAttribute TINYINT(1),
       AttributeAttributeValueType VARCHAR(255),
       AttributeAttributeValueLength INTEGER,
       AttributeIsList TINYINT(1),
       AttributeFieldName VARCHAR(255),
       AttributeReferenceId VARCHAR(255),
       AttributeCreatedBy VARCHAR(255),
       AttributeCreatedAt DATETIME,
       AttributeUpdatedBy VARCHAR(255),
       AttributeUpdatedAt DATETIME,
       AttributeActive TINYINT(1),
       AttributeDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyReferenceIdRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyAttributeNameRemoved TINYINT(1),
       IsPropertyAttributeOrganizationIdRemoved TINYINT(1),
       IsPropertyAttributeDescriptionRemoved TINYINT(1),
       IsPropertyAttributeIsMandatoryRemoved TINYINT(1),
       IsPropertyAttributeIsInstanceAttributeRemoved TINYINT(1),
       IsPropertyAttributeAttributeValueTypeRemoved TINYINT(1),
       IsPropertyAttributeAttributeValueLengthRemoved TINYINT(1),
       IsPropertyAttributeIsListRemoved TINYINT(1),
       IsPropertyAttributeFieldNameRemoved TINYINT(1),
       IsPropertyAttributeReferenceIdRemoved TINYINT(1),
       IsPropertyAttributeCreatedByRemoved TINYINT(1),
       IsPropertyAttributeCreatedAtRemoved TINYINT(1),
       IsPropertyAttributeUpdatedByRemoved TINYINT(1),
       IsPropertyAttributeUpdatedAtRemoved TINYINT(1),
       IsPropertyAttributeActiveRemoved TINYINT(1),
       IsPropertyAttributeDeletedRemoved TINYINT(1),
       primary key (AttributeValueIdAttributeId, AttributeValueIdValue, AttributeVersion)
    );

    create table AttributeUse_RV (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       AttributeSetVersion BIGINT not null,
       SequenceNumber INTEGER,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       AttributeSetName VARCHAR(255),
       AttributeSetOrganizationId VARCHAR(255),
       AttributeSetDescription VARCHAR(255),
       AttributeSetSerialNumberAttributeId VARCHAR(255),
       AttributeSetLotAttributeId VARCHAR(255),
       AttributeSetReferenceId VARCHAR(255),
       AttributeSetCreatedBy VARCHAR(255),
       AttributeSetCreatedAt DATETIME,
       AttributeSetUpdatedBy VARCHAR(255),
       AttributeSetUpdatedAt DATETIME,
       AttributeSetActive TINYINT(1),
       AttributeSetDeleted TINYINT(1),
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId)
    );

    create table AttributeUseMvoStateEvents (
        AttributeSetAttributeUseIdAttributeSetId VARCHAR(50) not null,
       AttributeSetAttributeUseIdAttributeId VARCHAR(50) not null,
       AttributeSetVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       SequenceNumber INTEGER,
       Version BIGINT,
       Active TINYINT(1),
       AttributeSetName VARCHAR(255),
       AttributeSetOrganizationId VARCHAR(255),
       AttributeSetDescription VARCHAR(255),
       AttributeSetSerialNumberAttributeId VARCHAR(255),
       AttributeSetLotAttributeId VARCHAR(255),
       AttributeSetReferenceId VARCHAR(255),
       AttributeSetCreatedBy VARCHAR(255),
       AttributeSetCreatedAt DATETIME,
       AttributeSetUpdatedBy VARCHAR(255),
       AttributeSetUpdatedAt DATETIME,
       AttributeSetActive TINYINT(1),
       AttributeSetDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertySequenceNumberRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyAttributeSetNameRemoved TINYINT(1),
       IsPropertyAttributeSetOrganizationIdRemoved TINYINT(1),
       IsPropertyAttributeSetDescriptionRemoved TINYINT(1),
       IsPropertyAttributeSetSerialNumberAttributeIdRemoved TINYINT(1),
       IsPropertyAttributeSetLotAttributeIdRemoved TINYINT(1),
       IsPropertyAttributeSetReferenceIdRemoved TINYINT(1),
       IsPropertyAttributeSetCreatedByRemoved TINYINT(1),
       IsPropertyAttributeSetCreatedAtRemoved TINYINT(1),
       IsPropertyAttributeSetUpdatedByRemoved TINYINT(1),
       IsPropertyAttributeSetUpdatedAtRemoved TINYINT(1),
       IsPropertyAttributeSetActiveRemoved TINYINT(1),
       IsPropertyAttributeSetDeletedRemoved TINYINT(1),
       primary key (AttributeSetAttributeUseIdAttributeSetId, AttributeSetAttributeUseIdAttributeId, AttributeSetVersion)
    );

    create table DayPlan_RV (
        DayPlanIdPersonalNameFirstName VARCHAR(50) not null,
       DayPlanIdPersonalNameLastName VARCHAR(50) not null,
       DayPlanIdYear INTEGER not null,
       DayPlanIdMonth INTEGER not null,
       DayPlanIdDay INTEGER not null,
       PersonVersion BIGINT not null,
       Description TEXT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Version BIGINT,
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       MonthPlanDescription TEXT,
       MonthPlanCreatedBy VARCHAR(255),
       MonthPlanUpdatedBy VARCHAR(255),
       MonthPlanVersion BIGINT,
       MonthPlanCreatedAt DATETIME,
       MonthPlanUpdatedAt DATETIME,
       MonthPlanActive TINYINT(1),
       MonthPlanDeleted TINYINT(1),
       YearPlanDescription TEXT,
       YearPlanCreatedBy VARCHAR(255),
       YearPlanUpdatedBy VARCHAR(255),
       YearPlanVersion BIGINT,
       YearPlanCreatedAt DATETIME,
       YearPlanUpdatedAt DATETIME,
       YearPlanActive TINYINT(1),
       YearPlanDeleted TINYINT(1),
       PersonBirthDate DATETIME,
       PersonLovesFirstName VARCHAR(50),
       PersonLovesLastName VARCHAR(50),
       PersonEmergencyContactPersonalNameFirstName VARCHAR(50),
       PersonEmergencyContactPersonalNameLastName VARCHAR(50),
       PersonEmergencyContactPhoneNumber VARCHAR(255),
       PersonEmergencyContactAddress VARCHAR(255),
       PersonCreatedBy VARCHAR(255),
       PersonUpdatedBy VARCHAR(255),
       PersonCreatedAt DATETIME,
       PersonUpdatedAt DATETIME,
       PersonActive TINYINT(1),
       PersonDeleted TINYINT(1),
       primary key (DayPlanIdPersonalNameFirstName, DayPlanIdPersonalNameLastName, DayPlanIdYear, DayPlanIdMonth, DayPlanIdDay)
    );

    create table DayPlanMvoStateEvents (
        DayPlanIdPersonalNameFirstName VARCHAR(50) not null,
       DayPlanIdPersonalNameLastName VARCHAR(50) not null,
       DayPlanIdYear INTEGER not null,
       DayPlanIdMonth INTEGER not null,
       DayPlanIdDay INTEGER not null,
       PersonVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description TEXT,
       Version BIGINT,
       Active TINYINT(1),
       MonthPlanDescription TEXT,
       MonthPlanCreatedBy VARCHAR(255),
       MonthPlanUpdatedBy VARCHAR(255),
       MonthPlanVersion BIGINT,
       MonthPlanCreatedAt DATETIME,
       MonthPlanUpdatedAt DATETIME,
       MonthPlanActive TINYINT(1),
       MonthPlanDeleted TINYINT(1),
       YearPlanDescription TEXT,
       YearPlanCreatedBy VARCHAR(255),
       YearPlanUpdatedBy VARCHAR(255),
       YearPlanVersion BIGINT,
       YearPlanCreatedAt DATETIME,
       YearPlanUpdatedAt DATETIME,
       YearPlanActive TINYINT(1),
       YearPlanDeleted TINYINT(1),
       PersonBirthDate DATETIME,
       PersonLovesFirstName VARCHAR(50),
       PersonLovesLastName VARCHAR(50),
       PersonEmergencyContactPersonalNameFirstName VARCHAR(50),
       PersonEmergencyContactPersonalNameLastName VARCHAR(50),
       PersonEmergencyContactPhoneNumber VARCHAR(255),
       PersonEmergencyContactAddress VARCHAR(255),
       PersonCreatedBy VARCHAR(255),
       PersonUpdatedBy VARCHAR(255),
       PersonCreatedAt DATETIME,
       PersonUpdatedAt DATETIME,
       PersonActive TINYINT(1),
       PersonDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyMonthPlanDescriptionRemoved TINYINT(1),
       IsPropertyMonthPlanCreatedByRemoved TINYINT(1),
       IsPropertyMonthPlanUpdatedByRemoved TINYINT(1),
       IsPropertyMonthPlanVersionRemoved TINYINT(1),
       IsPropertyMonthPlanCreatedAtRemoved TINYINT(1),
       IsPropertyMonthPlanUpdatedAtRemoved TINYINT(1),
       IsPropertyMonthPlanActiveRemoved TINYINT(1),
       IsPropertyMonthPlanDeletedRemoved TINYINT(1),
       IsPropertyYearPlanDescriptionRemoved TINYINT(1),
       IsPropertyYearPlanCreatedByRemoved TINYINT(1),
       IsPropertyYearPlanUpdatedByRemoved TINYINT(1),
       IsPropertyYearPlanVersionRemoved TINYINT(1),
       IsPropertyYearPlanCreatedAtRemoved TINYINT(1),
       IsPropertyYearPlanUpdatedAtRemoved TINYINT(1),
       IsPropertyYearPlanActiveRemoved TINYINT(1),
       IsPropertyYearPlanDeletedRemoved TINYINT(1),
       IsPropertyPersonBirthDateRemoved TINYINT(1),
       IsPropertyPersonLovesRemoved TINYINT(1),
       IsPropertyPersonEmergencyContactRemoved TINYINT(1),
       IsPropertyPersonCreatedByRemoved TINYINT(1),
       IsPropertyPersonUpdatedByRemoved TINYINT(1),
       IsPropertyPersonCreatedAtRemoved TINYINT(1),
       IsPropertyPersonUpdatedAtRemoved TINYINT(1),
       IsPropertyPersonActiveRemoved TINYINT(1),
       IsPropertyPersonDeletedRemoved TINYINT(1),
       primary key (DayPlanIdPersonalNameFirstName, DayPlanIdPersonalNameLastName, DayPlanIdYear, DayPlanIdMonth, DayPlanIdDay, PersonVersion)
    );

    create table Roles (
        RoleId VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (RoleId)
    );

    create table RoleStateEvents (
        RoleId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (RoleId, Version)
    );

    create table Permissions (
        PermissionId VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       ParentPermissionId VARCHAR(255),
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (PermissionId)
    );

    create table PermissionStateEvents (
        PermissionId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       ParentPermissionId VARCHAR(255),
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyParentPermissionIdRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (PermissionId, Version)
    );

    create table RolePermissions (
        IdRoleId VARCHAR(255) not null,
       IdPermissionId VARCHAR(255) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (IdRoleId, IdPermissionId)
    );

    create table RolePermissionStateEvents (
        IdRoleId VARCHAR(255) not null,
       IdPermissionId VARCHAR(255) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (IdRoleId, IdPermissionId, Version)
    );

    create table Users (
        UserId VARCHAR(50) not null,
       Version BIGINT not null,
       UserName VARCHAR(255),
       AccessFailedCount INTEGER,
       Email VARCHAR(255),
       EmailConfirmed TINYINT(1),
       LockoutEnabled TINYINT(1),
       LockoutEndDateUtc DATETIME,
       PasswordHash VARCHAR(255),
       PhoneNumber VARCHAR(255),
       PhoneNumberConfirmed TINYINT(1),
       TwoFactorEnabled TINYINT(1),
       SecurityStamp VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (UserId),
      unique (UserName)
    );

    create table UserStateEvents (
        UserId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       UserName VARCHAR(255),
       AccessFailedCount INTEGER,
       Email VARCHAR(255),
       EmailConfirmed TINYINT(1),
       LockoutEnabled TINYINT(1),
       LockoutEndDateUtc DATETIME,
       PasswordHash VARCHAR(255),
       PhoneNumber VARCHAR(255),
       PhoneNumberConfirmed TINYINT(1),
       TwoFactorEnabled TINYINT(1),
       SecurityStamp VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyUserNameRemoved TINYINT(1),
       IsPropertyAccessFailedCountRemoved TINYINT(1),
       IsPropertyEmailRemoved TINYINT(1),
       IsPropertyEmailConfirmedRemoved TINYINT(1),
       IsPropertyLockoutEnabledRemoved TINYINT(1),
       IsPropertyLockoutEndDateUtcRemoved TINYINT(1),
       IsPropertyPasswordHashRemoved TINYINT(1),
       IsPropertyPhoneNumberRemoved TINYINT(1),
       IsPropertyPhoneNumberConfirmedRemoved TINYINT(1),
       IsPropertyTwoFactorEnabledRemoved TINYINT(1),
       IsPropertySecurityStampRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (UserId, Version),
      unique (UserName)
    );

    create table UserRoles (
        UserRoleIdUserId VARCHAR(50) not null,
       UserRoleIdRoleId VARCHAR(50) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (UserRoleIdUserId, UserRoleIdRoleId)
    );

    create table UserRoleStateEvents (
        UserRoleIdUserId VARCHAR(50) not null,
       UserRoleIdRoleId VARCHAR(50) not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyActiveRemoved TINYINT(1),
       primary key (UserRoleIdUserId, UserRoleIdRoleId, UserVersion)
    );

    create table UserClaims (
        UserClaimIdUserId VARCHAR(50) not null,
       UserClaimIdClaimId INTEGER not null,
       Version BIGINT not null,
       ClaimType VARCHAR(255),
       ClaimValue VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (UserClaimIdUserId, UserClaimIdClaimId)
    );

    create table UserClaimStateEvents (
        UserClaimIdUserId VARCHAR(50) not null,
       UserClaimIdClaimId INTEGER not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ClaimType VARCHAR(255),
       ClaimValue VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyClaimTypeRemoved TINYINT(1),
       IsPropertyClaimValueRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (UserClaimIdUserId, UserClaimIdClaimId, UserVersion)
    );

    create table UserPermissions (
        UserPermissionIdUserId VARCHAR(50) not null,
       UserPermissionIdPermissionId VARCHAR(50) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (UserPermissionIdUserId, UserPermissionIdPermissionId)
    );

    create table UserPermissionStateEvents (
        UserPermissionIdUserId VARCHAR(50) not null,
       UserPermissionIdPermissionId VARCHAR(50) not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyActiveRemoved TINYINT(1),
       primary key (UserPermissionIdUserId, UserPermissionIdPermissionId, UserVersion)
    );

    create table UserLogins (
        UserLoginIdUserId VARCHAR(50) not null,
       UserLoginIdLoginKeyLoginProvider VARCHAR(255) not null,
       UserLoginIdLoginKeyProviderKey VARCHAR(255) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (UserLoginIdUserId, UserLoginIdLoginKeyLoginProvider, UserLoginIdLoginKeyProviderKey)
    );

    create table UserLoginStateEvents (
        UserLoginIdUserId VARCHAR(50) not null,
       UserLoginIdLoginKeyLoginProvider VARCHAR(255) not null,
       UserLoginIdLoginKeyProviderKey VARCHAR(255) not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyActiveRemoved TINYINT(1),
       primary key (UserLoginIdUserId, UserLoginIdLoginKeyLoginProvider, UserLoginIdLoginKeyProviderKey, UserVersion)
    );

    create table InOuts (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       IsSOTransaction TINYINT(1),
       DocumentStatus VARCHAR(255),
       Posted TINYINT(1),
       Processing TINYINT(1),
       Processed TINYINT(1),
       DocumentType INTEGER,
       Description VARCHAR(255),
       OrderNumber VARCHAR(255),
       DateOrdered DATETIME,
       IsPrinted TINYINT(1),
       MovementType VARCHAR(255),
       MovementDate DATETIME,
       BusinessPartnerId VARCHAR(255),
       WarehouseId VARCHAR(255),
       POReference VARCHAR(255),
       FreightAmountAmount NUMERIC(19,5),
       FreightAmountCurrency VARCHAR(10),
       ShipperId VARCHAR(255),
       ChargeAmountAmount NUMERIC(19,5),
       ChargeAmountCurrency VARCHAR(10),
       DatePrinted DATETIME,
       SalesRepresentative VARCHAR(255),
       NumberOfPackages INTEGER,
       PickDate DATETIME,
       ShipDate DATETIME,
       TrackingNumber VARCHAR(255),
       DateReceived DATETIME,
       IsInTransit TINYINT(1),
       IsApproved TINYINT(1),
       IsInDispute TINYINT(1),
       Volume NUMERIC(19,5),
       Weight NUMERIC(19,5),
       RmaNumber VARCHAR(255),
       ReversalNumber VARCHAR(255),
       IsDropShip TINYINT(1),
       DropShipBusinessPartnerId VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (DocumentNumber)
    );

    create table InOutStateEvents (
        DocumentNumber VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       IsSOTransaction TINYINT(1),
       DocumentStatus VARCHAR(255),
       Posted TINYINT(1),
       Processing TINYINT(1),
       Processed TINYINT(1),
       DocumentType INTEGER,
       Description VARCHAR(255),
       OrderNumber VARCHAR(255),
       DateOrdered DATETIME,
       IsPrinted TINYINT(1),
       MovementType VARCHAR(255),
       MovementDate DATETIME,
       BusinessPartnerId VARCHAR(255),
       WarehouseId VARCHAR(255),
       POReference VARCHAR(255),
       FreightAmountAmount NUMERIC(19,5),
       FreightAmountCurrency VARCHAR(10),
       ShipperId VARCHAR(255),
       ChargeAmountAmount NUMERIC(19,5),
       ChargeAmountCurrency VARCHAR(10),
       DatePrinted DATETIME,
       SalesRepresentative VARCHAR(255),
       NumberOfPackages INTEGER,
       PickDate DATETIME,
       ShipDate DATETIME,
       TrackingNumber VARCHAR(255),
       DateReceived DATETIME,
       IsInTransit TINYINT(1),
       IsApproved TINYINT(1),
       IsInDispute TINYINT(1),
       Volume NUMERIC(19,5),
       Weight NUMERIC(19,5),
       RmaNumber VARCHAR(255),
       ReversalNumber VARCHAR(255),
       IsDropShip TINYINT(1),
       DropShipBusinessPartnerId VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyIsSOTransactionRemoved TINYINT(1),
       IsPropertyDocumentStatusRemoved TINYINT(1),
       IsPropertyPostedRemoved TINYINT(1),
       IsPropertyProcessingRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyDocumentTypeRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyOrderNumberRemoved TINYINT(1),
       IsPropertyDateOrderedRemoved TINYINT(1),
       IsPropertyIsPrintedRemoved TINYINT(1),
       IsPropertyMovementTypeRemoved TINYINT(1),
       IsPropertyMovementDateRemoved TINYINT(1),
       IsPropertyBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyWarehouseIdRemoved TINYINT(1),
       IsPropertyPOReferenceRemoved TINYINT(1),
       IsPropertyFreightAmountRemoved TINYINT(1),
       IsPropertyShipperIdRemoved TINYINT(1),
       IsPropertyChargeAmountRemoved TINYINT(1),
       IsPropertyDatePrintedRemoved TINYINT(1),
       IsPropertySalesRepresentativeRemoved TINYINT(1),
       IsPropertyNumberOfPackagesRemoved TINYINT(1),
       IsPropertyPickDateRemoved TINYINT(1),
       IsPropertyShipDateRemoved TINYINT(1),
       IsPropertyTrackingNumberRemoved TINYINT(1),
       IsPropertyDateReceivedRemoved TINYINT(1),
       IsPropertyIsInTransitRemoved TINYINT(1),
       IsPropertyIsApprovedRemoved TINYINT(1),
       IsPropertyIsInDisputeRemoved TINYINT(1),
       IsPropertyVolumeRemoved TINYINT(1),
       IsPropertyWeightRemoved TINYINT(1),
       IsPropertyRmaNumberRemoved TINYINT(1),
       IsPropertyReversalNumberRemoved TINYINT(1),
       IsPropertyIsDropShipRemoved TINYINT(1),
       IsPropertyDropShipBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (DocumentNumber, Version)
    );

    create table InOutLines (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdSkuIdProductId VARCHAR(255) not null,
       InOutLineIdSkuIdAttributeSetInstanceId VARCHAR(255) not null,
       Version BIGINT not null,
       LineNumber BIGINT,
       Description VARCHAR(255),
       LocatorId VARCHAR(255),
       Product VARCHAR(255),
       UomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       TargetQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       AttributeSetInstanceId VARCHAR(255),
       IsDescription TINYINT(1),
       Processed TINYINT(1),
       QuantityEntered NUMERIC(19,5),
       RmaLineNumber BIGINT,
       ReversalLineNumber BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdSkuIdProductId, InOutLineIdSkuIdAttributeSetInstanceId)
    );

    create table InOutLineStateEvents (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdSkuIdProductId VARCHAR(255) not null,
       InOutLineIdSkuIdAttributeSetInstanceId VARCHAR(255) not null,
       InOutVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       LineNumber BIGINT,
       Description VARCHAR(255),
       LocatorId VARCHAR(255),
       Product VARCHAR(255),
       UomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       TargetQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       AttributeSetInstanceId VARCHAR(255),
       IsDescription TINYINT(1),
       Processed TINYINT(1),
       QuantityEntered NUMERIC(19,5),
       RmaLineNumber BIGINT,
       ReversalLineNumber BIGINT,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyLineNumberRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyLocatorIdRemoved TINYINT(1),
       IsPropertyProductRemoved TINYINT(1),
       IsPropertyUomIdRemoved TINYINT(1),
       IsPropertyMovementQuantityRemoved TINYINT(1),
       IsPropertyConfirmedQuantityRemoved TINYINT(1),
       IsPropertyScrappedQuantityRemoved TINYINT(1),
       IsPropertyTargetQuantityRemoved TINYINT(1),
       IsPropertyPickedQuantityRemoved TINYINT(1),
       IsPropertyIsInvoicedRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyIsDescriptionRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyQuantityEnteredRemoved TINYINT(1),
       IsPropertyRmaLineNumberRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdSkuIdProductId, InOutLineIdSkuIdAttributeSetInstanceId, InOutVersion)
    );

    create table Organizations (
        OrganizationId VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       Type VARCHAR(255),
       IsSummary TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (OrganizationId)
    );

    create table OrganizationStateEvents (
        OrganizationId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       Type VARCHAR(255),
       IsSummary TINYINT(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyTypeRemoved TINYINT(1),
       IsPropertyIsSummaryRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (OrganizationId, Version)
    );

    create table OrganizationStructureTypes (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (Id)
    );

    create table OrganizationStructureTypeStateEvents (
        Id VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (Id, Version)
    );

    create table OrganizationStructures (
        IdOrganizationStructureTypeId VARCHAR(255) not null,
       IdParentId VARCHAR(255) not null,
       IdSubsidiaryId VARCHAR(255) not null,
       Version BIGINT not null,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (IdOrganizationStructureTypeId, IdParentId, IdSubsidiaryId)
    );

    create table OrganizationStructureStateEvents (
        IdOrganizationStructureTypeId VARCHAR(255) not null,
       IdParentId VARCHAR(255) not null,
       IdSubsidiaryId VARCHAR(255) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (IdOrganizationStructureTypeId, IdParentId, IdSubsidiaryId, Version)
    );

    create table Warehouses (
        WarehouseId VARCHAR(50) not null,
       Version BIGINT not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       IsInTransit TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (WarehouseId)
    );

    create table WarehouseStateEvents (
        WarehouseId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Name VARCHAR(255),
       Description VARCHAR(255),
       IsInTransit TINYINT(1),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyNameRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyIsInTransitRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (WarehouseId, Version)
    );

    create table Locators (
        LocatorId VARCHAR(50) not null,
       Version BIGINT not null,
       WarehouseId VARCHAR(255) not null,
       ParentLocatorId VARCHAR(255),
       LocatorType VARCHAR(255),
       PriorityNumber VARCHAR(255),
       IsDefault TINYINT(1),
       X VARCHAR(255),
       Y VARCHAR(255),
       Z VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (LocatorId)
    );

    create table LocatorStateEvents (
        LocatorId VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       WarehouseId VARCHAR(255) not null,
       ParentLocatorId VARCHAR(255),
       LocatorType VARCHAR(255),
       PriorityNumber VARCHAR(255),
       IsDefault TINYINT(1),
       X VARCHAR(255),
       Y VARCHAR(255),
       Z VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyWarehouseIdRemoved TINYINT(1),
       IsPropertyParentLocatorIdRemoved TINYINT(1),
       IsPropertyLocatorTypeRemoved TINYINT(1),
       IsPropertyPriorityNumberRemoved TINYINT(1),
       IsPropertyIsDefaultRemoved TINYINT(1),
       IsPropertyXRemoved TINYINT(1),
       IsPropertyYRemoved TINYINT(1),
       IsPropertyZRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (LocatorId, Version)
    );

    create table People (
        PersonalNameFirstName VARCHAR(50) not null,
       PersonalNameLastName VARCHAR(50) not null,
       Version BIGINT not null,
       BirthDate DATETIME,
       LovesFirstName VARCHAR(50),
       LovesLastName VARCHAR(50),
       EmergencyContactPersonalNameFirstName VARCHAR(50),
       EmergencyContactPersonalNameLastName VARCHAR(50),
       EmergencyContactPhoneNumber VARCHAR(255),
       EmergencyContactAddress VARCHAR(255),
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (PersonalNameFirstName, PersonalNameLastName)
    );

    create table PersonStateEvents (
        PersonalNameFirstName VARCHAR(50) not null,
       PersonalNameLastName VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       BirthDate DATETIME,
       LovesFirstName VARCHAR(50),
       LovesLastName VARCHAR(50),
       EmergencyContactPersonalNameFirstName VARCHAR(50),
       EmergencyContactPersonalNameLastName VARCHAR(50),
       EmergencyContactPhoneNumber VARCHAR(255),
       EmergencyContactAddress VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyBirthDateRemoved TINYINT(1),
       IsPropertyLovesRemoved TINYINT(1),
       IsPropertyEmergencyContactRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (PersonalNameFirstName, PersonalNameLastName, Version)
    );

    create table YearPlans (
        YearPlanIdPersonalNameFirstName VARCHAR(50) not null,
       YearPlanIdPersonalNameLastName VARCHAR(50) not null,
       YearPlanIdYear INTEGER not null,
       Version BIGINT not null,
       Description TEXT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (YearPlanIdPersonalNameFirstName, YearPlanIdPersonalNameLastName, YearPlanIdYear)
    );

    create table YearPlanStateEvents (
        YearPlanIdPersonalNameFirstName VARCHAR(50) not null,
       YearPlanIdPersonalNameLastName VARCHAR(50) not null,
       YearPlanIdYear INTEGER not null,
       PersonVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description TEXT,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (YearPlanIdPersonalNameFirstName, YearPlanIdPersonalNameLastName, YearPlanIdYear, PersonVersion)
    );

    create table MonthPlans (
        MonthPlanIdPersonalNameFirstName VARCHAR(50) not null,
       MonthPlanIdPersonalNameLastName VARCHAR(50) not null,
       MonthPlanIdYear INTEGER not null,
       MonthPlanIdMonth INTEGER not null,
       Version BIGINT not null,
       Description TEXT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (MonthPlanIdPersonalNameFirstName, MonthPlanIdPersonalNameLastName, MonthPlanIdYear, MonthPlanIdMonth)
    );

    create table MonthPlanStateEvents (
        MonthPlanIdPersonalNameFirstName VARCHAR(50) not null,
       MonthPlanIdPersonalNameLastName VARCHAR(50) not null,
       MonthPlanIdYear INTEGER not null,
       MonthPlanIdMonth INTEGER not null,
       PersonVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description TEXT,
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       Version BIGINT not null,
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (MonthPlanIdPersonalNameFirstName, MonthPlanIdPersonalNameLastName, MonthPlanIdYear, MonthPlanIdMonth, PersonVersion)
    );

    create table Teams (
        TeamName VARCHAR(50) not null,
       Version BIGINT not null,
       Description VARCHAR(255),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       primary key (TeamName)
    );

    create table TeamPlayers (
        TeamName VARCHAR(50) not null,
       FirstName VARCHAR(50) not null,
       LastName VARCHAR(50) not null,
       primary key (TeamName, FirstName, LastName)
    );

    create table TeamMascots (
        TeamName VARCHAR(50) not null,
       MascotsItem VARCHAR(255) not null,
       primary key (TeamName, MascotsItem)
    );

    create table TeamStateEvents (
        TeamName VARCHAR(50) not null,
       Version BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description VARCHAR(255),
       Active TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       primary key (TeamName, Version)
    );

    create table TeamStateEventPlayers (
        TeamName VARCHAR(50) not null,
       Version BIGINT not null,
       FirstName VARCHAR(50) not null,
       LastName VARCHAR(50) not null,
       primary key (TeamName, Version, FirstName, LastName)
    );

    create table TeamStateEventMascots (
        TeamName VARCHAR(50) not null,
       Version BIGINT not null,
       MascotsItem VARCHAR(255) not null,
       primary key (TeamName, Version, MascotsItem)
    );

    create table UserRole_RV (
        UserRoleIdUserId VARCHAR(50) not null,
       UserRoleIdRoleId VARCHAR(50) not null,
       UserVersion BIGINT not null,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       primary key (UserRoleIdUserId, UserRoleIdRoleId)
    );

    create table UserRoleMvoStateEvents (
        UserRoleIdUserId VARCHAR(50) not null,
       UserRoleIdRoleId VARCHAR(50) not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Version BIGINT,
       Active TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyUserUserNameRemoved TINYINT(1),
       IsPropertyUserAccessFailedCountRemoved TINYINT(1),
       IsPropertyUserEmailRemoved TINYINT(1),
       IsPropertyUserEmailConfirmedRemoved TINYINT(1),
       IsPropertyUserLockoutEnabledRemoved TINYINT(1),
       IsPropertyUserLockoutEndDateUtcRemoved TINYINT(1),
       IsPropertyUserPasswordHashRemoved TINYINT(1),
       IsPropertyUserPhoneNumberRemoved TINYINT(1),
       IsPropertyUserPhoneNumberConfirmedRemoved TINYINT(1),
       IsPropertyUserTwoFactorEnabledRemoved TINYINT(1),
       IsPropertyUserSecurityStampRemoved TINYINT(1),
       IsPropertyUserCreatedByRemoved TINYINT(1),
       IsPropertyUserCreatedAtRemoved TINYINT(1),
       IsPropertyUserUpdatedByRemoved TINYINT(1),
       IsPropertyUserUpdatedAtRemoved TINYINT(1),
       IsPropertyUserActiveRemoved TINYINT(1),
       IsPropertyUserDeletedRemoved TINYINT(1),
       primary key (UserRoleIdUserId, UserRoleIdRoleId, UserVersion)
    );

    create table UserClaim_RV (
        UserClaimIdUserId VARCHAR(50) not null,
       UserClaimIdClaimId INTEGER not null,
       UserVersion BIGINT not null,
       ClaimType VARCHAR(255),
       ClaimValue VARCHAR(255),
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       primary key (UserClaimIdUserId, UserClaimIdClaimId)
    );

    create table UserClaimMvoStateEvents (
        UserClaimIdUserId VARCHAR(50) not null,
       UserClaimIdClaimId INTEGER not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       ClaimType VARCHAR(255),
       ClaimValue VARCHAR(255),
       Version BIGINT,
       Active TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyClaimTypeRemoved TINYINT(1),
       IsPropertyClaimValueRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyUserUserNameRemoved TINYINT(1),
       IsPropertyUserAccessFailedCountRemoved TINYINT(1),
       IsPropertyUserEmailRemoved TINYINT(1),
       IsPropertyUserEmailConfirmedRemoved TINYINT(1),
       IsPropertyUserLockoutEnabledRemoved TINYINT(1),
       IsPropertyUserLockoutEndDateUtcRemoved TINYINT(1),
       IsPropertyUserPasswordHashRemoved TINYINT(1),
       IsPropertyUserPhoneNumberRemoved TINYINT(1),
       IsPropertyUserPhoneNumberConfirmedRemoved TINYINT(1),
       IsPropertyUserTwoFactorEnabledRemoved TINYINT(1),
       IsPropertyUserSecurityStampRemoved TINYINT(1),
       IsPropertyUserCreatedByRemoved TINYINT(1),
       IsPropertyUserCreatedAtRemoved TINYINT(1),
       IsPropertyUserUpdatedByRemoved TINYINT(1),
       IsPropertyUserUpdatedAtRemoved TINYINT(1),
       IsPropertyUserActiveRemoved TINYINT(1),
       IsPropertyUserDeletedRemoved TINYINT(1),
       primary key (UserClaimIdUserId, UserClaimIdClaimId, UserVersion)
    );

    create table UserPermission_RV (
        UserPermissionIdUserId VARCHAR(50) not null,
       UserPermissionIdPermissionId VARCHAR(50) not null,
       UserVersion BIGINT not null,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       primary key (UserPermissionIdUserId, UserPermissionIdPermissionId)
    );

    create table UserPermissionMvoStateEvents (
        UserPermissionIdUserId VARCHAR(50) not null,
       UserPermissionIdPermissionId VARCHAR(50) not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Version BIGINT,
       Active TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyUserUserNameRemoved TINYINT(1),
       IsPropertyUserAccessFailedCountRemoved TINYINT(1),
       IsPropertyUserEmailRemoved TINYINT(1),
       IsPropertyUserEmailConfirmedRemoved TINYINT(1),
       IsPropertyUserLockoutEnabledRemoved TINYINT(1),
       IsPropertyUserLockoutEndDateUtcRemoved TINYINT(1),
       IsPropertyUserPasswordHashRemoved TINYINT(1),
       IsPropertyUserPhoneNumberRemoved TINYINT(1),
       IsPropertyUserPhoneNumberConfirmedRemoved TINYINT(1),
       IsPropertyUserTwoFactorEnabledRemoved TINYINT(1),
       IsPropertyUserSecurityStampRemoved TINYINT(1),
       IsPropertyUserCreatedByRemoved TINYINT(1),
       IsPropertyUserCreatedAtRemoved TINYINT(1),
       IsPropertyUserUpdatedByRemoved TINYINT(1),
       IsPropertyUserUpdatedAtRemoved TINYINT(1),
       IsPropertyUserActiveRemoved TINYINT(1),
       IsPropertyUserDeletedRemoved TINYINT(1),
       primary key (UserPermissionIdUserId, UserPermissionIdPermissionId, UserVersion)
    );

    create table UserLogin_RV (
        UserLoginIdUserId VARCHAR(50) not null,
       UserLoginIdLoginKeyLoginProvider VARCHAR(255) not null,
       UserLoginIdLoginKeyProviderKey VARCHAR(255) not null,
       UserVersion BIGINT not null,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       primary key (UserLoginIdUserId, UserLoginIdLoginKeyLoginProvider, UserLoginIdLoginKeyProviderKey)
    );

    create table UserLoginMvoStateEvents (
        UserLoginIdUserId VARCHAR(50) not null,
       UserLoginIdLoginKeyLoginProvider VARCHAR(255) not null,
       UserLoginIdLoginKeyProviderKey VARCHAR(255) not null,
       UserVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Version BIGINT,
       Active TINYINT(1),
       UserUserName VARCHAR(255),
       UserAccessFailedCount INTEGER,
       UserEmail VARCHAR(255),
       UserEmailConfirmed TINYINT(1),
       UserLockoutEnabled TINYINT(1),
       UserLockoutEndDateUtc DATETIME,
       UserPasswordHash VARCHAR(255),
       UserPhoneNumber VARCHAR(255),
       UserPhoneNumberConfirmed TINYINT(1),
       UserTwoFactorEnabled TINYINT(1),
       UserSecurityStamp VARCHAR(255),
       UserCreatedBy VARCHAR(255),
       UserCreatedAt DATETIME,
       UserUpdatedBy VARCHAR(255),
       UserUpdatedAt DATETIME,
       UserActive TINYINT(1),
       UserDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyUserUserNameRemoved TINYINT(1),
       IsPropertyUserAccessFailedCountRemoved TINYINT(1),
       IsPropertyUserEmailRemoved TINYINT(1),
       IsPropertyUserEmailConfirmedRemoved TINYINT(1),
       IsPropertyUserLockoutEnabledRemoved TINYINT(1),
       IsPropertyUserLockoutEndDateUtcRemoved TINYINT(1),
       IsPropertyUserPasswordHashRemoved TINYINT(1),
       IsPropertyUserPhoneNumberRemoved TINYINT(1),
       IsPropertyUserPhoneNumberConfirmedRemoved TINYINT(1),
       IsPropertyUserTwoFactorEnabledRemoved TINYINT(1),
       IsPropertyUserSecurityStampRemoved TINYINT(1),
       IsPropertyUserCreatedByRemoved TINYINT(1),
       IsPropertyUserCreatedAtRemoved TINYINT(1),
       IsPropertyUserUpdatedByRemoved TINYINT(1),
       IsPropertyUserUpdatedAtRemoved TINYINT(1),
       IsPropertyUserActiveRemoved TINYINT(1),
       IsPropertyUserDeletedRemoved TINYINT(1),
       primary key (UserLoginIdUserId, UserLoginIdLoginKeyLoginProvider, UserLoginIdLoginKeyProviderKey, UserVersion)
    );

    create table InOutLine_RV (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdSkuIdProductId VARCHAR(255) not null,
       InOutLineIdSkuIdAttributeSetInstanceId VARCHAR(255) not null,
       InOutVersion BIGINT not null,
       LineNumber BIGINT,
       Description VARCHAR(255),
       LocatorId VARCHAR(255),
       Product VARCHAR(255),
       UomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       TargetQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       AttributeSetInstanceId VARCHAR(255),
       IsDescription TINYINT(1),
       Processed TINYINT(1),
       QuantityEntered NUMERIC(19,5),
       RmaLineNumber BIGINT,
       ReversalLineNumber BIGINT,
       Version BIGINT,
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       UpdatedBy VARCHAR(255),
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       InOutIsSOTransaction TINYINT(1),
       InOutDocumentStatus VARCHAR(255),
       InOutPosted TINYINT(1),
       InOutProcessing TINYINT(1),
       InOutProcessed TINYINT(1),
       InOutDocumentType INTEGER,
       InOutDescription VARCHAR(255),
       InOutOrderNumber VARCHAR(255),
       InOutDateOrdered DATETIME,
       InOutIsPrinted TINYINT(1),
       InOutMovementType VARCHAR(255),
       InOutMovementDate DATETIME,
       InOutBusinessPartnerId VARCHAR(255),
       InOutWarehouseId VARCHAR(255),
       InOutPOReference VARCHAR(255),
       InOutFreightAmountAmount NUMERIC(19,5),
       InOutFreightAmountCurrency VARCHAR(10),
       InOutShipperId VARCHAR(255),
       InOutChargeAmountAmount NUMERIC(19,5),
       InOutChargeAmountCurrency VARCHAR(10),
       InOutDatePrinted DATETIME,
       InOutSalesRepresentative VARCHAR(255),
       InOutNumberOfPackages INTEGER,
       InOutPickDate DATETIME,
       InOutShipDate DATETIME,
       InOutTrackingNumber VARCHAR(255),
       InOutDateReceived DATETIME,
       InOutIsInTransit TINYINT(1),
       InOutIsApproved TINYINT(1),
       InOutIsInDispute TINYINT(1),
       InOutVolume NUMERIC(19,5),
       InOutWeight NUMERIC(19,5),
       InOutRmaNumber VARCHAR(255),
       InOutReversalNumber VARCHAR(255),
       InOutIsDropShip TINYINT(1),
       InOutDropShipBusinessPartnerId VARCHAR(255),
       InOutCreatedBy VARCHAR(255),
       InOutCreatedAt DATETIME,
       InOutUpdatedBy VARCHAR(255),
       InOutUpdatedAt DATETIME,
       InOutActive TINYINT(1),
       InOutDeleted TINYINT(1),
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdSkuIdProductId, InOutLineIdSkuIdAttributeSetInstanceId)
    );

    create table InOutLineMvoStateEvents (
        InOutLineIdInOutDocumentNumber VARCHAR(50) not null,
       InOutLineIdSkuIdProductId VARCHAR(255) not null,
       InOutLineIdSkuIdAttributeSetInstanceId VARCHAR(255) not null,
       InOutVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       LineNumber BIGINT,
       Description VARCHAR(255),
       LocatorId VARCHAR(255),
       Product VARCHAR(255),
       UomId VARCHAR(255),
       MovementQuantity NUMERIC(19,5),
       ConfirmedQuantity NUMERIC(19,5),
       ScrappedQuantity NUMERIC(19,5),
       TargetQuantity NUMERIC(19,5),
       PickedQuantity NUMERIC(19,5),
       IsInvoiced TINYINT(1),
       AttributeSetInstanceId VARCHAR(255),
       IsDescription TINYINT(1),
       Processed TINYINT(1),
       QuantityEntered NUMERIC(19,5),
       RmaLineNumber BIGINT,
       ReversalLineNumber BIGINT,
       Version BIGINT,
       Active TINYINT(1),
       InOutIsSOTransaction TINYINT(1),
       InOutDocumentStatus VARCHAR(255),
       InOutPosted TINYINT(1),
       InOutProcessing TINYINT(1),
       InOutProcessed TINYINT(1),
       InOutDocumentType INTEGER,
       InOutDescription VARCHAR(255),
       InOutOrderNumber VARCHAR(255),
       InOutDateOrdered DATETIME,
       InOutIsPrinted TINYINT(1),
       InOutMovementType VARCHAR(255),
       InOutMovementDate DATETIME,
       InOutBusinessPartnerId VARCHAR(255),
       InOutWarehouseId VARCHAR(255),
       InOutPOReference VARCHAR(255),
       InOutFreightAmountAmount NUMERIC(19,5),
       InOutFreightAmountCurrency VARCHAR(10),
       InOutShipperId VARCHAR(255),
       InOutChargeAmountAmount NUMERIC(19,5),
       InOutChargeAmountCurrency VARCHAR(10),
       InOutDatePrinted DATETIME,
       InOutSalesRepresentative VARCHAR(255),
       InOutNumberOfPackages INTEGER,
       InOutPickDate DATETIME,
       InOutShipDate DATETIME,
       InOutTrackingNumber VARCHAR(255),
       InOutDateReceived DATETIME,
       InOutIsInTransit TINYINT(1),
       InOutIsApproved TINYINT(1),
       InOutIsInDispute TINYINT(1),
       InOutVolume NUMERIC(19,5),
       InOutWeight NUMERIC(19,5),
       InOutRmaNumber VARCHAR(255),
       InOutReversalNumber VARCHAR(255),
       InOutIsDropShip TINYINT(1),
       InOutDropShipBusinessPartnerId VARCHAR(255),
       InOutCreatedBy VARCHAR(255),
       InOutCreatedAt DATETIME,
       InOutUpdatedBy VARCHAR(255),
       InOutUpdatedAt DATETIME,
       InOutActive TINYINT(1),
       InOutDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyLineNumberRemoved TINYINT(1),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyLocatorIdRemoved TINYINT(1),
       IsPropertyProductRemoved TINYINT(1),
       IsPropertyUomIdRemoved TINYINT(1),
       IsPropertyMovementQuantityRemoved TINYINT(1),
       IsPropertyConfirmedQuantityRemoved TINYINT(1),
       IsPropertyScrappedQuantityRemoved TINYINT(1),
       IsPropertyTargetQuantityRemoved TINYINT(1),
       IsPropertyPickedQuantityRemoved TINYINT(1),
       IsPropertyIsInvoicedRemoved TINYINT(1),
       IsPropertyAttributeSetInstanceIdRemoved TINYINT(1),
       IsPropertyIsDescriptionRemoved TINYINT(1),
       IsPropertyProcessedRemoved TINYINT(1),
       IsPropertyQuantityEnteredRemoved TINYINT(1),
       IsPropertyRmaLineNumberRemoved TINYINT(1),
       IsPropertyReversalLineNumberRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyInOutIsSOTransactionRemoved TINYINT(1),
       IsPropertyInOutDocumentStatusRemoved TINYINT(1),
       IsPropertyInOutPostedRemoved TINYINT(1),
       IsPropertyInOutProcessingRemoved TINYINT(1),
       IsPropertyInOutProcessedRemoved TINYINT(1),
       IsPropertyInOutDocumentTypeRemoved TINYINT(1),
       IsPropertyInOutDescriptionRemoved TINYINT(1),
       IsPropertyInOutOrderNumberRemoved TINYINT(1),
       IsPropertyInOutDateOrderedRemoved TINYINT(1),
       IsPropertyInOutIsPrintedRemoved TINYINT(1),
       IsPropertyInOutMovementTypeRemoved TINYINT(1),
       IsPropertyInOutMovementDateRemoved TINYINT(1),
       IsPropertyInOutBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyInOutWarehouseIdRemoved TINYINT(1),
       IsPropertyInOutPOReferenceRemoved TINYINT(1),
       IsPropertyInOutFreightAmountRemoved TINYINT(1),
       IsPropertyInOutShipperIdRemoved TINYINT(1),
       IsPropertyInOutChargeAmountRemoved TINYINT(1),
       IsPropertyInOutDatePrintedRemoved TINYINT(1),
       IsPropertyInOutSalesRepresentativeRemoved TINYINT(1),
       IsPropertyInOutNumberOfPackagesRemoved TINYINT(1),
       IsPropertyInOutPickDateRemoved TINYINT(1),
       IsPropertyInOutShipDateRemoved TINYINT(1),
       IsPropertyInOutTrackingNumberRemoved TINYINT(1),
       IsPropertyInOutDateReceivedRemoved TINYINT(1),
       IsPropertyInOutIsInTransitRemoved TINYINT(1),
       IsPropertyInOutIsApprovedRemoved TINYINT(1),
       IsPropertyInOutIsInDisputeRemoved TINYINT(1),
       IsPropertyInOutVolumeRemoved TINYINT(1),
       IsPropertyInOutWeightRemoved TINYINT(1),
       IsPropertyInOutRmaNumberRemoved TINYINT(1),
       IsPropertyInOutReversalNumberRemoved TINYINT(1),
       IsPropertyInOutIsDropShipRemoved TINYINT(1),
       IsPropertyInOutDropShipBusinessPartnerIdRemoved TINYINT(1),
       IsPropertyInOutCreatedByRemoved TINYINT(1),
       IsPropertyInOutCreatedAtRemoved TINYINT(1),
       IsPropertyInOutUpdatedByRemoved TINYINT(1),
       IsPropertyInOutUpdatedAtRemoved TINYINT(1),
       IsPropertyInOutActiveRemoved TINYINT(1),
       IsPropertyInOutDeletedRemoved TINYINT(1),
       primary key (InOutLineIdInOutDocumentNumber, InOutLineIdSkuIdProductId, InOutLineIdSkuIdAttributeSetInstanceId, InOutVersion)
    );

    create table YearPlan_RV (
        YearPlanIdPersonalNameFirstName VARCHAR(50) not null,
       YearPlanIdPersonalNameLastName VARCHAR(50) not null,
       YearPlanIdYear INTEGER not null,
       PersonVersion BIGINT not null,
       Description TEXT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Version BIGINT,
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       PersonBirthDate DATETIME,
       PersonLovesFirstName VARCHAR(50),
       PersonLovesLastName VARCHAR(50),
       PersonEmergencyContactPersonalNameFirstName VARCHAR(50),
       PersonEmergencyContactPersonalNameLastName VARCHAR(50),
       PersonEmergencyContactPhoneNumber VARCHAR(255),
       PersonEmergencyContactAddress VARCHAR(255),
       PersonCreatedBy VARCHAR(255),
       PersonUpdatedBy VARCHAR(255),
       PersonCreatedAt DATETIME,
       PersonUpdatedAt DATETIME,
       PersonActive TINYINT(1),
       PersonDeleted TINYINT(1),
       primary key (YearPlanIdPersonalNameFirstName, YearPlanIdPersonalNameLastName, YearPlanIdYear)
    );

    create table YearPlanMvoStateEvents (
        YearPlanIdPersonalNameFirstName VARCHAR(50) not null,
       YearPlanIdPersonalNameLastName VARCHAR(50) not null,
       YearPlanIdYear INTEGER not null,
       PersonVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description TEXT,
       Version BIGINT,
       Active TINYINT(1),
       PersonBirthDate DATETIME,
       PersonLovesFirstName VARCHAR(50),
       PersonLovesLastName VARCHAR(50),
       PersonEmergencyContactPersonalNameFirstName VARCHAR(50),
       PersonEmergencyContactPersonalNameLastName VARCHAR(50),
       PersonEmergencyContactPhoneNumber VARCHAR(255),
       PersonEmergencyContactAddress VARCHAR(255),
       PersonCreatedBy VARCHAR(255),
       PersonUpdatedBy VARCHAR(255),
       PersonCreatedAt DATETIME,
       PersonUpdatedAt DATETIME,
       PersonActive TINYINT(1),
       PersonDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyPersonBirthDateRemoved TINYINT(1),
       IsPropertyPersonLovesRemoved TINYINT(1),
       IsPropertyPersonEmergencyContactRemoved TINYINT(1),
       IsPropertyPersonCreatedByRemoved TINYINT(1),
       IsPropertyPersonUpdatedByRemoved TINYINT(1),
       IsPropertyPersonCreatedAtRemoved TINYINT(1),
       IsPropertyPersonUpdatedAtRemoved TINYINT(1),
       IsPropertyPersonActiveRemoved TINYINT(1),
       IsPropertyPersonDeletedRemoved TINYINT(1),
       primary key (YearPlanIdPersonalNameFirstName, YearPlanIdPersonalNameLastName, YearPlanIdYear, PersonVersion)
    );

    create table MonthPlan_RV (
        MonthPlanIdPersonalNameFirstName VARCHAR(50) not null,
       MonthPlanIdPersonalNameLastName VARCHAR(50) not null,
       MonthPlanIdYear INTEGER not null,
       MonthPlanIdMonth INTEGER not null,
       PersonVersion BIGINT not null,
       Description TEXT,
       CreatedBy VARCHAR(255),
       UpdatedBy VARCHAR(255),
       Version BIGINT,
       CreatedAt DATETIME,
       UpdatedAt DATETIME,
       Active TINYINT(1),
       Deleted TINYINT(1),
       YearPlanDescription TEXT,
       YearPlanCreatedBy VARCHAR(255),
       YearPlanUpdatedBy VARCHAR(255),
       YearPlanVersion BIGINT,
       YearPlanCreatedAt DATETIME,
       YearPlanUpdatedAt DATETIME,
       YearPlanActive TINYINT(1),
       YearPlanDeleted TINYINT(1),
       PersonBirthDate DATETIME,
       PersonLovesFirstName VARCHAR(50),
       PersonLovesLastName VARCHAR(50),
       PersonEmergencyContactPersonalNameFirstName VARCHAR(50),
       PersonEmergencyContactPersonalNameLastName VARCHAR(50),
       PersonEmergencyContactPhoneNumber VARCHAR(255),
       PersonEmergencyContactAddress VARCHAR(255),
       PersonCreatedBy VARCHAR(255),
       PersonUpdatedBy VARCHAR(255),
       PersonCreatedAt DATETIME,
       PersonUpdatedAt DATETIME,
       PersonActive TINYINT(1),
       PersonDeleted TINYINT(1),
       primary key (MonthPlanIdPersonalNameFirstName, MonthPlanIdPersonalNameLastName, MonthPlanIdYear, MonthPlanIdMonth)
    );

    create table MonthPlanMvoStateEvents (
        MonthPlanIdPersonalNameFirstName VARCHAR(50) not null,
       MonthPlanIdPersonalNameLastName VARCHAR(50) not null,
       MonthPlanIdYear INTEGER not null,
       MonthPlanIdMonth INTEGER not null,
       PersonVersion BIGINT not null,
       StateEventType VARCHAR(255) not null,
       Description TEXT,
       Version BIGINT,
       Active TINYINT(1),
       YearPlanDescription TEXT,
       YearPlanCreatedBy VARCHAR(255),
       YearPlanUpdatedBy VARCHAR(255),
       YearPlanVersion BIGINT,
       YearPlanCreatedAt DATETIME,
       YearPlanUpdatedAt DATETIME,
       YearPlanActive TINYINT(1),
       YearPlanDeleted TINYINT(1),
       PersonBirthDate DATETIME,
       PersonLovesFirstName VARCHAR(50),
       PersonLovesLastName VARCHAR(50),
       PersonEmergencyContactPersonalNameFirstName VARCHAR(50),
       PersonEmergencyContactPersonalNameLastName VARCHAR(50),
       PersonEmergencyContactPhoneNumber VARCHAR(255),
       PersonEmergencyContactAddress VARCHAR(255),
       PersonCreatedBy VARCHAR(255),
       PersonUpdatedBy VARCHAR(255),
       PersonCreatedAt DATETIME,
       PersonUpdatedAt DATETIME,
       PersonActive TINYINT(1),
       PersonDeleted TINYINT(1),
       CreatedBy VARCHAR(255),
       CreatedAt DATETIME,
       CommandId VARCHAR(255),
       IsPropertyDescriptionRemoved TINYINT(1),
       IsPropertyVersionRemoved TINYINT(1),
       IsPropertyActiveRemoved TINYINT(1),
       IsPropertyYearPlanDescriptionRemoved TINYINT(1),
       IsPropertyYearPlanCreatedByRemoved TINYINT(1),
       IsPropertyYearPlanUpdatedByRemoved TINYINT(1),
       IsPropertyYearPlanVersionRemoved TINYINT(1),
       IsPropertyYearPlanCreatedAtRemoved TINYINT(1),
       IsPropertyYearPlanUpdatedAtRemoved TINYINT(1),
       IsPropertyYearPlanActiveRemoved TINYINT(1),
       IsPropertyYearPlanDeletedRemoved TINYINT(1),
       IsPropertyPersonBirthDateRemoved TINYINT(1),
       IsPropertyPersonLovesRemoved TINYINT(1),
       IsPropertyPersonEmergencyContactRemoved TINYINT(1),
       IsPropertyPersonCreatedByRemoved TINYINT(1),
       IsPropertyPersonUpdatedByRemoved TINYINT(1),
       IsPropertyPersonCreatedAtRemoved TINYINT(1),
       IsPropertyPersonUpdatedAtRemoved TINYINT(1),
       IsPropertyPersonActiveRemoved TINYINT(1),
       IsPropertyPersonDeletedRemoved TINYINT(1),
       primary key (MonthPlanIdPersonalNameFirstName, MonthPlanIdPersonalNameLastName, MonthPlanIdYear, MonthPlanIdMonth, PersonVersion)
    );

    alter table AttributeSetInstanceStateEventRemovedProperties 
        add index (AttributeSetInstanceId, Version), 
        add constraint FK9C8A405747E4A019 
        foreign key (AttributeSetInstanceId, Version) 
        references AttributeSetInstanceStateEvents (AttributeSetInstanceId, Version);

    alter table TeamPlayers 
        add index (TeamName), 
        add constraint FKB13B0820CF73904F 
        foreign key (TeamName) 
        references Teams (TeamName);

    alter table TeamMascots 
        add index (TeamName), 
        add constraint FK5FD05D69CF73904F 
        foreign key (TeamName) 
        references Teams (TeamName);

    alter table TeamStateEventPlayers 
        add index (TeamName, Version), 
        add constraint FKA55D710EDFD9A6F1 
        foreign key (TeamName, Version) 
        references TeamStateEvents (TeamName, Version);

    alter table TeamStateEventMascots 
        add index (TeamName, Version), 
        add constraint FK750DD7B3DFD9A6F1 
        foreign key (TeamName, Version) 
        references TeamStateEvents (TeamName, Version);
