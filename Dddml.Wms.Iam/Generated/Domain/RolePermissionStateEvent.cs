// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.RolePermission;

namespace Dddml.Wms.Domain.RolePermission
{

	public abstract class RolePermissionStateEventBase : IRolePermissionStateEvent
	{

		public virtual RolePermissionStateEventId StateEventId { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		RolePermissionStateEventId IGlobalIdentity<RolePermissionStateEventId>.GlobalId {
			get
			{
				return this.StateEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IRolePermissionStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected RolePermissionStateEventBase()
        {
        }

        protected RolePermissionStateEventBase(RolePermissionStateEventId stateEventId)
        {
            this.StateEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class RolePermissionStateCreated : RolePermissionStateEventBase, IRolePermissionStateCreated
	{
		public RolePermissionStateCreated ()
		{
		}

		public RolePermissionStateCreated (RolePermissionStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class RolePermissionStateMergePatched : RolePermissionStateEventBase, IRolePermissionStateMergePatched
	{
		public virtual bool IsPropertyActiveRemoved { get; set; }


		public RolePermissionStateMergePatched ()
		{
		}

		public RolePermissionStateMergePatched (RolePermissionStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class RolePermissionStateDeleted : RolePermissionStateEventBase, IRolePermissionStateDeleted
	{
		public RolePermissionStateDeleted ()
		{
		}

		public RolePermissionStateDeleted (RolePermissionStateEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }



	}



}

