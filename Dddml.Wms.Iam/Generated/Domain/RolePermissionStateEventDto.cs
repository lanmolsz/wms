// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.RolePermission;

namespace Dddml.Wms.Domain.RolePermission
{

	public abstract class RolePermissionStateEventDtoBase : IEventDto, IRolePermissionStateCreated, IRolePermissionStateMergePatched, IRolePermissionStateDeleted
	{

        private RolePermissionEventId _rolePermissionEventId;

		protected internal virtual RolePermissionEventId RolePermissionEventId 
        {
            get 
            {
                if (_rolePermissionEventId == null) { _rolePermissionEventId = new RolePermissionEventId(); }
                return _rolePermissionEventId;
            }
            set
            {
                _rolePermissionEventId = value;
            }
        }

        public virtual RolePermissionId Id
        {
            get { return RolePermissionEventId.Id; }
            set { RolePermissionEventId.Id = value; }
        }

        public virtual long Version
        {
            get { return RolePermissionEventId.Version; }
            set { RolePermissionEventId.Version = value; }
        }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		RolePermissionEventId IGlobalIdentity<RolePermissionEventId>.GlobalId {
			get 
			{
				return this.RolePermissionEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IRolePermissionEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IRolePermissionStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        RolePermissionEventId IRolePermissionEvent.RolePermissionEventId
        {
            get { return this.RolePermissionEventId; }
        }

        protected RolePermissionStateEventDtoBase()
        {
        }

        protected RolePermissionStateEventDtoBase(RolePermissionEventId stateEventId)
        {
            this.RolePermissionEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IEventDto.EventType 
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}


    public class RolePermissionStateCreatedOrMergePatchedOrDeletedDto : RolePermissionStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetEventType()
        {
            return this._eventType;
        }

    }



	public class RolePermissionStateCreatedDto : RolePermissionStateCreatedOrMergePatchedOrDeletedDto
	{
		public RolePermissionStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class RolePermissionStateMergePatchedDto : RolePermissionStateCreatedOrMergePatchedOrDeletedDto
	{
		public RolePermissionStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class RolePermissionStateDeletedDto : RolePermissionStateCreatedOrMergePatchedOrDeletedDto
	{
		public RolePermissionStateDeletedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class RolePermissionStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IRolePermissionStateCreated>, IEnumerable<IRolePermissionStateMergePatched>, IEnumerable<IRolePermissionStateDeleted>
    {
        private List<RolePermissionStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<RolePermissionStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual RolePermissionStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<RolePermissionStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IRolePermissionStateCreated> IEnumerable<IRolePermissionStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IRolePermissionStateMergePatched> IEnumerable<IRolePermissionStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IRolePermissionStateDeleted> IEnumerable<IRolePermissionStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddRolePermissionEvent(IRolePermissionStateCreated e)
        {
            _innerStateEvents.Add((RolePermissionStateCreatedDto)e);
        }

        public void AddRolePermissionEvent(IRolePermissionEvent e)
        {
            _innerStateEvents.Add((RolePermissionStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddRolePermissionEvent(IRolePermissionStateDeleted e)
        {
            _innerStateEvents.Add((RolePermissionStateDeletedDto)e);
        }

    }


}

