// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.RolePermission;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.RolePermission
{

	public partial interface IRolePermissionApplicationService : IApplicationService
	{
		void When(ICreateRolePermission c);

		void When(IMergePatchRolePermission c);

		void When(IDeleteRolePermission c);

 		IRolePermissionState Get(RolePermissionId id);

        IEnumerable<IRolePermissionState> GetAll(int firstResult, int maxResults);

        IEnumerable<IRolePermissionState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IRolePermissionState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IRolePermissionState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        IRolePermissionStateEvent GetStateEvent(RolePermissionId id, long version);

        IRolePermissionState GetHistoryState(RolePermissionId id, long version);


	}

    public static partial class RolePermissionApplicationServiceExtension
    {
        public static IEnumerable<IRolePermissionState> GetByProperty(this IRolePermissionApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IRolePermissionState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IRolePermissionState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<IRolePermissionState> GetByProperty<TPropertyType>(this IRolePermissionApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IRolePermissionState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IRolePermissionState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

