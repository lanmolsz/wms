// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Audience;

namespace Dddml.Wms.Domain.Audience
{

	public abstract class AudienceStateEventDtoBase : IEventDto, IAudienceStateCreated, IAudienceStateMergePatched, IAudienceStateDeleted
	{

        private AudienceEventId _audienceEventId;

		protected internal virtual AudienceEventId AudienceEventId 
        {
            get 
            {
                if (_audienceEventId == null) { _audienceEventId = new AudienceEventId(); }
                return _audienceEventId;
            }
            set
            {
                _audienceEventId = value;
            }
        }

        public virtual string ClientId
        {
            get { return AudienceEventId.ClientId; }
            set { AudienceEventId.ClientId = value; }
        }

        public virtual long Version
        {
            get { return AudienceEventId.Version; }
            set { AudienceEventId.Version = value; }
        }

		public virtual string Name { get; set; }

		public virtual string Base64Secret { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		AudienceEventId IGlobalIdentity<AudienceEventId>.GlobalId {
			get 
			{
				return this.AudienceEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IAudienceEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyNameRemoved { get; set; }

        bool IAudienceStateMergePatched.IsPropertyNameRemoved
        {
            get 
            {
                var b = this.IsPropertyNameRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyNameRemoved = value;
            }
        }

		public virtual bool? IsPropertyBase64SecretRemoved { get; set; }

        bool IAudienceStateMergePatched.IsPropertyBase64SecretRemoved
        {
            get 
            {
                var b = this.IsPropertyBase64SecretRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyBase64SecretRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IAudienceStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        AudienceEventId IAudienceEvent.AudienceEventId
        {
            get { return this.AudienceEventId; }
        }

        protected AudienceStateEventDtoBase()
        {
        }

        protected AudienceStateEventDtoBase(AudienceEventId stateEventId)
        {
            this.AudienceEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IEventDto.EventType 
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}


    public class AudienceStateCreatedOrMergePatchedOrDeletedDto : AudienceStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetEventType()
        {
            return this._eventType;
        }

    }



	public class AudienceStateCreatedDto : AudienceStateCreatedOrMergePatchedOrDeletedDto
	{
		public AudienceStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class AudienceStateMergePatchedDto : AudienceStateCreatedOrMergePatchedOrDeletedDto
	{
		public AudienceStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class AudienceStateDeletedDto : AudienceStateCreatedOrMergePatchedOrDeletedDto
	{
		public AudienceStateDeletedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class AudienceStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IAudienceStateCreated>, IEnumerable<IAudienceStateMergePatched>, IEnumerable<IAudienceStateDeleted>
    {
        private List<AudienceStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<AudienceStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual AudienceStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<AudienceStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IAudienceStateCreated> IEnumerable<IAudienceStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IAudienceStateMergePatched> IEnumerable<IAudienceStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IAudienceStateDeleted> IEnumerable<IAudienceStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddAudienceEvent(IAudienceStateCreated e)
        {
            _innerStateEvents.Add((AudienceStateCreatedDto)e);
        }

        public void AddAudienceEvent(IAudienceEvent e)
        {
            _innerStateEvents.Add((AudienceStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddAudienceEvent(IAudienceStateDeleted e)
        {
            _innerStateEvents.Add((AudienceStateDeletedDto)e);
        }

    }


}

