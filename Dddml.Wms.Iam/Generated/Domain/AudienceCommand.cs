// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public abstract class AudienceCommandBase : IAudienceCommand
	{
		public virtual string ClientId { get; set; }


		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return this.ClientId;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string Name { get; set; }

		public virtual string Base64Secret { get; set; }

		public virtual bool? Active { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


    public abstract class AudienceIdGeneratorBase : IIdGenerator<string, ICreateAudience>
    {
        public abstract string GenerateId(ICreateAudience command);

        public abstract string GetNextId();

        public virtual string GetOrGenerateId(ICreateAudience command, out bool reused)
        {
            throw new NotSupportedException();
        }

    }

	public class CreateAudience : AudienceCommandBase, ICreateAudience
	{
		
		public CreateAudience ()
		{
		}


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchAudience :AudienceCommandBase, IMergePatchAudience
	{

		public virtual bool IsPropertyNameRemoved { get; set; }

		public virtual bool IsPropertyBase64SecretRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchAudience ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteAudience : AudienceCommandBase, IDeleteAudience
	{
		public DeleteAudience ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }

	}

    public static partial class AudienceCommands
    {
    }

}
