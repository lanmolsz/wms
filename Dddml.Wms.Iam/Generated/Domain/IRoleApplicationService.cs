// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Role;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.Role
{

	public partial interface IRoleApplicationService : IApplicationService
	{
		void When(ICreateRole c);

		void When(IMergePatchRole c);

		void When(IDeleteRole c);

 		IRoleState Get(string roleId);

        IEnumerable<IRoleState> GetAll(int firstResult, int maxResults);

        IEnumerable<IRoleState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IRoleState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IRoleState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        IRoleEvent GetEvent(string roleId, long version);

        IRoleState GetHistoryState(string roleId, long version);


	}

    public static partial class RoleApplicationServiceExtension
    {
        public static IEnumerable<IRoleState> GetByProperty(this IRoleApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IRoleState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IRoleState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<IRoleState> GetByProperty<TPropertyType>(this IRoleApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IRoleState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IRoleState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

