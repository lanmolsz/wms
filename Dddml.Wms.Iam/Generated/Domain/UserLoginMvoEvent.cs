// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.UserLoginMvo;
using Dddml.Wms.Domain.User;

namespace Dddml.Wms.Domain.UserLoginMvo
{

	public abstract class UserLoginMvoEventBase : IUserLoginMvoEvent
	{

		public virtual UserLoginMvoEventId UserLoginMvoEventId { get; set; }

        public virtual UserLoginId UserLoginId
        {
            get { return UserLoginMvoEventId.UserLoginId; }
            set { UserLoginMvoEventId.UserLoginId = value; }
        }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		UserLoginMvoEventId IGlobalIdentity<UserLoginMvoEventId>.GlobalId {
			get
			{
				return this.UserLoginMvoEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IUserLoginMvoEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected UserLoginMvoEventBase()
        {
        }

        protected UserLoginMvoEventBase(UserLoginMvoEventId stateEventId)
        {
            this.UserLoginMvoEventId = stateEventId;
        }


        string IEventDto.EventType
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}

    public abstract class UserLoginMvoStateEventBase : UserLoginMvoEventBase, IUserLoginMvoStateEvent
    {

		public virtual long? Version { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string UserUserName { get; set; }

		public virtual int? UserAccessFailedCount { get; set; }

		public virtual string UserEmail { get; set; }

		public virtual bool? UserEmailConfirmed { get; set; }

		public virtual bool? UserLockoutEnabled { get; set; }

		public virtual DateTime? UserLockoutEndDateUtc { get; set; }

		public virtual string UserPasswordHash { get; set; }

		public virtual string UserPhoneNumber { get; set; }

		public virtual bool? UserPhoneNumberConfirmed { get; set; }

		public virtual bool? UserTwoFactorEnabled { get; set; }

		public virtual string UserSecurityStamp { get; set; }

		public virtual string UserCreatedBy { get; set; }

		public virtual DateTime? UserCreatedAt { get; set; }

		public virtual string UserUpdatedBy { get; set; }

		public virtual DateTime? UserUpdatedAt { get; set; }

		public virtual bool? UserActive { get; set; }

		public virtual bool? UserDeleted { get; set; }

        protected UserLoginMvoStateEventBase() : base()
        {
        }

        protected UserLoginMvoStateEventBase(UserLoginMvoEventId stateEventId) : base(stateEventId)
        {
        }

    }

	public class UserLoginMvoStateCreated : UserLoginMvoStateEventBase, IUserLoginMvoStateCreated
	{
		public UserLoginMvoStateCreated () : this(new UserLoginMvoEventId())
		{
		}

		public UserLoginMvoStateCreated (UserLoginMvoEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class UserLoginMvoStateMergePatched : UserLoginMvoStateEventBase, IUserLoginMvoStateMergePatched
	{
		public virtual bool IsPropertyVersionRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }

		public virtual bool IsPropertyUserUserNameRemoved { get; set; }

		public virtual bool IsPropertyUserAccessFailedCountRemoved { get; set; }

		public virtual bool IsPropertyUserEmailRemoved { get; set; }

		public virtual bool IsPropertyUserEmailConfirmedRemoved { get; set; }

		public virtual bool IsPropertyUserLockoutEnabledRemoved { get; set; }

		public virtual bool IsPropertyUserLockoutEndDateUtcRemoved { get; set; }

		public virtual bool IsPropertyUserPasswordHashRemoved { get; set; }

		public virtual bool IsPropertyUserPhoneNumberRemoved { get; set; }

		public virtual bool IsPropertyUserPhoneNumberConfirmedRemoved { get; set; }

		public virtual bool IsPropertyUserTwoFactorEnabledRemoved { get; set; }

		public virtual bool IsPropertyUserSecurityStampRemoved { get; set; }

		public virtual bool IsPropertyUserCreatedByRemoved { get; set; }

		public virtual bool IsPropertyUserCreatedAtRemoved { get; set; }

		public virtual bool IsPropertyUserUpdatedByRemoved { get; set; }

		public virtual bool IsPropertyUserUpdatedAtRemoved { get; set; }

		public virtual bool IsPropertyUserActiveRemoved { get; set; }

		public virtual bool IsPropertyUserDeletedRemoved { get; set; }


		public UserLoginMvoStateMergePatched ()
		{
		}

		public UserLoginMvoStateMergePatched (UserLoginMvoEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class UserLoginMvoStateDeleted : UserLoginMvoStateEventBase, IUserLoginMvoStateDeleted
	{
		public UserLoginMvoStateDeleted ()
		{
		}

		public UserLoginMvoStateDeleted (UserLoginMvoEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }



	}



}

