// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.User;

namespace Dddml.Wms.Domain.User
{

	public class UserClaimEventId
	{

		private string _userId;

		public virtual string UserId { 
			get { return this._userId; } 
			set { _userId = value; } 
		}

		private int _claimId;

		public virtual int ClaimId { 
			get { return this._claimId; } 
			set { _claimId = value; } 
		}

		private long _userVersion;

		public virtual long UserVersion { 
			get { return this._userVersion; } 
			set { _userVersion = value; } 
		}


        #region  Flattened Properties


        #endregion

		public UserClaimEventId ()
		{
		}

		public UserClaimEventId (string userId, int claimId, long userVersion)
		{
			this._userId = userId;
			this._claimId = claimId;
			this._userVersion = userVersion;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			UserClaimEventId other = obj as UserClaimEventId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.UserId, other.UserId)
				&& Object.Equals (this.ClaimId, other.ClaimId)
				&& Object.Equals (this.UserVersion, other.UserVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.UserId != null) {
				hash += 13 * this.UserId.GetHashCode ();
			}
			if (this.ClaimId != null) {
				hash += 13 * this.ClaimId.GetHashCode ();
			}
			if (this.UserVersion != null) {
				hash += 13 * this.UserVersion.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(UserClaimEventId obj1, UserClaimEventId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(UserClaimEventId obj1, UserClaimEventId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "UserId: " + this.UserId + ", "
                + "ClaimId: " + this.ClaimId + ", "
                + "UserVersion: " + this.UserVersion + ", "
                ;
        }
	}

}


