// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemRequirementDomainNHibernate.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemRequirement;
using Dddml.Wms.Domain.InventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;
using Dddml.Wms.Specialization.NHibernate;
using NHibernate;
using Spring.Transaction.Interceptor;

namespace Dddml.Wms.Domain.InventoryItemRequirement.NHibernate
{

	public partial class InventoryItemRequirementApplicationService : InventoryItemRequirementApplicationServiceBase
	{

		private IInventoryItemRequirementStateRepository _stateRepository;

		protected override IInventoryItemRequirementStateRepository StateRepository
		{
			get
			{
				return _stateRepository;
			}
		}

		private IInventoryItemRequirementStateQueryRepository _stateQueryRepository;

		protected override IInventoryItemRequirementStateQueryRepository StateQueryRepository
		{
			get
			{
				return _stateQueryRepository;
			}
		}

		public InventoryItemRequirementApplicationService(IInventoryItemRequirementStateRepository stateRepository, IInventoryItemRequirementStateQueryRepository stateQueryRepository)
		{
			this._stateRepository = stateRepository;
			this._stateQueryRepository = stateQueryRepository;
		}
		public override IEventStoreAggregateId ToEventStoreAggregateId(InventoryItemId aggregateId)
		{
			return new EventStoreAggregateId(aggregateId);
		}

		public override IInventoryItemRequirementAggregate GetInventoryItemRequirementAggregate(IInventoryItemRequirementState state)
		{
			return new InventoryItemRequirementAggregate(state);
		}

	}

}

