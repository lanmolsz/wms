// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentTypeDomainNHibernate.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentType;
using Dddml.Wms.Specialization.NHibernate;
using NHibernate;
using Spring.Transaction.Interceptor;

namespace Dddml.Wms.Domain.ShipmentType.NHibernate
{

	public partial class ShipmentTypeApplicationService : ShipmentTypeApplicationServiceBase
	{

		private IShipmentTypeStateRepository _stateRepository;

		protected override IShipmentTypeStateRepository StateRepository
		{
			get
			{
				return _stateRepository;
			}
		}

		private IShipmentTypeStateQueryRepository _stateQueryRepository;

		protected override IShipmentTypeStateQueryRepository StateQueryRepository
		{
			get
			{
				return _stateQueryRepository;
			}
		}

		public ShipmentTypeApplicationService(IShipmentTypeStateRepository stateRepository, IShipmentTypeStateQueryRepository stateQueryRepository)
		{
			this._stateRepository = stateRepository;
			this._stateQueryRepository = stateQueryRepository;
		}
		public override IEventStoreAggregateId ToEventStoreAggregateId(string aggregateId)
		{
			return new EventStoreAggregateId(aggregateId);
		}

		public override IShipmentTypeAggregate GetShipmentTypeAggregate(IShipmentTypeState state)
		{
			return new ShipmentTypeAggregate(state);
		}

	}

}

