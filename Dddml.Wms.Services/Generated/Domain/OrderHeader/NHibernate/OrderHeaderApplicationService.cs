// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderHeaderDomainNHibernate.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrderHeader;
using Dddml.Wms.Specialization.NHibernate;
using NHibernate;
using Spring.Transaction.Interceptor;

namespace Dddml.Wms.Domain.OrderHeader.NHibernate
{

	public class OrderHeaderApplicationService : OrderHeaderApplicationServiceBase
	{

		private IEventStore _eventStore;

		protected override IEventStore EventStore
		{
			get
			{
				return _eventStore;
			}
		}

		private IOrderHeaderStateRepository _stateRepository;

		protected override IOrderHeaderStateRepository StateRepository
		{
			get
			{
				return _stateRepository;
			}
		}

		private IOrderHeaderStateQueryRepository _stateQueryRepository;

		protected override IOrderHeaderStateQueryRepository StateQueryRepository
		{
			get
			{
				return _stateQueryRepository;
			}
		}

		public OrderHeaderApplicationService(IEventStore eventStore, IOrderHeaderStateRepository stateRepository, IOrderHeaderStateQueryRepository stateQueryRepository)
		{
			this._eventStore = eventStore;
			this._stateRepository = stateRepository;
			this._stateQueryRepository = stateQueryRepository;
		}

		public override IEventStoreAggregateId ToEventStoreAggregateId(string aggregateId)
		{
			return new EventStoreAggregateId(aggregateId);
		}

		public override IOrderHeaderAggregate GetOrderHeaderAggregate(IOrderHeaderState state)
		{
			return new OrderHeaderAggregate(state);
		}

	}

}

