<#@ template language="C#" debug="True" #>
<#@ include file="T4Toolbox.tt" #>
<#+
// <copyright file="AttributeSetInstanceExtensionFieldUtilsTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class AttributeSetInstanceExtensionFieldUtilsTemplate : CSharpTemplate
{
    IList<ExtensionFieldGroupMetadata> _extensionFieldGroups;

    IList<ExtensionFieldMetadata> _extensionFields;

    public AttributeSetInstanceExtensionFieldUtilsTemplate(IList<ExtensionFieldGroupMetadata> extensionFieldGroups, IList<ExtensionFieldMetadata> extensionFields)
    {
        this._extensionFieldGroups = extensionFieldGroups;
        this._extensionFields = extensionFields;
    }

	public override string TransformText()
	{
		base.TransformText();

#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeSetInstanceExtensionFieldGroup;
using Dddml.Wms.Domain.AttributeSetInstanceExtensionField;

namespace Dddml.Wms.Support
{
    public static class AttributeSetInstanceExtensionFieldUtils
    {

        public static CreateAttributeSetInstanceExtensionField[] CreateAttributeSetInstanceExtensionFields()
        {
            var fs = new CreateAttributeSetInstanceExtensionField[]{
<#+ 
		foreach (var fMeta in this._extensionFields)
		{
#>
                new CreateAttributeSetInstanceExtensionField
                {
                    Name = "<#= fMeta.Name #>",
                    Type = "<#= fMeta.Type #>",
                    Length = <#= fMeta.Length == null ? "null" : fMeta.Length.Value.ToString() #>,
                    GroupId = <#= fMeta.GroupId == null ? "null" : String.Format("\"{0}\"", fMeta.GroupId) #>,
                    Active = true,
                },
<#+ 
		}
#>
            };
            return fs;
        }

        public static CreateAttributeSetInstanceExtensionFieldGroup[] CreateAttributeSetInstanceExtensionFieldGroups()
        {
            var groups = new CreateAttributeSetInstanceExtensionFieldGroup[] {
<#+ 
		foreach (var gMeta in this._extensionFieldGroups)
		{
#>
                new CreateAttributeSetInstanceExtensionFieldGroup
                {
                    Id = "<#= gMeta.NamePrefix #>",
                    FieldType = typeof(<#= gMeta.FieldType.EndsWith("?") ? gMeta.FieldType.Substring(0, gMeta.FieldType.Length-1) : gMeta.FieldType #>).Name,
                    FieldLength = <#= gMeta.FieldLength == null ? "null" : gMeta.FieldLength.ToString() #>,
                    FieldCount = <#= gMeta.FieldCount #>,
                    NameFormat = "<#= gMeta.NameFormat #>",
                    Active = true
                },
<#+ 
		}
#>
            };

            return groups;

        }

    }
}


<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
