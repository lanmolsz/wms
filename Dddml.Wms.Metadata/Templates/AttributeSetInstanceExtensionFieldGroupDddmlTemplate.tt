<#@ template language="C#" debug="True" #>
<#@ output extension="yaml" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\Dddml.Core\bin\Debug\Dddml.Core.dll" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\Dddml.Serialization\bin\Debug\Dddml.Serialization.dll" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\Dddml.T4\bin\Debug\Dddml.T4.dll" #>
<#@ assembly name="%DddmlDotNetToolsSolutionDir%\packages\YamlDotNet.3.8.0\lib\net35\YamlDotNet.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Dddml.Core.Dom" #>
<#@ import namespace="Dddml.Serialization" #>
<#@ import namespace="Dddml.T4" #>
<#@ import namespace="Dddml.T4.Extensions" #>
<#@ import namespace="Dddml.T4.Generator" #>
<#@ include file="T4Toolbox.tt" #>
<#+
// <copyright file="AttributeSetInstanceExtensionFieldGroupDddmlTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class AttributeSetInstanceExtensionFieldGroupDddmlTemplate : CSharpTemplate
{
	public override string TransformText()
	{

#>
#%DDDML 0.1

---

# ------------------------------
aggregates:


    # --------------- aggregate ---------------
    AttributeSetInstanceExtensionFieldGroup:
      abbreviatedName: AttrSetInstEFGroup

      id:
        name: Id
        type: string
      
            
      properties:

        FieldType:
          type: string
          
        FieldLength:
          type: int?

        FieldCount:
          type: int
          
        NameFormat:
          type: string

        Description:
          type: string
          
        Fields:
          itemType: AttributeSetInstanceExtensionField
      
      entities:
        
        AttributeSetInstanceExtensionField:
          
          id:
            name: Index
            type: string
          
          outerId:
            name: GroupId

          globalId:
            name: AttributeSetInstanceExtensionFieldId

          properties: 
          
            Name:
              type: string
              
            Type: 
              type: string
              
            Length:
              type: int?
            
            Alias:
              type: string
            
            Description:
              type: string
          
            
          uniqueConstraints:
            UniqueName: [Name]
            UniqueAlias: [Alias]

<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
