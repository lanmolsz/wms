// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public static partial class UserLoginStateInterfaceExtension
	{

        public static IUserLoginCommand ToCreateOrMergePatchUserLogin<TCreateUserLogin, TMergePatchUserLogin>(this IUserLoginState state)
            where TCreateUserLogin : ICreateUserLogin, new()
            where TMergePatchUserLogin : IMergePatchUserLogin, new()
        {
            bool bUnsaved = ((IUserLoginState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateUserLogin<TCreateUserLogin>();
            }
            else 
            {
                return state.ToMergePatchUserLogin<TMergePatchUserLogin>();
            }
        }

        public static TRemoveUserLogin ToRemoveUserLogin<TRemoveUserLogin>(this IUserLoginState state)
            where TRemoveUserLogin : IRemoveUserLogin, new()
        {
            var cmd = new TRemoveUserLogin();
            cmd.LoginKey = state.LoginKey;
            return cmd;
        }

        public static TMergePatchUserLogin ToMergePatchUserLogin<TMergePatchUserLogin>(this IUserLoginState state)
            where TMergePatchUserLogin : IMergePatchUserLogin, new()
        {
            var cmd = new TMergePatchUserLogin();

            cmd.LoginKey = state.LoginKey;
            cmd.Active = ((IUserLoginStateProperties)state).Active;
            cmd.UserId = state.UserId;
            
            return cmd;
        }

        public static TCreateUserLogin ToCreateUserLogin<TCreateUserLogin>(this IUserLoginState state)
            where TCreateUserLogin : ICreateUserLogin, new()
        {
            var cmd = new TCreateUserLogin();

            cmd.LoginKey = state.LoginKey;
            cmd.Active = ((IUserLoginStateProperties)state).Active;
            cmd.UserId = state.UserId;
            return cmd;
        }
		

	}

}

