// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public static partial class MonthPlanMvoStateInterfaceExtensions
	{

        public static IMonthPlanMvoCommand ToCreateOrMergePatchMonthPlanMvo<TCreateMonthPlanMvo, TMergePatchMonthPlanMvo>(this IMonthPlanMvoState state)
            where TCreateMonthPlanMvo : ICreateMonthPlanMvo, new()
            where TMergePatchMonthPlanMvo : IMergePatchMonthPlanMvo, new()
        {
            bool bUnsaved = ((IMonthPlanMvoState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateMonthPlanMvo<TCreateMonthPlanMvo>();
            }
            else 
            {
                return state.ToMergePatchMonthPlanMvo<TMergePatchMonthPlanMvo>();
            }
        }

        public static TDeleteMonthPlanMvo ToDeleteMonthPlanMvo<TDeleteMonthPlanMvo>(this IMonthPlanMvoState state)
            where TDeleteMonthPlanMvo : IDeleteMonthPlanMvo, new()
        {
            var cmd = new TDeleteMonthPlanMvo();
            cmd.MonthPlanId = state.MonthPlanId;
            cmd.PersonVersion = ((IMonthPlanMvoStateProperties)state).PersonVersion;

            return cmd;
        }

        public static TMergePatchMonthPlanMvo ToMergePatchMonthPlanMvo<TMergePatchMonthPlanMvo>(this IMonthPlanMvoState state)
            where TMergePatchMonthPlanMvo : IMergePatchMonthPlanMvo, new()
        {
            var cmd = new TMergePatchMonthPlanMvo();

            cmd.PersonVersion = ((IMonthPlanMvoStateProperties)state).PersonVersion;

            cmd.MonthPlanId = state.MonthPlanId;
            cmd.Description = state.Description;
            cmd.Version = ((IMonthPlanMvoStateProperties)state).Version;
            cmd.Active = ((IMonthPlanMvoStateProperties)state).Active;
            cmd.YearPlanDescription = state.YearPlanDescription;
            cmd.YearPlanVersion = state.YearPlanVersion;
            cmd.YearPlanCreatedBy = state.YearPlanCreatedBy;
            cmd.YearPlanCreatedAt = state.YearPlanCreatedAt;
            cmd.YearPlanUpdatedBy = state.YearPlanUpdatedBy;
            cmd.YearPlanUpdatedAt = state.YearPlanUpdatedAt;
            cmd.YearPlanActive = state.YearPlanActive;
            cmd.YearPlanDeleted = state.YearPlanDeleted;
            cmd.PersonBirthDate = state.PersonBirthDate;
            cmd.PersonLoves = state.PersonLoves;
            cmd.PersonCreatedBy = state.PersonCreatedBy;
            cmd.PersonCreatedAt = state.PersonCreatedAt;
            cmd.PersonUpdatedBy = state.PersonUpdatedBy;
            cmd.PersonUpdatedAt = state.PersonUpdatedAt;
            cmd.PersonActive = state.PersonActive;
            cmd.PersonDeleted = state.PersonDeleted;
            
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            if (state.YearPlanDescription == null) { cmd.IsPropertyYearPlanDescriptionRemoved = true; }
            if (state.YearPlanCreatedBy == null) { cmd.IsPropertyYearPlanCreatedByRemoved = true; }
            if (state.YearPlanUpdatedBy == null) { cmd.IsPropertyYearPlanUpdatedByRemoved = true; }
            if (state.PersonLoves == null) { cmd.IsPropertyPersonLovesRemoved = true; }
            if (state.PersonCreatedBy == null) { cmd.IsPropertyPersonCreatedByRemoved = true; }
            if (state.PersonUpdatedBy == null) { cmd.IsPropertyPersonUpdatedByRemoved = true; }
            return cmd;
        }

        public static TCreateMonthPlanMvo ToCreateMonthPlanMvo<TCreateMonthPlanMvo>(this IMonthPlanMvoState state)
            where TCreateMonthPlanMvo : ICreateMonthPlanMvo, new()
        {
            var cmd = new TCreateMonthPlanMvo();

            cmd.PersonVersion = ((IMonthPlanMvoStateProperties)state).PersonVersion;

            cmd.MonthPlanId = state.MonthPlanId;
            cmd.Description = state.Description;
            cmd.Version = ((IMonthPlanMvoStateProperties)state).Version;
            cmd.Active = ((IMonthPlanMvoStateProperties)state).Active;
            cmd.YearPlanDescription = state.YearPlanDescription;
            cmd.YearPlanVersion = state.YearPlanVersion;
            cmd.YearPlanCreatedBy = state.YearPlanCreatedBy;
            cmd.YearPlanCreatedAt = state.YearPlanCreatedAt;
            cmd.YearPlanUpdatedBy = state.YearPlanUpdatedBy;
            cmd.YearPlanUpdatedAt = state.YearPlanUpdatedAt;
            cmd.YearPlanActive = state.YearPlanActive;
            cmd.YearPlanDeleted = state.YearPlanDeleted;
            cmd.PersonBirthDate = state.PersonBirthDate;
            cmd.PersonLoves = state.PersonLoves;
            cmd.PersonCreatedBy = state.PersonCreatedBy;
            cmd.PersonCreatedAt = state.PersonCreatedAt;
            cmd.PersonUpdatedBy = state.PersonUpdatedBy;
            cmd.PersonUpdatedAt = state.PersonUpdatedAt;
            cmd.PersonActive = state.PersonActive;
            cmd.PersonDeleted = state.PersonDeleted;
            return cmd;
        }
		

	}

}

