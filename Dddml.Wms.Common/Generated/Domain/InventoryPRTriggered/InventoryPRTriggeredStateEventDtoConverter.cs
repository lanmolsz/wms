// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryPRTriggeredDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryPRTriggered;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryPRTriggered
{

    public class InventoryPRTriggeredStateEventDtoConverter
    {
        public virtual InventoryPRTriggeredStateCreatedOrMergePatchedOrDeletedDto ToInventoryPRTriggeredStateEventDto(IInventoryPRTriggeredStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IInventoryPRTriggeredStateCreated)stateEvent;
                return ToInventoryPRTriggeredStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IInventoryPRTriggeredStateMergePatched)stateEvent;
                return ToInventoryPRTriggeredStateMergePatchedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual InventoryPRTriggeredStateCreatedDto ToInventoryPRTriggeredStateCreatedDto(IInventoryPRTriggeredStateCreated e)
        {
            var dto = new InventoryPRTriggeredStateCreatedDto();
            dto.InventoryPRTriggeredEventId = e.InventoryPRTriggeredEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.IsProcessed = e.IsProcessed;
            return dto;
        }

        public virtual InventoryPRTriggeredStateMergePatchedDto ToInventoryPRTriggeredStateMergePatchedDto(IInventoryPRTriggeredStateMergePatched e)
        {
            var dto = new InventoryPRTriggeredStateMergePatchedDto();
            dto.InventoryPRTriggeredEventId = e.InventoryPRTriggeredEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.IsProcessed = e.IsProcessed;
            dto.IsPropertyIsProcessedRemoved = e.IsPropertyIsProcessedRemoved;

            return dto;
        }



    }


}

