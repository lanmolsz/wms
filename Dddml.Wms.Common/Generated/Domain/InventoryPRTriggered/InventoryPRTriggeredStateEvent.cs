// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryPRTriggeredDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryPRTriggered;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryPRTriggered
{

	public abstract class InventoryPRTriggeredStateEventBase : IInventoryPRTriggeredStateEvent
	{

		public virtual InventoryPRTriggeredEventId StateEventId { get; set; }

        public virtual InventoryPRTriggeredId InventoryPRTriggeredId
        {
            get { return StateEventId.InventoryPRTriggeredId; }
            set { StateEventId.InventoryPRTriggeredId = value; }
        }

		public virtual bool? IsProcessed { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		InventoryPRTriggeredEventId IGlobalIdentity<InventoryPRTriggeredEventId>.GlobalId {
			get
			{
				return this.StateEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IInventoryPRTriggeredStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected InventoryPRTriggeredStateEventBase()
        {
        }

        protected InventoryPRTriggeredStateEventBase(InventoryPRTriggeredEventId stateEventId)
        {
            this.StateEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class InventoryPRTriggeredStateCreated : InventoryPRTriggeredStateEventBase, IInventoryPRTriggeredStateCreated
	{
		public InventoryPRTriggeredStateCreated () : this(new InventoryPRTriggeredEventId())
		{
		}

		public InventoryPRTriggeredStateCreated (InventoryPRTriggeredEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class InventoryPRTriggeredStateMergePatched : InventoryPRTriggeredStateEventBase, IInventoryPRTriggeredStateMergePatched
	{
		public virtual bool IsPropertyIsProcessedRemoved { get; set; }


		public InventoryPRTriggeredStateMergePatched ()
		{
		}

		public InventoryPRTriggeredStateMergePatched (InventoryPRTriggeredEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}




}

