// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryPRTriggeredDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryPRTriggered;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryPRTriggered
{

	public class InventoryPRTriggeredIdDto
	{

		public InventoryPRTriggeredIdDto()
		{
		}

        public virtual InventoryPRTriggeredId ToInventoryPRTriggeredId()
        {
            InventoryPRTriggeredId v = new InventoryPRTriggeredId();
            v.SourceEntryId = this.SourceEntryId.ToInventoryItemEntryId();
            v.InventoryPostingRuleId = this.InventoryPostingRuleId;
            return v;
        }

		private InventoryItemEntryIdDto _sourceEntryId = new InventoryItemEntryIdDto();

		public virtual InventoryItemEntryIdDto SourceEntryId { 
			get { return this._sourceEntryId; } 
			set { this._sourceEntryId = value; } 
		}

		public virtual string InventoryPostingRuleId { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			InventoryPRTriggeredIdDto other = obj as InventoryPRTriggeredIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.SourceEntryId, other.SourceEntryId)
				&& Object.Equals (this.InventoryPostingRuleId, other.InventoryPostingRuleId)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.SourceEntryId != null) {
				hash += 13 * this.SourceEntryId.GetHashCode ();
			}
			if (this.InventoryPostingRuleId != null) {
				hash += 13 * this.InventoryPostingRuleId.GetHashCode ();
			}
			return hash;
		}

	}

}


