// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryPRTriggeredDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryPRTriggered;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryPRTriggered
{

	public partial class InventoryPRTriggeredStateDtoWrapper : StateDtoWrapperBase, IInventoryPRTriggeredStateDto, IInventoryPRTriggeredState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IInventoryPRTriggeredState _state;

        public InventoryPRTriggeredStateDtoWrapper()
        {
            this._state = new InventoryPRTriggeredState();
        }

		public InventoryPRTriggeredStateDtoWrapper(IInventoryPRTriggeredState state)
		{
            this._state = state;
		}

		public IInventoryPRTriggeredState ToInventoryPRTriggeredState()
		{
			return this._state;
		}

		public virtual InventoryPRTriggeredId InventoryPRTriggeredId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InventoryPRTriggeredId"))
                {
                    return _state.InventoryPRTriggeredId;
                }
                return null;
            }
            set
            {
                _state.InventoryPRTriggeredId = value;
            }
        }

        InventoryPRTriggeredId IInventoryPRTriggeredStateProperties.InventoryPRTriggeredId
        {
            get 
            {
                return (this._state as IInventoryPRTriggeredStateProperties).InventoryPRTriggeredId;
            }
            set 
            {
                (this._state as IInventoryPRTriggeredStateProperties).InventoryPRTriggeredId = value;
            }
        }

		public virtual bool? IsProcessed
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IsProcessed"))
                {
                    return _state.IsProcessed;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.IsProcessed = value.Value;
                }
            }
        }

        bool IInventoryPRTriggeredStateProperties.IsProcessed
        {
            get 
            {
                return (this._state as IInventoryPRTriggeredStateProperties).IsProcessed;
            }
            set 
            {
                (this._state as IInventoryPRTriggeredStateProperties).IsProcessed = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IInventoryPRTriggeredStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IInventoryPRTriggeredStateProperties).Version = value.Value;
                }
            }
        }

        long IInventoryPRTriggeredStateProperties.Version
        {
            get 
            {
                return (this._state as IInventoryPRTriggeredStateProperties).Version;
            }
            set 
            {
                (this._state as IInventoryPRTriggeredStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		InventoryPRTriggeredId IGlobalIdentity<InventoryPRTriggeredId>.GlobalId
		{
			get { return (_state as IInventoryPRTriggeredState).GlobalId; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IInventoryPRTriggeredState).CreatedBy; }
            set { (_state as IInventoryPRTriggeredState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IInventoryPRTriggeredState).CreatedAt; }
            set { (_state as IInventoryPRTriggeredState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IInventoryPRTriggeredState).UpdatedBy; }
            set { (_state as IInventoryPRTriggeredState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IInventoryPRTriggeredState).UpdatedAt; }
            set { (_state as IInventoryPRTriggeredState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IInventoryPRTriggeredStateProperties).Version; }
		}

		#endregion

        bool IInventoryPRTriggeredState.IsUnsaved
        {
            get { return this.Version == InventoryPRTriggeredState.VersionZero; }
        }

		void IInventoryPRTriggeredState.When(IInventoryPRTriggeredStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IInventoryPRTriggeredState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

        public virtual string CommandId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CommandId"))
                {
                    return _state.CommandId; 
                }
                return null;
            }
            set { _state.CommandId = value; }
        }

		void IInventoryPRTriggeredState.When(IInventoryPRTriggeredStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IInventoryPRTriggeredState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class InventoryPRTriggeredStateDtoWrapperCollection : StateDtoWrapperCollectionBase<InventoryPRTriggeredStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(InventoryPRTriggeredStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

