// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryPRTriggeredDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryPRTriggered;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryPRTriggered
{

	public static partial class InventoryPRTriggeredStateInterfaceExtension
	{

        public static IInventoryPRTriggeredCommand ToCreateOrMergePatchInventoryPRTriggered<TCreateInventoryPRTriggered, TMergePatchInventoryPRTriggered>(this IInventoryPRTriggeredState state)
            where TCreateInventoryPRTriggered : ICreateInventoryPRTriggered, new()
            where TMergePatchInventoryPRTriggered : IMergePatchInventoryPRTriggered, new()
        {
            bool bUnsaved = ((IInventoryPRTriggeredState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateInventoryPRTriggered<TCreateInventoryPRTriggered>();
            }
            else 
            {
                return state.ToMergePatchInventoryPRTriggered<TMergePatchInventoryPRTriggered>();
            }
        }

        public static TDeleteInventoryPRTriggered ToDeleteInventoryPRTriggered<TDeleteInventoryPRTriggered>(this IInventoryPRTriggeredState state)
            where TDeleteInventoryPRTriggered : IDeleteInventoryPRTriggered, new()
        {
            var cmd = new TDeleteInventoryPRTriggered();
            cmd.InventoryPRTriggeredId = state.InventoryPRTriggeredId;
            cmd.Version = ((IInventoryPRTriggeredStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchInventoryPRTriggered ToMergePatchInventoryPRTriggered<TMergePatchInventoryPRTriggered>(this IInventoryPRTriggeredState state)
            where TMergePatchInventoryPRTriggered : IMergePatchInventoryPRTriggered, new()
        {
            var cmd = new TMergePatchInventoryPRTriggered();

            cmd.Version = ((IInventoryPRTriggeredStateProperties)state).Version;

            cmd.InventoryPRTriggeredId = state.InventoryPRTriggeredId;
            cmd.IsProcessed = state.IsProcessed;
            
            return cmd;
        }

        public static TCreateInventoryPRTriggered ToCreateInventoryPRTriggered<TCreateInventoryPRTriggered>(this IInventoryPRTriggeredState state)
            where TCreateInventoryPRTriggered : ICreateInventoryPRTriggered, new()
        {
            var cmd = new TCreateInventoryPRTriggered();

            cmd.Version = ((IInventoryPRTriggeredStateProperties)state).Version;

            cmd.InventoryPRTriggeredId = state.InventoryPRTriggeredId;
            cmd.IsProcessed = state.IsProcessed;
            return cmd;
        }
		

	}

}

