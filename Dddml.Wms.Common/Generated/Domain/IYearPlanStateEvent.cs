// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{
	public interface IYearPlanStateEvent : IEvent, IStateEventDto, IGlobalIdentity<YearPlanStateEventId>, ICreated<string>
	{
		YearPlanStateEventId StateEventId { get; }

        bool ReadOnly { get; set; }

		long Version { get; set; }

		string Description { get; set; }

		bool? Active { get; set; }

		// Outer Id:
		//PersonalName PersonalName { get; set; }

	}

	public interface IYearPlanStateCreated : IYearPlanStateEvent//, IYearPlanStateProperties
	{
		IEnumerable<IMonthPlanStateCreated> MonthPlanEvents { get; }
		
		void AddMonthPlanEvent(IMonthPlanStateCreated e);

		IMonthPlanStateCreated NewMonthPlanStateCreated(int month);

	
	}


	public interface IYearPlanStateMergePatched : IYearPlanStateEvent//, IYearPlanStateProperties
	{
		bool IsPropertyDescriptionRemoved { get; set; }

		bool IsPropertyActiveRemoved { get; set; }

		IEnumerable<IMonthPlanStateEvent> MonthPlanEvents { get; }
		
		void AddMonthPlanEvent(IMonthPlanStateEvent e);

		IMonthPlanStateCreated NewMonthPlanStateCreated(int month);

		IMonthPlanStateMergePatched NewMonthPlanStateMergePatched(int month);

		IMonthPlanStateRemoved NewMonthPlanStateRemoved(int month);


	}

	public interface IYearPlanStateRemoved : IYearPlanStateEvent
	{
		IEnumerable<IMonthPlanStateRemoved> MonthPlanEvents { get; }
		
		void AddMonthPlanEvent(IMonthPlanStateRemoved e);
		
		IMonthPlanStateRemoved NewMonthPlanStateRemoved(int month);

	}


}

