// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemRequirementEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemRequirementEntryMvo;
using Dddml.Wms.Domain.InventoryItemRequirement;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.InventoryItemRequirementEntryMvo
{

	public class InventoryItemRequirementEntryMvoStateEventIdDto
	{

		public InventoryItemRequirementEntryMvoStateEventIdDto()
		{
		}

        public virtual InventoryItemRequirementEntryMvoStateEventId ToInventoryItemRequirementEntryMvoStateEventId()
        {
            InventoryItemRequirementEntryMvoStateEventId v = new InventoryItemRequirementEntryMvoStateEventId();
            v.InventoryItemRequirementEntryId = this.InventoryItemRequirementEntryId.ToInventoryItemRequirementEntryId();
            v.InventoryItemRequirementVersion = this.InventoryItemRequirementVersion;
            return v;
        }

		private InventoryItemRequirementEntryIdDto _inventoryItemRequirementEntryId = new InventoryItemRequirementEntryIdDto();

		public virtual InventoryItemRequirementEntryIdDto InventoryItemRequirementEntryId { 
			get { return this._inventoryItemRequirementEntryId; } 
			set { this._inventoryItemRequirementEntryId = value; } 
		}

		public virtual long InventoryItemRequirementVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			InventoryItemRequirementEntryMvoStateEventIdDto other = obj as InventoryItemRequirementEntryMvoStateEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.InventoryItemRequirementEntryId, other.InventoryItemRequirementEntryId)
				&& Object.Equals (this.InventoryItemRequirementVersion, other.InventoryItemRequirementVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.InventoryItemRequirementEntryId != null) {
				hash += 13 * this.InventoryItemRequirementEntryId.GetHashCode ();
			}
			if (this.InventoryItemRequirementVersion != null) {
				hash += 13 * this.InventoryItemRequirementVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


