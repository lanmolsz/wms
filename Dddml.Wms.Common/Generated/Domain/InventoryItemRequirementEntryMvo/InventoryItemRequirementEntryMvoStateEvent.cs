// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemRequirementEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemRequirementEntryMvo;
using Dddml.Wms.Domain.InventoryItemRequirement;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.InventoryItemRequirementEntryMvo
{

	public abstract class InventoryItemRequirementEntryMvoStateEventBase : IInventoryItemRequirementEntryMvoStateEvent
	{

		public virtual InventoryItemRequirementEntryMvoStateEventId StateEventId { get; set; }

        public virtual InventoryItemRequirementEntryId InventoryItemRequirementEntryId
        {
            get { return StateEventId.InventoryItemRequirementEntryId; }
            set { StateEventId.InventoryItemRequirementEntryId = value; }
        }

		public virtual decimal? Quantity { get; set; }

		public virtual InventoryPRTriggeredId SourceEventId { get; set; }

		public virtual long? Version { get; set; }

		public virtual decimal? InventoryItemRequirementQuantity { get; set; }

		public virtual string InventoryItemRequirementCreatedBy { get; set; }

		public virtual DateTime? InventoryItemRequirementCreatedAt { get; set; }

		public virtual string InventoryItemRequirementUpdatedBy { get; set; }

		public virtual DateTime? InventoryItemRequirementUpdatedAt { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		InventoryItemRequirementEntryMvoStateEventId IGlobalIdentity<InventoryItemRequirementEntryMvoStateEventId>.GlobalId {
			get
			{
				return this.StateEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IInventoryItemRequirementEntryMvoStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected InventoryItemRequirementEntryMvoStateEventBase()
        {
        }

        protected InventoryItemRequirementEntryMvoStateEventBase(InventoryItemRequirementEntryMvoStateEventId stateEventId)
        {
            this.StateEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class InventoryItemRequirementEntryMvoStateCreated : InventoryItemRequirementEntryMvoStateEventBase, IInventoryItemRequirementEntryMvoStateCreated
	{
		public InventoryItemRequirementEntryMvoStateCreated () : this(new InventoryItemRequirementEntryMvoStateEventId())
		{
		}

		public InventoryItemRequirementEntryMvoStateCreated (InventoryItemRequirementEntryMvoStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class InventoryItemRequirementEntryMvoStateMergePatched : InventoryItemRequirementEntryMvoStateEventBase, IInventoryItemRequirementEntryMvoStateMergePatched
	{
		public virtual bool IsPropertyQuantityRemoved { get; set; }

		public virtual bool IsPropertySourceEventIdRemoved { get; set; }

		public virtual bool IsPropertyVersionRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemRequirementQuantityRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemRequirementCreatedByRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemRequirementCreatedAtRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemRequirementUpdatedByRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemRequirementUpdatedAtRemoved { get; set; }


		public InventoryItemRequirementEntryMvoStateMergePatched ()
		{
		}

		public InventoryItemRequirementEntryMvoStateMergePatched (InventoryItemRequirementEntryMvoStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}




}

