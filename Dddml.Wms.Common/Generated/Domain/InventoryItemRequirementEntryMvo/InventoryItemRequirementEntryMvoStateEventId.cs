// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemRequirementEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemRequirementEntryMvo;
using Dddml.Wms.Domain.InventoryItemRequirement;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.InventoryItemRequirementEntryMvo
{

	public class InventoryItemRequirementEntryMvoStateEventId
	{

		private InventoryItemRequirementEntryId _inventoryItemRequirementEntryId = new InventoryItemRequirementEntryId();

		public virtual InventoryItemRequirementEntryId InventoryItemRequirementEntryId { 
			get { return this._inventoryItemRequirementEntryId; } 
			internal set { _inventoryItemRequirementEntryId = value; } 
		}

		private long _inventoryItemRequirementVersion;

		public virtual long InventoryItemRequirementVersion { 
			get { return this._inventoryItemRequirementVersion; } 
			internal set { _inventoryItemRequirementVersion = value; } 
		}


        #region  Flattened Properties


		public virtual string InventoryItemRequirementEntryIdInventoryItemRequirementIdProductId {
			get { return InventoryItemRequirementEntryId.InventoryItemRequirementId.ProductId; }
			internal set { InventoryItemRequirementEntryId.InventoryItemRequirementId.ProductId = value; }
		}

		public virtual string InventoryItemRequirementEntryIdInventoryItemRequirementIdLocatorId {
			get { return InventoryItemRequirementEntryId.InventoryItemRequirementId.LocatorId; }
			internal set { InventoryItemRequirementEntryId.InventoryItemRequirementId.LocatorId = value; }
		}

		public virtual string InventoryItemRequirementEntryIdInventoryItemRequirementIdAttributeSetInstanceId {
			get { return InventoryItemRequirementEntryId.InventoryItemRequirementId.AttributeSetInstanceId; }
			internal set { InventoryItemRequirementEntryId.InventoryItemRequirementId.AttributeSetInstanceId = value; }
		}

		public virtual long InventoryItemRequirementEntryIdEntrySeqId {
			get { return InventoryItemRequirementEntryId.EntrySeqId; }
			internal set { InventoryItemRequirementEntryId.EntrySeqId = value; }
		}

        #endregion

		internal InventoryItemRequirementEntryMvoStateEventId ()
		{
		}

		public InventoryItemRequirementEntryMvoStateEventId (InventoryItemRequirementEntryId inventoryItemRequirementEntryId, long inventoryItemRequirementVersion)
		{
			this._inventoryItemRequirementEntryId = inventoryItemRequirementEntryId;
			this._inventoryItemRequirementVersion = inventoryItemRequirementVersion;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			InventoryItemRequirementEntryMvoStateEventId other = obj as InventoryItemRequirementEntryMvoStateEventId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.InventoryItemRequirementEntryId, other.InventoryItemRequirementEntryId)
				&& Object.Equals (this.InventoryItemRequirementVersion, other.InventoryItemRequirementVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.InventoryItemRequirementEntryId != null) {
				hash += 13 * this.InventoryItemRequirementEntryId.GetHashCode ();
			}
			if (this.InventoryItemRequirementVersion != null) {
				hash += 13 * this.InventoryItemRequirementVersion.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(InventoryItemRequirementEntryMvoStateEventId obj1, InventoryItemRequirementEntryMvoStateEventId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(InventoryItemRequirementEntryMvoStateEventId obj1, InventoryItemRequirementEntryMvoStateEventId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "InventoryItemRequirementEntryId: " + this.InventoryItemRequirementEntryId + ", "
                + "InventoryItemRequirementVersion: " + this.InventoryItemRequirementVersion + ", "
                ;
        }
	}

}


