// <autogenerated>
//   This file was generated by T4 code generator GenerateProductCategoryDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ProductCategory;

namespace Dddml.Wms.Domain.ProductCategory
{

	public partial class ProductCategoryStateDtoWrapper : StateDtoWrapperBase, IProductCategoryStateDto, IProductCategoryState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IProductCategoryState _state;

        public ProductCategoryStateDtoWrapper()
        {
            this._state = new ProductCategoryState();
        }

		public ProductCategoryStateDtoWrapper(IProductCategoryState state)
		{
            this._state = state;
		}

		public IProductCategoryState ToProductCategoryState()
		{
			return this._state;
		}

		public virtual string ProductCategoryId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductCategoryId"))
                {
                    return _state.ProductCategoryId;
                }
                return null;
            }
            set
            {
                _state.ProductCategoryId = value;
            }
        }

        string IProductCategoryStateProperties.ProductCategoryId
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).ProductCategoryId;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).ProductCategoryId = value;
            }
        }

		public virtual string ProductCategoryTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductCategoryTypeId"))
                {
                    return _state.ProductCategoryTypeId;
                }
                return null;
            }
            set
            {
                _state.ProductCategoryTypeId = value;
            }
        }

        string IProductCategoryStateProperties.ProductCategoryTypeId
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).ProductCategoryTypeId;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).ProductCategoryTypeId = value;
            }
        }

		public virtual string PrimaryParentCategoryId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PrimaryParentCategoryId"))
                {
                    return _state.PrimaryParentCategoryId;
                }
                return null;
            }
            set
            {
                _state.PrimaryParentCategoryId = value;
            }
        }

        string IProductCategoryStateProperties.PrimaryParentCategoryId
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).PrimaryParentCategoryId;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).PrimaryParentCategoryId = value;
            }
        }

		public virtual string CategoryName
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CategoryName"))
                {
                    return _state.CategoryName;
                }
                return null;
            }
            set
            {
                _state.CategoryName = value;
            }
        }

        string IProductCategoryStateProperties.CategoryName
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).CategoryName;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).CategoryName = value;
            }
        }

		public virtual string Description
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Description"))
                {
                    return _state.Description;
                }
                return null;
            }
            set
            {
                _state.Description = value;
            }
        }

        string IProductCategoryStateProperties.Description
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).Description;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).Description = value;
            }
        }

		public virtual string CategoryImageUrl
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CategoryImageUrl"))
                {
                    return _state.CategoryImageUrl;
                }
                return null;
            }
            set
            {
                _state.CategoryImageUrl = value;
            }
        }

        string IProductCategoryStateProperties.CategoryImageUrl
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).CategoryImageUrl;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).CategoryImageUrl = value;
            }
        }

		public virtual string DetailScreen
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DetailScreen"))
                {
                    return _state.DetailScreen;
                }
                return null;
            }
            set
            {
                _state.DetailScreen = value;
            }
        }

        string IProductCategoryStateProperties.DetailScreen
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).DetailScreen;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).DetailScreen = value;
            }
        }

		public virtual bool? ShowInSelect
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShowInSelect"))
                {
                    return _state.ShowInSelect;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.ShowInSelect = value.Value;
                }
            }
        }

        bool IProductCategoryStateProperties.ShowInSelect
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).ShowInSelect;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).ShowInSelect = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IProductCategoryStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IProductCategoryStateProperties).Active = value.Value;
                }
            }
        }

        bool IProductCategoryStateProperties.Active
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).Active;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IProductCategoryStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IProductCategoryStateProperties).Version = value.Value;
                }
            }
        }

        long IProductCategoryStateProperties.Version
        {
            get 
            {
                return (this._state as IProductCategoryStateProperties).Version;
            }
            set 
            {
                (this._state as IProductCategoryStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		string IGlobalIdentity<string>.GlobalId
		{
			get { return (_state as IProductCategoryState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IProductCategoryState).CreatedBy; }
            set { (_state as IProductCategoryState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IProductCategoryState).CreatedAt; }
            set { (_state as IProductCategoryState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IProductCategoryState).UpdatedBy; }
            set { (_state as IProductCategoryState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IProductCategoryState).UpdatedAt; }
            set { (_state as IProductCategoryState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IProductCategoryStateProperties).Version; }
		}

		#endregion

        bool IProductCategoryState.IsUnsaved
        {
            get { return this.Version == ProductCategoryState.VersionZero; }
        }

		void IProductCategoryState.When(IProductCategoryStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IProductCategoryState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IProductCategoryState.When(IProductCategoryStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IProductCategoryState.When(IProductCategoryStateDeleted e)
		{
            throw new NotSupportedException();
		}

		void IProductCategoryState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class ProductCategoryStateDtoWrapperCollection : StateDtoWrapperCollectionBase<ProductCategoryStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(ProductCategoryStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

