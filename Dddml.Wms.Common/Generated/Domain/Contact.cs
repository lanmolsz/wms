// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public class Contact
	{

		private PersonalName _personalName = new PersonalName();

		public virtual PersonalName PersonalName { 
			get { return this._personalName; } 
			internal set { _personalName = value; } 
		}

		private string _phoneNumber;

		public virtual string PhoneNumber { 
			get { return this._phoneNumber; } 
			internal set { _phoneNumber = value; } 
		}

		private string _address;

		public virtual string Address { 
			get { return this._address; } 
			internal set { _address = value; } 
		}


        #region  Flattened Properties


		public virtual string PersonalNameFirstName {
			get { return PersonalName.FirstName; }
			internal set { PersonalName.FirstName = value; }
		}

		public virtual string PersonalNameLastName {
			get { return PersonalName.LastName; }
			internal set { PersonalName.LastName = value; }
		}

        #endregion

		internal Contact ()
		{
		}

		public Contact (PersonalName personalName, string phoneNumber, string address)
		{
			this._personalName = personalName;
			this._phoneNumber = phoneNumber;
			this._address = address;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			Contact other = obj as Contact;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.PersonalName, other.PersonalName)
				&& Object.Equals (this.PhoneNumber, other.PhoneNumber)
				&& Object.Equals (this.Address, other.Address)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.PersonalName != null) {
				hash += 13 * this.PersonalName.GetHashCode ();
			}
			if (this.PhoneNumber != null) {
				hash += 13 * this.PhoneNumber.GetHashCode ();
			}
			if (this.Address != null) {
				hash += 13 * this.Address.GetHashCode ();
			}
			return hash;
		}

	}

}


