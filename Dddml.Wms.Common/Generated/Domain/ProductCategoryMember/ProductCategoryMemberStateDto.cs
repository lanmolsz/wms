// <autogenerated>
//   This file was generated by T4 code generator GenerateProductCategoryMemberDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ProductCategoryMember;

namespace Dddml.Wms.Domain.ProductCategoryMember
{

    public partial class ProductCategoryMemberStateDto : IProductCategoryMemberStateDto
    {

        public virtual ProductCategoryMemberIdDto ProductCategoryMemberId
        {
            get;
            set;
        }

        public virtual DateTime? ThruDate
        {
            get;
            set;
        }

        public virtual string Comments
        {
            get;
            set;
        }

        public virtual long? SequenceNum
        {
            get;
            set;
        }

        public virtual decimal? Quantity
        {
            get;
            set;
        }

        public virtual bool? Active
        {
            get;
            set;
        }

        public virtual long? Version
        {
            get;
            set;
        }

        public virtual string CreatedBy
        {
            get;
            set;
        }

        public virtual DateTime? CreatedAt
        {
            get;
            set;
        }

        public virtual string UpdatedBy
        {
            get;
            set;
        }

        public virtual DateTime? UpdatedAt
        {
            get;
            set;
        }

        public virtual IProductCategoryMemberState ToProductCategoryMemberState()
        {
            var state = new ProductCategoryMemberState(true);
            state.ProductCategoryMemberId = (this.ProductCategoryMemberId == null) ? null : this.ProductCategoryMemberId.ToProductCategoryMemberId();
            state.ThruDate = this.ThruDate;
            state.Comments = this.Comments;
            state.SequenceNum = this.SequenceNum;
            state.Quantity = this.Quantity;
            if (this.Active != null && this.Active.HasValue) { state.Active = this.Active.Value; }
            if (this.Version != null && this.Version.HasValue) { state.Version = this.Version.Value; }
            state.CreatedBy = this.CreatedBy;
            if (this.CreatedAt != null && this.CreatedAt.HasValue) { state.CreatedAt = this.CreatedAt.Value; }
            state.UpdatedBy = this.UpdatedBy;
            if (this.UpdatedAt != null && this.UpdatedAt.HasValue) { state.UpdatedAt = this.UpdatedAt.Value; }

            return state;
        }

    }

}

