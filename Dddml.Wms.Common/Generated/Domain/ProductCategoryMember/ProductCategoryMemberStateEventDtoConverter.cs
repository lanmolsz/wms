// <autogenerated>
//   This file was generated by T4 code generator GenerateProductCategoryMemberDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ProductCategoryMember;

namespace Dddml.Wms.Domain.ProductCategoryMember
{

    public class ProductCategoryMemberStateEventDtoConverter
    {
        public virtual ProductCategoryMemberStateCreatedOrMergePatchedOrDeletedDto ToProductCategoryMemberStateEventDto(IProductCategoryMemberStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IProductCategoryMemberStateCreated)stateEvent;
                return ToProductCategoryMemberStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IProductCategoryMemberStateMergePatched)stateEvent;
                return ToProductCategoryMemberStateMergePatchedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual ProductCategoryMemberStateCreatedDto ToProductCategoryMemberStateCreatedDto(IProductCategoryMemberStateCreated e)
        {
            var dto = new ProductCategoryMemberStateCreatedDto();
            dto.ProductCategoryMemberEventId = new ProductCategoryMemberEventIdDtoWrapper(e.ProductCategoryMemberEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.ThruDate = e.ThruDate;
            dto.Comments = e.Comments;
            dto.SequenceNum = e.SequenceNum;
            dto.Quantity = e.Quantity;
            dto.Active = e.Active;
            return dto;
        }

        public virtual ProductCategoryMemberStateMergePatchedDto ToProductCategoryMemberStateMergePatchedDto(IProductCategoryMemberStateMergePatched e)
        {
            var dto = new ProductCategoryMemberStateMergePatchedDto();
            dto.ProductCategoryMemberEventId = new ProductCategoryMemberEventIdDtoWrapper(e.ProductCategoryMemberEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.ThruDate = e.ThruDate;
            dto.Comments = e.Comments;
            dto.SequenceNum = e.SequenceNum;
            dto.Quantity = e.Quantity;
            dto.Active = e.Active;
            dto.IsPropertyThruDateRemoved = e.IsPropertyThruDateRemoved;
            dto.IsPropertyCommentsRemoved = e.IsPropertyCommentsRemoved;
            dto.IsPropertySequenceNumRemoved = e.IsPropertySequenceNumRemoved;
            dto.IsPropertyQuantityRemoved = e.IsPropertyQuantityRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }



    }


}

