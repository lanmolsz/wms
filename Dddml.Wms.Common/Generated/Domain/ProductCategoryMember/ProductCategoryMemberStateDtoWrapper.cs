// <autogenerated>
//   This file was generated by T4 code generator GenerateProductCategoryMemberDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ProductCategoryMember;

namespace Dddml.Wms.Domain.ProductCategoryMember
{

	public partial class ProductCategoryMemberStateDtoWrapper : StateDtoWrapperBase, IProductCategoryMemberStateDto, IProductCategoryMemberState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IProductCategoryMemberState _state;

        public ProductCategoryMemberStateDtoWrapper()
        {
            this._state = new ProductCategoryMemberState();
        }

		public ProductCategoryMemberStateDtoWrapper(IProductCategoryMemberState state)
		{
            this._state = state;
		}

		public IProductCategoryMemberState ToProductCategoryMemberState()
		{
			return this._state;
		}

		public virtual ProductCategoryMemberId ProductCategoryMemberId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductCategoryMemberId"))
                {
                    return _state.ProductCategoryMemberId;
                }
                return null;
            }
            set
            {
                _state.ProductCategoryMemberId = value;
            }
        }

        ProductCategoryMemberId IProductCategoryMemberStateProperties.ProductCategoryMemberId
        {
            get 
            {
                return (this._state as IProductCategoryMemberStateProperties).ProductCategoryMemberId;
            }
            set 
            {
                (this._state as IProductCategoryMemberStateProperties).ProductCategoryMemberId = value;
            }
        }

		public virtual DateTime? ThruDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ThruDate"))
                {
                    return _state.ThruDate;
                }
                return null;
            }
            set
            {
                _state.ThruDate = value;
            }
        }

        DateTime? IProductCategoryMemberStateProperties.ThruDate
        {
            get 
            {
                return (this._state as IProductCategoryMemberStateProperties).ThruDate;
            }
            set 
            {
                (this._state as IProductCategoryMemberStateProperties).ThruDate = value;
            }
        }

		public virtual string Comments
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Comments"))
                {
                    return _state.Comments;
                }
                return null;
            }
            set
            {
                _state.Comments = value;
            }
        }

        string IProductCategoryMemberStateProperties.Comments
        {
            get 
            {
                return (this._state as IProductCategoryMemberStateProperties).Comments;
            }
            set 
            {
                (this._state as IProductCategoryMemberStateProperties).Comments = value;
            }
        }

		public virtual long? SequenceNum
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SequenceNum"))
                {
                    return _state.SequenceNum;
                }
                return null;
            }
            set
            {
                _state.SequenceNum = value;
            }
        }

        long? IProductCategoryMemberStateProperties.SequenceNum
        {
            get 
            {
                return (this._state as IProductCategoryMemberStateProperties).SequenceNum;
            }
            set 
            {
                (this._state as IProductCategoryMemberStateProperties).SequenceNum = value;
            }
        }

		public virtual decimal? Quantity
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Quantity"))
                {
                    return _state.Quantity;
                }
                return null;
            }
            set
            {
                _state.Quantity = value;
            }
        }

        decimal? IProductCategoryMemberStateProperties.Quantity
        {
            get 
            {
                return (this._state as IProductCategoryMemberStateProperties).Quantity;
            }
            set 
            {
                (this._state as IProductCategoryMemberStateProperties).Quantity = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IProductCategoryMemberStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IProductCategoryMemberStateProperties).Active = value.Value;
                }
            }
        }

        bool IProductCategoryMemberStateProperties.Active
        {
            get 
            {
                return (this._state as IProductCategoryMemberStateProperties).Active;
            }
            set 
            {
                (this._state as IProductCategoryMemberStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IProductCategoryMemberStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IProductCategoryMemberStateProperties).Version = value.Value;
                }
            }
        }

        long IProductCategoryMemberStateProperties.Version
        {
            get 
            {
                return (this._state as IProductCategoryMemberStateProperties).Version;
            }
            set 
            {
                (this._state as IProductCategoryMemberStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		ProductCategoryMemberId IGlobalIdentity<ProductCategoryMemberId>.GlobalId
		{
			get { return (_state as IProductCategoryMemberState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IProductCategoryMemberState).CreatedBy; }
            set { (_state as IProductCategoryMemberState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IProductCategoryMemberState).CreatedAt; }
            set { (_state as IProductCategoryMemberState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IProductCategoryMemberState).UpdatedBy; }
            set { (_state as IProductCategoryMemberState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IProductCategoryMemberState).UpdatedAt; }
            set { (_state as IProductCategoryMemberState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IProductCategoryMemberStateProperties).Version; }
		}

		#endregion

        bool IProductCategoryMemberState.IsUnsaved
        {
            get { return this.Version == ProductCategoryMemberState.VersionZero; }
        }

		void IProductCategoryMemberState.When(IProductCategoryMemberStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IProductCategoryMemberState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IProductCategoryMemberState.When(IProductCategoryMemberStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IProductCategoryMemberState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class ProductCategoryMemberStateDtoWrapperCollection : StateDtoWrapperCollectionBase<ProductCategoryMemberStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(ProductCategoryMemberStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

