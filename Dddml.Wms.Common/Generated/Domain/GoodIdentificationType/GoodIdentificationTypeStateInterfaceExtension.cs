// <autogenerated>
//   This file was generated by T4 code generator GenerateGoodIdentificationTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.GoodIdentificationType;

namespace Dddml.Wms.Domain.GoodIdentificationType
{

	public static partial class GoodIdentificationTypeStateInterfaceExtension
	{

        public static IGoodIdentificationTypeCommand ToCreateOrMergePatchGoodIdentificationType<TCreateGoodIdentificationType, TMergePatchGoodIdentificationType>(this IGoodIdentificationTypeState state)
            where TCreateGoodIdentificationType : ICreateGoodIdentificationType, new()
            where TMergePatchGoodIdentificationType : IMergePatchGoodIdentificationType, new()
        {
            bool bUnsaved = ((IGoodIdentificationTypeState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateGoodIdentificationType<TCreateGoodIdentificationType>();
            }
            else 
            {
                return state.ToMergePatchGoodIdentificationType<TMergePatchGoodIdentificationType>();
            }
        }

        public static TDeleteGoodIdentificationType ToDeleteGoodIdentificationType<TDeleteGoodIdentificationType>(this IGoodIdentificationTypeState state)
            where TDeleteGoodIdentificationType : IDeleteGoodIdentificationType, new()
        {
            var cmd = new TDeleteGoodIdentificationType();
            cmd.GoodIdentificationTypeId = state.GoodIdentificationTypeId;
            cmd.Version = ((IGoodIdentificationTypeStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchGoodIdentificationType ToMergePatchGoodIdentificationType<TMergePatchGoodIdentificationType>(this IGoodIdentificationTypeState state)
            where TMergePatchGoodIdentificationType : IMergePatchGoodIdentificationType, new()
        {
            var cmd = new TMergePatchGoodIdentificationType();

            cmd.Version = ((IGoodIdentificationTypeStateProperties)state).Version;

            cmd.GoodIdentificationTypeId = state.GoodIdentificationTypeId;
            cmd.ParentTypeId = state.ParentTypeId;
            cmd.HasTable = state.HasTable;
            cmd.Description = state.Description;
            cmd.Active = ((IGoodIdentificationTypeStateProperties)state).Active;
            
            if (state.ParentTypeId == null) { cmd.IsPropertyParentTypeIdRemoved = true; }
            if (state.HasTable == null) { cmd.IsPropertyHasTableRemoved = true; }
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            return cmd;
        }

        public static TCreateGoodIdentificationType ToCreateGoodIdentificationType<TCreateGoodIdentificationType>(this IGoodIdentificationTypeState state)
            where TCreateGoodIdentificationType : ICreateGoodIdentificationType, new()
        {
            var cmd = new TCreateGoodIdentificationType();

            cmd.Version = ((IGoodIdentificationTypeStateProperties)state).Version;

            cmd.GoodIdentificationTypeId = state.GoodIdentificationTypeId;
            cmd.ParentTypeId = state.ParentTypeId;
            cmd.HasTable = state.HasTable;
            cmd.Description = state.Description;
            cmd.Active = ((IGoodIdentificationTypeStateProperties)state).Active;
            return cmd;
        }
		

	}

}

