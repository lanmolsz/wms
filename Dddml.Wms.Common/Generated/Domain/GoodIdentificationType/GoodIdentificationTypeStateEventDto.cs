// <autogenerated>
//   This file was generated by T4 code generator GenerateGoodIdentificationTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.GoodIdentificationType;

namespace Dddml.Wms.Domain.GoodIdentificationType
{

	public abstract class GoodIdentificationTypeStateEventDtoBase : IEventDto, IGoodIdentificationTypeStateCreated, IGoodIdentificationTypeStateMergePatched, IGoodIdentificationTypeStateDeleted
	{

        private GoodIdentificationTypeEventId _goodIdentificationTypeEventId;

		protected internal virtual GoodIdentificationTypeEventId GoodIdentificationTypeEventId 
        {
            get 
            {
                if (_goodIdentificationTypeEventId == null) { _goodIdentificationTypeEventId = new GoodIdentificationTypeEventId(); }
                return _goodIdentificationTypeEventId;
            }
            set
            {
                _goodIdentificationTypeEventId = value;
            }
        }

        public virtual string GoodIdentificationTypeId
        {
            get { return GoodIdentificationTypeEventId.GoodIdentificationTypeId; }
            set { GoodIdentificationTypeEventId.GoodIdentificationTypeId = value; }
        }

        public virtual long Version
        {
            get { return GoodIdentificationTypeEventId.Version; }
            set { GoodIdentificationTypeEventId.Version = value; }
        }

		public virtual string ParentTypeId { get; set; }

		public virtual string HasTable { get; set; }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		GoodIdentificationTypeEventId IGlobalIdentity<GoodIdentificationTypeEventId>.GlobalId {
			get 
			{
				return this.GoodIdentificationTypeEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IGoodIdentificationTypeEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyParentTypeIdRemoved { get; set; }

        bool IGoodIdentificationTypeStateMergePatched.IsPropertyParentTypeIdRemoved
        {
            get 
            {
                var b = this.IsPropertyParentTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyParentTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyHasTableRemoved { get; set; }

        bool IGoodIdentificationTypeStateMergePatched.IsPropertyHasTableRemoved
        {
            get 
            {
                var b = this.IsPropertyHasTableRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyHasTableRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IGoodIdentificationTypeStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IGoodIdentificationTypeStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        GoodIdentificationTypeEventId IGoodIdentificationTypeEvent.GoodIdentificationTypeEventId
        {
            get { return this.GoodIdentificationTypeEventId; }
        }

        protected GoodIdentificationTypeStateEventDtoBase()
        {
        }

        protected GoodIdentificationTypeStateEventDtoBase(GoodIdentificationTypeEventId stateEventId)
        {
            this.GoodIdentificationTypeEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IEventDto.EventType 
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}


    public class GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto : GoodIdentificationTypeStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetEventType()
        {
            return this._eventType;
        }

    }



	public class GoodIdentificationTypeStateCreatedDto : GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public GoodIdentificationTypeStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class GoodIdentificationTypeStateMergePatchedDto : GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public GoodIdentificationTypeStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class GoodIdentificationTypeStateDeletedDto : GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public GoodIdentificationTypeStateDeletedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IGoodIdentificationTypeStateCreated>, IEnumerable<IGoodIdentificationTypeStateMergePatched>, IEnumerable<IGoodIdentificationTypeStateDeleted>
    {
        private List<GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IGoodIdentificationTypeStateCreated> IEnumerable<IGoodIdentificationTypeStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IGoodIdentificationTypeStateMergePatched> IEnumerable<IGoodIdentificationTypeStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IGoodIdentificationTypeStateDeleted> IEnumerable<IGoodIdentificationTypeStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddGoodIdentificationTypeEvent(IGoodIdentificationTypeStateCreated e)
        {
            _innerStateEvents.Add((GoodIdentificationTypeStateCreatedDto)e);
        }

        public void AddGoodIdentificationTypeEvent(IGoodIdentificationTypeEvent e)
        {
            _innerStateEvents.Add((GoodIdentificationTypeStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddGoodIdentificationTypeEvent(IGoodIdentificationTypeStateDeleted e)
        {
            _innerStateEvents.Add((GoodIdentificationTypeStateDeletedDto)e);
        }

    }


}

