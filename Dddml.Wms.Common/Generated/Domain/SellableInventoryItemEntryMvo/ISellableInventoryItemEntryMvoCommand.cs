// <autogenerated>
//   This file was generated by T4 code generator GenerateSellableInventoryItemEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.SellableInventoryItemEntryMvo;
using Dddml.Wms.Domain.SellableInventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.SellableInventoryItemEntryMvo
{
	public interface ISellableInventoryItemEntryMvoCommand : IAggregateCommand<SellableInventoryItemEntryId, long>, ICommandDto
	{
		long SellableInventoryItemVersion { get; set; }

		SellableInventoryItemEntryId SellableInventoryItemEntryId { get; set; }

	}


	public interface ICreateOrMergePatchOrDeleteSellableInventoryItemEntryMvo : ISellableInventoryItemEntryMvoCommand
	{

		decimal? QuantitySellable { get; set; }

		InventoryPRTriggeredId SourceEventId { get; set; }

		long? Version { get; set; }

		bool? Active { get; set; }

		decimal? SellableInventoryItemQuantitySellable { get; set; }

		string SellableInventoryItemCreatedBy { get; set; }

		DateTime? SellableInventoryItemCreatedAt { get; set; }

		string SellableInventoryItemUpdatedBy { get; set; }

		DateTime? SellableInventoryItemUpdatedAt { get; set; }


	}

	public interface ICreateSellableInventoryItemEntryMvo : ICreateOrMergePatchOrDeleteSellableInventoryItemEntryMvo
	{
	}

	public interface IMergePatchSellableInventoryItemEntryMvo : ICreateOrMergePatchOrDeleteSellableInventoryItemEntryMvo
	{

		bool IsPropertyQuantitySellableRemoved { get; set; }

		bool IsPropertySourceEventIdRemoved { get; set; }

		bool IsPropertyVersionRemoved { get; set; }

		bool IsPropertyActiveRemoved { get; set; }

		bool IsPropertySellableInventoryItemQuantitySellableRemoved { get; set; }

		bool IsPropertySellableInventoryItemCreatedByRemoved { get; set; }

		bool IsPropertySellableInventoryItemCreatedAtRemoved { get; set; }

		bool IsPropertySellableInventoryItemUpdatedByRemoved { get; set; }

		bool IsPropertySellableInventoryItemUpdatedAtRemoved { get; set; }


	}

	public interface IDeleteSellableInventoryItemEntryMvo : ICreateOrMergePatchOrDeleteSellableInventoryItemEntryMvo
	{
	}


}

