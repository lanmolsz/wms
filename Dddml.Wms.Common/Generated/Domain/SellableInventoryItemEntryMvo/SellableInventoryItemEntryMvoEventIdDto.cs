// <autogenerated>
//   This file was generated by T4 code generator GenerateSellableInventoryItemEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.SellableInventoryItemEntryMvo;
using Dddml.Wms.Domain.SellableInventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.SellableInventoryItemEntryMvo
{

	public class SellableInventoryItemEntryMvoEventIdDto
	{

		public SellableInventoryItemEntryMvoEventIdDto()
		{
		}

        public virtual SellableInventoryItemEntryMvoEventId ToSellableInventoryItemEntryMvoEventId()
        {
            SellableInventoryItemEntryMvoEventId v = new SellableInventoryItemEntryMvoEventId();
            v.SellableInventoryItemEntryId = this.SellableInventoryItemEntryId.ToSellableInventoryItemEntryId();
            v.SellableInventoryItemVersion = this.SellableInventoryItemVersion;
            return v;
        }

		private SellableInventoryItemEntryIdDto _sellableInventoryItemEntryId = new SellableInventoryItemEntryIdDto();

		public virtual SellableInventoryItemEntryIdDto SellableInventoryItemEntryId { 
			get { return this._sellableInventoryItemEntryId; } 
			set { this._sellableInventoryItemEntryId = value; } 
		}

		public virtual long SellableInventoryItemVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			SellableInventoryItemEntryMvoEventIdDto other = obj as SellableInventoryItemEntryMvoEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.SellableInventoryItemEntryId, other.SellableInventoryItemEntryId)
				&& Object.Equals (this.SellableInventoryItemVersion, other.SellableInventoryItemVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.SellableInventoryItemEntryId != null) {
				hash += 13 * this.SellableInventoryItemEntryId.GetHashCode ();
			}
			if (this.SellableInventoryItemVersion != null) {
				hash += 13 * this.SellableInventoryItemVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


