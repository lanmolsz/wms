// <autogenerated>
//   This file was generated by T4 code generator GenerateSellableInventoryItemEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.SellableInventoryItemEntryMvo;
using Dddml.Wms.Domain.SellableInventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.SellableInventoryItemEntryMvo
{

	public abstract class SellableInventoryItemEntryMvoStateEventBase : ISellableInventoryItemEntryMvoStateEvent
	{

		public virtual SellableInventoryItemEntryMvoEventId SellableInventoryItemEntryMvoEventId { get; set; }

        public virtual SellableInventoryItemEntryId SellableInventoryItemEntryId
        {
            get { return SellableInventoryItemEntryMvoEventId.SellableInventoryItemEntryId; }
            set { SellableInventoryItemEntryMvoEventId.SellableInventoryItemEntryId = value; }
        }

		public virtual decimal? SellableQuantity { get; set; }

		public virtual InventoryPRTriggeredId SourceEventId { get; set; }

		public virtual long? Version { get; set; }

		public virtual decimal? SellableInventoryItemSellableQuantity { get; set; }

		public virtual string SellableInventoryItemCreatedBy { get; set; }

		public virtual DateTime? SellableInventoryItemCreatedAt { get; set; }

		public virtual string SellableInventoryItemUpdatedBy { get; set; }

		public virtual DateTime? SellableInventoryItemUpdatedAt { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		SellableInventoryItemEntryMvoEventId IGlobalIdentity<SellableInventoryItemEntryMvoEventId>.GlobalId {
			get
			{
				return this.SellableInventoryItemEntryMvoEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool ISellableInventoryItemEntryMvoStateEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected SellableInventoryItemEntryMvoStateEventBase()
        {
        }

        protected SellableInventoryItemEntryMvoStateEventBase(SellableInventoryItemEntryMvoEventId stateEventId)
        {
            this.SellableInventoryItemEntryMvoEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class SellableInventoryItemEntryMvoStateCreated : SellableInventoryItemEntryMvoStateEventBase, ISellableInventoryItemEntryMvoStateCreated
	{
		public SellableInventoryItemEntryMvoStateCreated () : this(new SellableInventoryItemEntryMvoEventId())
		{
		}

		public SellableInventoryItemEntryMvoStateCreated (SellableInventoryItemEntryMvoEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class SellableInventoryItemEntryMvoStateMergePatched : SellableInventoryItemEntryMvoStateEventBase, ISellableInventoryItemEntryMvoStateMergePatched
	{
		public virtual bool IsPropertySellableQuantityRemoved { get; set; }

		public virtual bool IsPropertySourceEventIdRemoved { get; set; }

		public virtual bool IsPropertyVersionRemoved { get; set; }

		public virtual bool IsPropertySellableInventoryItemSellableQuantityRemoved { get; set; }

		public virtual bool IsPropertySellableInventoryItemCreatedByRemoved { get; set; }

		public virtual bool IsPropertySellableInventoryItemCreatedAtRemoved { get; set; }

		public virtual bool IsPropertySellableInventoryItemUpdatedByRemoved { get; set; }

		public virtual bool IsPropertySellableInventoryItemUpdatedAtRemoved { get; set; }


		public SellableInventoryItemEntryMvoStateMergePatched ()
		{
		}

		public SellableInventoryItemEntryMvoStateMergePatched (SellableInventoryItemEntryMvoEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}




}

