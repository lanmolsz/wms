// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Order
{

	public abstract class OrderItemShipGroupAssociationStateEventBase : IOrderItemShipGroupAssociationStateEvent
	{

		public virtual OrderItemShipGroupAssociationEventId OrderItemShipGroupAssociationEventId { get; set; }

        public virtual string OrderItemSeqId
        {
            get { return OrderItemShipGroupAssociationEventId.OrderItemSeqId; }
            set { OrderItemShipGroupAssociationEventId.OrderItemSeqId = value; }
        }

		public virtual decimal? Quantity { get; set; }

		public virtual decimal? CancelQuantity { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		OrderItemShipGroupAssociationEventId IGlobalIdentity<OrderItemShipGroupAssociationEventId>.GlobalId {
			get
			{
				return this.OrderItemShipGroupAssociationEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IOrderItemShipGroupAssociationStateEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected OrderItemShipGroupAssociationStateEventBase()
        {
        }

        protected OrderItemShipGroupAssociationStateEventBase(OrderItemShipGroupAssociationEventId stateEventId)
        {
            this.OrderItemShipGroupAssociationEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class OrderItemShipGroupAssociationStateCreated : OrderItemShipGroupAssociationStateEventBase, IOrderItemShipGroupAssociationStateCreated
	{
		public OrderItemShipGroupAssociationStateCreated () : this(new OrderItemShipGroupAssociationEventId())
		{
		}

		public OrderItemShipGroupAssociationStateCreated (OrderItemShipGroupAssociationEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class OrderItemShipGroupAssociationStateMergePatched : OrderItemShipGroupAssociationStateEventBase, IOrderItemShipGroupAssociationStateMergePatched
	{
		public virtual bool IsPropertyQuantityRemoved { get; set; }

		public virtual bool IsPropertyCancelQuantityRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public OrderItemShipGroupAssociationStateMergePatched ()
		{
		}

		public OrderItemShipGroupAssociationStateMergePatched (OrderItemShipGroupAssociationEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class OrderItemShipGroupAssociationStateRemoved : OrderItemShipGroupAssociationStateEventBase, IOrderItemShipGroupAssociationStateRemoved
	{
		public OrderItemShipGroupAssociationStateRemoved ()
		{
		}

		public OrderItemShipGroupAssociationStateRemoved (OrderItemShipGroupAssociationEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }



	}



}

