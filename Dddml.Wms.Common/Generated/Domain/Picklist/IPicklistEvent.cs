// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Picklist;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Picklist
{
	public interface IPicklistEvent : IEvent, IEventDto, IGlobalIdentity<PicklistEventId>, ICreated<string>
	{
		PicklistEventId PicklistEventId { get; }

        bool ReadOnly { get; set; }

	}

    public interface IPicklistStateEvent : IPicklistEvent
    {
		string Description { get; set; }

		string FacilityId { get; set; }

		string ShipmentMethodTypeId { get; set; }

		string StatusId { get; set; }

		DateTime? PicklistDate { get; set; }

		long? PickwaveId { get; set; }

		bool? Active { get; set; }

    }
   
	public interface IPicklistStateCreated : IPicklistStateEvent
	{
		IEnumerable<IPicklistRoleStateCreated> PicklistRoleEvents { get; }
		
		void AddPicklistRoleEvent(IPicklistRoleStateCreated e);

		IPicklistRoleStateCreated NewPicklistRoleStateCreated(PartyRoleId partyRoleId);

	
	}


	public interface IPicklistStateMergePatched : IPicklistStateEvent
	{
		bool IsPropertyDescriptionRemoved { get; set; }

		bool IsPropertyFacilityIdRemoved { get; set; }

		bool IsPropertyShipmentMethodTypeIdRemoved { get; set; }

		bool IsPropertyStatusIdRemoved { get; set; }

		bool IsPropertyPicklistDateRemoved { get; set; }

		bool IsPropertyPickwaveIdRemoved { get; set; }

		bool IsPropertyActiveRemoved { get; set; }

		IEnumerable<IPicklistRoleEvent> PicklistRoleEvents { get; }
		
		void AddPicklistRoleEvent(IPicklistRoleEvent e);

		IPicklistRoleStateCreated NewPicklistRoleStateCreated(PartyRoleId partyRoleId);

		IPicklistRoleStateMergePatched NewPicklistRoleStateMergePatched(PartyRoleId partyRoleId);

		IPicklistRoleStateRemoved NewPicklistRoleStateRemoved(PartyRoleId partyRoleId);


	}

	public interface IPicklistStateDeleted : IPicklistStateEvent
	{
		IEnumerable<IPicklistRoleStateRemoved> PicklistRoleEvents { get; }
		
		void AddPicklistRoleEvent(IPicklistRoleStateRemoved e);
		
		IPicklistRoleStateRemoved NewPicklistRoleStateRemoved(PartyRoleId partyRoleId);

	}


}

