// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Picklist;
using Dddml.Wms.Domain.PartyRole;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.Picklist
{

	public partial interface IPicklistApplicationService : IApplicationService
	{
		void When(ICreatePicklist c);

		void When(IMergePatchPicklist c);

		void When(IDeletePicklist c);

 		IPicklistState Get(string picklistId);

        IEnumerable<IPicklistState> GetAll(int firstResult, int maxResults);

        IEnumerable<IPicklistState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IPicklistState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IPicklistState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        IPicklistEvent GetEvent(string picklistId, long version);

        IPicklistState GetHistoryState(string picklistId, long version);

        IPicklistRoleState GetPicklistRole(string picklistId, PartyRoleId partyRoleId);

        IEnumerable<IPicklistRoleState> GetPicklistRoles(string picklistId);


	}

    public static partial class PicklistApplicationServiceExtension
    {
        public static IEnumerable<IPicklistState> GetByProperty(this IPicklistApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IPicklistState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IPicklistState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<IPicklistState> GetByProperty<TPropertyType>(this IPicklistApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IPicklistState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IPicklistState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

