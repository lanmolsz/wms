// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Picklist;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Picklist
{

	public static partial class PicklistRoleStateInterfaceExtension
	{

        public static IPicklistRoleCommand ToCreateOrMergePatchPicklistRole<TCreatePicklistRole, TMergePatchPicklistRole>(this IPicklistRoleState state)
            where TCreatePicklistRole : ICreatePicklistRole, new()
            where TMergePatchPicklistRole : IMergePatchPicklistRole, new()
        {
            bool bUnsaved = ((IPicklistRoleState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreatePicklistRole<TCreatePicklistRole>();
            }
            else 
            {
                return state.ToMergePatchPicklistRole<TMergePatchPicklistRole>();
            }
        }

        public static TRemovePicklistRole ToRemovePicklistRole<TRemovePicklistRole>(this IPicklistRoleState state)
            where TRemovePicklistRole : IRemovePicklistRole, new()
        {
            var cmd = new TRemovePicklistRole();
            cmd.PartyRoleId = state.PartyRoleId;
            return cmd;
        }

        public static TMergePatchPicklistRole ToMergePatchPicklistRole<TMergePatchPicklistRole>(this IPicklistRoleState state)
            where TMergePatchPicklistRole : IMergePatchPicklistRole, new()
        {
            var cmd = new TMergePatchPicklistRole();

            cmd.PartyRoleId = state.PartyRoleId;
            cmd.Active = ((IPicklistRoleStateProperties)state).Active;
            cmd.PicklistId = state.PicklistId;
            
            return cmd;
        }

        public static TCreatePicklistRole ToCreatePicklistRole<TCreatePicklistRole>(this IPicklistRoleState state)
            where TCreatePicklistRole : ICreatePicklistRole, new()
        {
            var cmd = new TCreatePicklistRole();

            cmd.PartyRoleId = state.PartyRoleId;
            cmd.Active = ((IPicklistRoleStateProperties)state).Active;
            cmd.PicklistId = state.PicklistId;
            return cmd;
        }
		

	}

}

