// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistBinDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PicklistBin;

namespace Dddml.Wms.Domain.PicklistBin
{

	public static partial class PicklistItemStateInterfaceExtension
	{

        public static IPicklistItemCommand ToCreateOrMergePatchPicklistItem<TCreatePicklistItem, TMergePatchPicklistItem>(this IPicklistItemState state)
            where TCreatePicklistItem : ICreatePicklistItem, new()
            where TMergePatchPicklistItem : IMergePatchPicklistItem, new()
        {
            bool bUnsaved = ((IPicklistItemState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreatePicklistItem<TCreatePicklistItem>();
            }
            else 
            {
                return state.ToMergePatchPicklistItem<TMergePatchPicklistItem>();
            }
        }

        public static TRemovePicklistItem ToRemovePicklistItem<TRemovePicklistItem>(this IPicklistItemState state)
            where TRemovePicklistItem : IRemovePicklistItem, new()
        {
            var cmd = new TRemovePicklistItem();
            cmd.PicklistItemOrderShipGrpInvId = state.PicklistItemOrderShipGrpInvId;
            return cmd;
        }

        public static TMergePatchPicklistItem ToMergePatchPicklistItem<TMergePatchPicklistItem>(this IPicklistItemState state)
            where TMergePatchPicklistItem : IMergePatchPicklistItem, new()
        {
            var cmd = new TMergePatchPicklistItem();

            cmd.PicklistItemOrderShipGrpInvId = state.PicklistItemOrderShipGrpInvId;
            cmd.ItemStatusId = state.ItemStatusId;
            cmd.Quantity = state.Quantity;
            cmd.Active = ((IPicklistItemStateProperties)state).Active;
            cmd.PicklistBinId = state.PicklistBinId;
            
            if (state.ItemStatusId == null) { cmd.IsPropertyItemStatusIdRemoved = true; }
            if (state.Quantity == null) { cmd.IsPropertyQuantityRemoved = true; }
            return cmd;
        }

        public static TCreatePicklistItem ToCreatePicklistItem<TCreatePicklistItem>(this IPicklistItemState state)
            where TCreatePicklistItem : ICreatePicklistItem, new()
        {
            var cmd = new TCreatePicklistItem();

            cmd.PicklistItemOrderShipGrpInvId = state.PicklistItemOrderShipGrpInvId;
            cmd.ItemStatusId = state.ItemStatusId;
            cmd.Quantity = state.Quantity;
            cmd.Active = ((IPicklistItemStateProperties)state).Active;
            cmd.PicklistBinId = state.PicklistBinId;
            return cmd;
        }
		

	}

}

