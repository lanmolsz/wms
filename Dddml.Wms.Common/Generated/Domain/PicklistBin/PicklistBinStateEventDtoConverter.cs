// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistBinDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PicklistBin;

namespace Dddml.Wms.Domain.PicklistBin
{

    public class PicklistBinStateEventDtoConverter
    {
        public virtual PicklistBinStateCreatedOrMergePatchedOrDeletedDto ToPicklistBinStateEventDto(IPicklistBinStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IPicklistBinStateCreated)stateEvent;
                return ToPicklistBinStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IPicklistBinStateMergePatched)stateEvent;
                return ToPicklistBinStateMergePatchedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.Deleted)
            {
                var e = (IPicklistBinStateDeleted)stateEvent;
                return ToPicklistBinStateDeletedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual PicklistBinStateCreatedDto ToPicklistBinStateCreatedDto(IPicklistBinStateCreated e)
        {
            var dto = new PicklistBinStateCreatedDto();
            dto.PicklistBinEventId = e.PicklistBinEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.PicklistId = e.PicklistId;
            dto.BinLocationNumber = e.BinLocationNumber;
            dto.PrimaryOrderId = e.PrimaryOrderId;
            dto.PrimaryShipGroupSeqId = e.PrimaryShipGroupSeqId;
            dto.Active = e.Active;
            var picklistItemEvents = new List<PicklistItemStateCreatedDto>();
            foreach (var ee in e.PicklistItemEvents)
            {
                PicklistItemStateCreatedDto eeDto = PicklistItemStateEventDtoConverter.ToPicklistItemStateCreatedDto(ee);
                picklistItemEvents.Add(eeDto);
            }
            dto.PicklistItemEvents = picklistItemEvents.ToArray();

            return dto;
        }

        public virtual PicklistBinStateMergePatchedDto ToPicklistBinStateMergePatchedDto(IPicklistBinStateMergePatched e)
        {
            var dto = new PicklistBinStateMergePatchedDto();
            dto.PicklistBinEventId = e.PicklistBinEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.PicklistId = e.PicklistId;
            dto.BinLocationNumber = e.BinLocationNumber;
            dto.PrimaryOrderId = e.PrimaryOrderId;
            dto.PrimaryShipGroupSeqId = e.PrimaryShipGroupSeqId;
            dto.Active = e.Active;
            dto.IsPropertyPicklistIdRemoved = e.IsPropertyPicklistIdRemoved;
            dto.IsPropertyBinLocationNumberRemoved = e.IsPropertyBinLocationNumberRemoved;
            dto.IsPropertyPrimaryOrderIdRemoved = e.IsPropertyPrimaryOrderIdRemoved;
            dto.IsPropertyPrimaryShipGroupSeqIdRemoved = e.IsPropertyPrimaryShipGroupSeqIdRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;
            var picklistItemEvents = new List<PicklistItemStateCreatedOrMergePatchedOrRemovedDto>();
            foreach (var ee in e.PicklistItemEvents)
            {
                PicklistItemStateCreatedOrMergePatchedOrRemovedDto eeDto = PicklistItemStateEventDtoConverter.ToPicklistItemStateEventDto(ee);
                picklistItemEvents.Add(eeDto);
            }
            dto.PicklistItemEvents = picklistItemEvents.ToArray();


            return dto;
        }


        public virtual PicklistBinStateDeletedDto ToPicklistBinStateDeletedDto(IPicklistBinStateDeleted e)
        {
            var dto = new PicklistBinStateDeletedDto();
            dto.PicklistBinEventId = e.PicklistBinEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            var picklistItemEvents = new List<PicklistItemStateRemovedDto>();
            foreach (var ee in e.PicklistItemEvents)
            {
                PicklistItemStateRemovedDto eeDto = PicklistItemStateEventDtoConverter.ToPicklistItemStateRemovedDto(ee);
                picklistItemEvents.Add(eeDto);
            }
            dto.PicklistItemEvents = picklistItemEvents.ToArray();


            return dto;
        }

        protected virtual PicklistItemStateEventDtoConverter PicklistItemStateEventDtoConverter
        {
            get
            {
                return new PicklistItemStateEventDtoConverter();
            }
        }


    }


}

