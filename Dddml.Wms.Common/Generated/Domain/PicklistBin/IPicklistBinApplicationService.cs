// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistBinDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PicklistBin;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.PicklistBin
{

	public partial interface IPicklistBinApplicationService : IApplicationService
	{
		void When(ICreatePicklistBin c);

		void When(IMergePatchPicklistBin c);

		void When(IDeletePicklistBin c);

 		IPicklistBinState Get(string picklistBinId);

        IEnumerable<IPicklistBinState> GetAll(int firstResult, int maxResults);

        IEnumerable<IPicklistBinState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IPicklistBinState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IPicklistBinState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        IPicklistBinEvent GetEvent(string picklistBinId, long version);

        IPicklistBinState GetHistoryState(string picklistBinId, long version);

        IPicklistItemState GetPicklistItem(string picklistBinId, PicklistItemOrderShipGrpInvId picklistItemOrderShipGrpInvId);

        IEnumerable<IPicklistItemState> GetPicklistItems(string picklistBinId);


	}

    public static partial class PicklistBinApplicationServiceExtension
    {
        public static IEnumerable<IPicklistBinState> GetByProperty(this IPicklistBinApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IPicklistBinState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IPicklistBinState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<IPicklistBinState> GetByProperty<TPropertyType>(this IPicklistBinApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IPicklistBinState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IPicklistBinState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

