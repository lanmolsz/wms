// <autogenerated>
//   This file was generated by T4 code generator GenerateContactMechDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ContactMech;

namespace Dddml.Wms.Domain.ContactMech
{

	public partial class ContactMechStateDtoWrapper : StateDtoWrapperBase, IContactMechStateDto, IContactMechState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IContactMechState _state;

        public ContactMechStateDtoWrapper()
        {
            this._state = new ContactMechState();
        }

		public ContactMechStateDtoWrapper(IContactMechState state)
		{
            this._state = state;
		}

		public IContactMechState ToContactMechState()
		{
			return this._state;
		}

		public virtual string ContactMechId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ContactMechId"))
                {
                    return _state.ContactMechId;
                }
                return null;
            }
            set
            {
                _state.ContactMechId = value;
            }
        }

        string IContactMechStateProperties.ContactMechId
        {
            get 
            {
                return (this._state as IContactMechStateProperties).ContactMechId;
            }
            set 
            {
                (this._state as IContactMechStateProperties).ContactMechId = value;
            }
        }

		public virtual string ContactMechTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ContactMechTypeId"))
                {
                    return _state.ContactMechTypeId;
                }
                return null;
            }
            set
            {
                _state.ContactMechTypeId = value;
            }
        }

        string IContactMechStateProperties.ContactMechTypeId
        {
            get 
            {
                return (this._state as IContactMechStateProperties).ContactMechTypeId;
            }
            set 
            {
                (this._state as IContactMechStateProperties).ContactMechTypeId = value;
            }
        }

		public virtual string InfoString
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InfoString"))
                {
                    return _state.InfoString;
                }
                return null;
            }
            set
            {
                _state.InfoString = value;
            }
        }

        string IContactMechStateProperties.InfoString
        {
            get 
            {
                return (this._state as IContactMechStateProperties).InfoString;
            }
            set 
            {
                (this._state as IContactMechStateProperties).InfoString = value;
            }
        }

		public virtual string ToName
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ToName"))
                {
                    return _state.ToName;
                }
                return null;
            }
            set
            {
                _state.ToName = value;
            }
        }

        string IContactMechStateProperties.ToName
        {
            get 
            {
                return (this._state as IContactMechStateProperties).ToName;
            }
            set 
            {
                (this._state as IContactMechStateProperties).ToName = value;
            }
        }

		public virtual string AttnName
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AttnName"))
                {
                    return _state.AttnName;
                }
                return null;
            }
            set
            {
                _state.AttnName = value;
            }
        }

        string IContactMechStateProperties.AttnName
        {
            get 
            {
                return (this._state as IContactMechStateProperties).AttnName;
            }
            set 
            {
                (this._state as IContactMechStateProperties).AttnName = value;
            }
        }

		public virtual string Address1
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Address1"))
                {
                    return _state.Address1;
                }
                return null;
            }
            set
            {
                _state.Address1 = value;
            }
        }

        string IContactMechStateProperties.Address1
        {
            get 
            {
                return (this._state as IContactMechStateProperties).Address1;
            }
            set 
            {
                (this._state as IContactMechStateProperties).Address1 = value;
            }
        }

		public virtual string Address2
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Address2"))
                {
                    return _state.Address2;
                }
                return null;
            }
            set
            {
                _state.Address2 = value;
            }
        }

        string IContactMechStateProperties.Address2
        {
            get 
            {
                return (this._state as IContactMechStateProperties).Address2;
            }
            set 
            {
                (this._state as IContactMechStateProperties).Address2 = value;
            }
        }

		public virtual string Directions
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Directions"))
                {
                    return _state.Directions;
                }
                return null;
            }
            set
            {
                _state.Directions = value;
            }
        }

        string IContactMechStateProperties.Directions
        {
            get 
            {
                return (this._state as IContactMechStateProperties).Directions;
            }
            set 
            {
                (this._state as IContactMechStateProperties).Directions = value;
            }
        }

		public virtual string City
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("City"))
                {
                    return _state.City;
                }
                return null;
            }
            set
            {
                _state.City = value;
            }
        }

        string IContactMechStateProperties.City
        {
            get 
            {
                return (this._state as IContactMechStateProperties).City;
            }
            set 
            {
                (this._state as IContactMechStateProperties).City = value;
            }
        }

		public virtual string PostalCode
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PostalCode"))
                {
                    return _state.PostalCode;
                }
                return null;
            }
            set
            {
                _state.PostalCode = value;
            }
        }

        string IContactMechStateProperties.PostalCode
        {
            get 
            {
                return (this._state as IContactMechStateProperties).PostalCode;
            }
            set 
            {
                (this._state as IContactMechStateProperties).PostalCode = value;
            }
        }

		public virtual string PostalCodeExt
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PostalCodeExt"))
                {
                    return _state.PostalCodeExt;
                }
                return null;
            }
            set
            {
                _state.PostalCodeExt = value;
            }
        }

        string IContactMechStateProperties.PostalCodeExt
        {
            get 
            {
                return (this._state as IContactMechStateProperties).PostalCodeExt;
            }
            set 
            {
                (this._state as IContactMechStateProperties).PostalCodeExt = value;
            }
        }

		public virtual string CountryGeoId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CountryGeoId"))
                {
                    return _state.CountryGeoId;
                }
                return null;
            }
            set
            {
                _state.CountryGeoId = value;
            }
        }

        string IContactMechStateProperties.CountryGeoId
        {
            get 
            {
                return (this._state as IContactMechStateProperties).CountryGeoId;
            }
            set 
            {
                (this._state as IContactMechStateProperties).CountryGeoId = value;
            }
        }

		public virtual string StateProvinceGeoId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("StateProvinceGeoId"))
                {
                    return _state.StateProvinceGeoId;
                }
                return null;
            }
            set
            {
                _state.StateProvinceGeoId = value;
            }
        }

        string IContactMechStateProperties.StateProvinceGeoId
        {
            get 
            {
                return (this._state as IContactMechStateProperties).StateProvinceGeoId;
            }
            set 
            {
                (this._state as IContactMechStateProperties).StateProvinceGeoId = value;
            }
        }

		public virtual string CountyGeoId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CountyGeoId"))
                {
                    return _state.CountyGeoId;
                }
                return null;
            }
            set
            {
                _state.CountyGeoId = value;
            }
        }

        string IContactMechStateProperties.CountyGeoId
        {
            get 
            {
                return (this._state as IContactMechStateProperties).CountyGeoId;
            }
            set 
            {
                (this._state as IContactMechStateProperties).CountyGeoId = value;
            }
        }

		public virtual string PostalCodeGeoId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PostalCodeGeoId"))
                {
                    return _state.PostalCodeGeoId;
                }
                return null;
            }
            set
            {
                _state.PostalCodeGeoId = value;
            }
        }

        string IContactMechStateProperties.PostalCodeGeoId
        {
            get 
            {
                return (this._state as IContactMechStateProperties).PostalCodeGeoId;
            }
            set 
            {
                (this._state as IContactMechStateProperties).PostalCodeGeoId = value;
            }
        }

		public virtual string GeoPointId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("GeoPointId"))
                {
                    return _state.GeoPointId;
                }
                return null;
            }
            set
            {
                _state.GeoPointId = value;
            }
        }

        string IContactMechStateProperties.GeoPointId
        {
            get 
            {
                return (this._state as IContactMechStateProperties).GeoPointId;
            }
            set 
            {
                (this._state as IContactMechStateProperties).GeoPointId = value;
            }
        }

		public virtual string CountryCode
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CountryCode"))
                {
                    return _state.CountryCode;
                }
                return null;
            }
            set
            {
                _state.CountryCode = value;
            }
        }

        string IContactMechStateProperties.CountryCode
        {
            get 
            {
                return (this._state as IContactMechStateProperties).CountryCode;
            }
            set 
            {
                (this._state as IContactMechStateProperties).CountryCode = value;
            }
        }

		public virtual string AreaCode
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AreaCode"))
                {
                    return _state.AreaCode;
                }
                return null;
            }
            set
            {
                _state.AreaCode = value;
            }
        }

        string IContactMechStateProperties.AreaCode
        {
            get 
            {
                return (this._state as IContactMechStateProperties).AreaCode;
            }
            set 
            {
                (this._state as IContactMechStateProperties).AreaCode = value;
            }
        }

		public virtual string ContactNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ContactNumber"))
                {
                    return _state.ContactNumber;
                }
                return null;
            }
            set
            {
                _state.ContactNumber = value;
            }
        }

        string IContactMechStateProperties.ContactNumber
        {
            get 
            {
                return (this._state as IContactMechStateProperties).ContactNumber;
            }
            set 
            {
                (this._state as IContactMechStateProperties).ContactNumber = value;
            }
        }

		public virtual string AskForName
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AskForName"))
                {
                    return _state.AskForName;
                }
                return null;
            }
            set
            {
                _state.AskForName = value;
            }
        }

        string IContactMechStateProperties.AskForName
        {
            get 
            {
                return (this._state as IContactMechStateProperties).AskForName;
            }
            set 
            {
                (this._state as IContactMechStateProperties).AskForName = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IContactMechStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IContactMechStateProperties).Active = value.Value;
                }
            }
        }

        bool IContactMechStateProperties.Active
        {
            get 
            {
                return (this._state as IContactMechStateProperties).Active;
            }
            set 
            {
                (this._state as IContactMechStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IContactMechStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IContactMechStateProperties).Version = value.Value;
                }
            }
        }

        long IContactMechStateProperties.Version
        {
            get 
            {
                return (this._state as IContactMechStateProperties).Version;
            }
            set 
            {
                (this._state as IContactMechStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		string IGlobalIdentity<string>.GlobalId
		{
			get { return (_state as IContactMechState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IContactMechState).CreatedBy; }
            set { (_state as IContactMechState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IContactMechState).CreatedAt; }
            set { (_state as IContactMechState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IContactMechState).UpdatedBy; }
            set { (_state as IContactMechState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IContactMechState).UpdatedAt; }
            set { (_state as IContactMechState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IContactMechStateProperties).Version; }
		}

		#endregion

        bool IContactMechState.IsUnsaved
        {
            get { return this.Version == ContactMechState.VersionZero; }
        }

		void IContactMechState.When(IContactMechStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IContactMechState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IContactMechState.When(IContactMechStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IContactMechState.When(IContactMechStateDeleted e)
		{
            throw new NotSupportedException();
		}

		void IContactMechState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class ContactMechStateDtoWrapperCollection : StateDtoWrapperCollectionBase<ContactMechStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(ContactMechStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

