// <autogenerated>
//   This file was generated by T4 code generator GenerateStatusItemDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.StatusItem;

namespace Dddml.Wms.Domain.StatusItem
{

	public abstract class StatusItemStateEventDtoBase : IStateEventDto, IStatusItemStateCreated, IStatusItemStateMergePatched
	{

        private StatusItemEventIdDto _stateEventId;

		protected internal virtual StatusItemEventIdDto StateEventId 
        {
            get 
            {
                if (_stateEventId == null) { _stateEventId = new StatusItemEventIdDto(); }
                return _stateEventId;
            }
            set
            {
                _stateEventId = value;
            }
        }

        public virtual string StatusId
        {
            get { return StateEventId.StatusId; }
            set { StateEventId.StatusId = value; }
        }

        public virtual long Version
        {
            get { return StateEventId.Version; }
            set { StateEventId.Version = value; }
        }

		public virtual string StatusTypeId { get; set; }

		public virtual string StatusCode { get; set; }

		public virtual string SequenceId { get; set; }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		StatusItemEventId IGlobalIdentity<StatusItemEventId>.GlobalId {
			get 
			{
				return this.StateEventId.ToStatusItemEventId();
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IStatusItemStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyStatusTypeIdRemoved { get; set; }

        bool IStatusItemStateMergePatched.IsPropertyStatusTypeIdRemoved
        {
            get 
            {
                var b = this.IsPropertyStatusTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyStatusTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyStatusCodeRemoved { get; set; }

        bool IStatusItemStateMergePatched.IsPropertyStatusCodeRemoved
        {
            get 
            {
                var b = this.IsPropertyStatusCodeRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyStatusCodeRemoved = value;
            }
        }

		public virtual bool? IsPropertySequenceIdRemoved { get; set; }

        bool IStatusItemStateMergePatched.IsPropertySequenceIdRemoved
        {
            get 
            {
                var b = this.IsPropertySequenceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertySequenceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IStatusItemStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IStatusItemStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        StatusItemEventId IStatusItemStateEvent.StateEventId
        {
            get { return this.StateEventId.ToStatusItemEventId(); }
        }

        protected StatusItemStateEventDtoBase()
        {
        }

        protected StatusItemStateEventDtoBase(StatusItemEventIdDto stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class StatusItemStateCreatedOrMergePatchedOrDeletedDto : StatusItemStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class StatusItemStateCreatedDto : StatusItemStateCreatedOrMergePatchedOrDeletedDto
	{
		public StatusItemStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class StatusItemStateMergePatchedDto : StatusItemStateCreatedOrMergePatchedOrDeletedDto
	{
		public StatusItemStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class StatusItemStateDeletedDto : StatusItemStateCreatedOrMergePatchedOrDeletedDto
	{
		public StatusItemStateDeletedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class StatusItemStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IStatusItemStateCreated>, IEnumerable<IStatusItemStateMergePatched>
    {
        private List<StatusItemStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<StatusItemStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual StatusItemStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<StatusItemStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IStatusItemStateCreated> IEnumerable<IStatusItemStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IStatusItemStateMergePatched> IEnumerable<IStatusItemStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }


        public void AddStatusItemEvent(IStatusItemStateCreated e)
        {
            _innerStateEvents.Add((StatusItemStateCreatedDto)e);
        }

        public void AddStatusItemEvent(IStatusItemStateEvent e)
        {
            _innerStateEvents.Add((StatusItemStateCreatedOrMergePatchedOrDeletedDto)e);
        }


    }


}

