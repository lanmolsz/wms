// <autogenerated>
//   This file was generated by T4 code generator GenerateSupplierProductDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.SupplierProduct;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.SupplierProduct
{

	public partial interface ISupplierProductApplicationService : IApplicationService
	{
		void When(ICreateSupplierProduct c);

		void When(IMergePatchSupplierProduct c);

 		ISupplierProductState Get(SupplierProductId supplierProductId);

        IEnumerable<ISupplierProductState> GetAll(int firstResult, int maxResults);

        IEnumerable<ISupplierProductState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<ISupplierProductState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<ISupplierProductState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        ISupplierProductStateEvent GetStateEvent(SupplierProductId supplierProductId, long version);

        ISupplierProductState GetHistoryState(SupplierProductId supplierProductId, long version);


	}

    public static partial class SupplierProductApplicationServiceExtension
    {
        public static IEnumerable<ISupplierProductState> GetByProperty(this ISupplierProductApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<ISupplierProductState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<ISupplierProductState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<ISupplierProductState> GetByProperty<TPropertyType>(this ISupplierProductApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<ISupplierProductState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<ISupplierProductState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

