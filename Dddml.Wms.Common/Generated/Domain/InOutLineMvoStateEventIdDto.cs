// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using NodaMoney;

namespace Dddml.Wms.Domain
{

	public class InOutLineMvoStateEventIdDto
	{

		public InOutLineMvoStateEventIdDto()
		{
		}

        public virtual InOutLineMvoStateEventId ToInOutLineMvoStateEventId()
        {
            InOutLineMvoStateEventId v = new InOutLineMvoStateEventId();
            v.InOutLineId = this.InOutLineId.ToInOutLineId();
            v.InOutVersion = this.InOutVersion;
            return v;
        }

		private InOutLineIdDto _inOutLineId = new InOutLineIdDto();

		public virtual InOutLineIdDto InOutLineId { 
			get { return this._inOutLineId; } 
			set { this._inOutLineId = value; } 
		}

		public virtual long InOutVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			InOutLineMvoStateEventIdDto other = obj as InOutLineMvoStateEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.InOutLineId, other.InOutLineId)
				&& Object.Equals (this.InOutVersion, other.InOutVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.InOutLineId != null) {
				hash += 13 * this.InOutLineId.GetHashCode ();
			}
			if (this.InOutVersion != null) {
				hash += 13 * this.InOutVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


