// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public partial class YearPlanMvoState : YearPlanMvoStateProperties, IYearPlanMvoState
	{

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

		public virtual string UpdatedBy { get; set; }

		public virtual DateTime UpdatedAt { get; set; }

		public virtual bool Deleted { get; set; }


		#region IIdentity implementation

		YearPlanId IGlobalIdentity<YearPlanId>.GlobalId
		{
			get
			{
				return this.YearPlanId;
			}
		}

		#endregion



		#region IActive implementation

		bool IActive.Active
		{
			get
			{
				return this.Active;
			}
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
			get
			{
				return this.Deleted;
			}
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
			get
			{
				return this.CreatedBy;
			}
			set
			{
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt
		{
			get
			{
				return this.CreatedAt;
			}
			set
			{
				this.CreatedAt = value;
			}
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
			get
			{
				return this.UpdatedBy;
			}
		}

		DateTime IUpdated<string>.UpdatedAt
		{
			get
			{
				return this.UpdatedAt;
			}
		}

		#endregion

		#region IVersioned implementation

		long IVersioned<long>.Version
		{
			get
			{
				return this.PersonVersion;
			}
		}


		#endregion

        bool IYearPlanMvoState.IsUnsaved
        {
            get { return ((IVersioned<long>)this).Version == VersionZero; }
        }

		public static long VersionZero
		{
			get
			{
				return (long)0;
			}
		}


		public YearPlanMvoState ()
		{
            InitializeProperties();
		}



		public virtual void When(IYearPlanMvoStateCreated e)
		{
			ThrowOnWrongEvent(e);
			this.Description = e.Description;

            this.Version = (e.Version != null && e.Version.HasValue) ? e.Version.Value : default(long);

            this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);

            this.PersonBirthDate = (e.PersonBirthDate != null && e.PersonBirthDate.HasValue) ? e.PersonBirthDate.Value : default(DateTime);

			this.PersonLoves = e.PersonLoves;

			this.PersonEmergencyContact = e.PersonEmergencyContact;

			this.PersonCreatedBy = e.PersonCreatedBy;

			this.PersonUpdatedBy = e.PersonUpdatedBy;

            this.PersonCreatedAt = (e.PersonCreatedAt != null && e.PersonCreatedAt.HasValue) ? e.PersonCreatedAt.Value : default(DateTime);

            this.PersonUpdatedAt = (e.PersonUpdatedAt != null && e.PersonUpdatedAt.HasValue) ? e.PersonUpdatedAt.Value : default(DateTime);

            this.PersonActive = (e.PersonActive != null && e.PersonActive.HasValue) ? e.PersonActive.Value : default(bool);

            this.PersonDeleted = (e.PersonDeleted != null && e.PersonDeleted.HasValue) ? e.PersonDeleted.Value : default(bool);

			this.Deleted = false;

			this.CreatedBy = e.CreatedBy;
			this.CreatedAt = e.CreatedAt;


		}


		public virtual void When(IYearPlanMvoStateMergePatched e)
		{
			ThrowOnWrongEvent(e);

			if (e.Description == null)
			{
				if (e.IsPropertyDescriptionRemoved)
				{
					this.Description = default(string);
				}
			}
			else
			{
				this.Description = e.Description;
			}

			if (e.Version == null)
			{
				if (e.IsPropertyVersionRemoved)
				{
					this.Version = default(long);
				}
			}
			else
			{
				this.Version = (e.Version != null && e.Version.HasValue) ? e.Version.Value : default(long);
			}

			if (e.Active == null)
			{
				if (e.IsPropertyActiveRemoved)
				{
					this.Active = default(bool);
				}
			}
			else
			{
				this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);
			}

			if (e.PersonBirthDate == null)
			{
				if (e.IsPropertyPersonBirthDateRemoved)
				{
					this.PersonBirthDate = default(DateTime);
				}
			}
			else
			{
				this.PersonBirthDate = (e.PersonBirthDate != null && e.PersonBirthDate.HasValue) ? e.PersonBirthDate.Value : default(DateTime);
			}

			if (e.PersonLoves == null)
			{
				if (e.IsPropertyPersonLovesRemoved)
				{
					this.PersonLoves = default(PersonalName);
				}
			}
			else
			{
				this.PersonLoves = e.PersonLoves;
			}

			if (e.PersonEmergencyContact == null)
			{
				if (e.IsPropertyPersonEmergencyContactRemoved)
				{
					this.PersonEmergencyContact = default(Contact);
				}
			}
			else
			{
				this.PersonEmergencyContact = e.PersonEmergencyContact;
			}

			if (e.PersonCreatedBy == null)
			{
				if (e.IsPropertyPersonCreatedByRemoved)
				{
					this.PersonCreatedBy = default(string);
				}
			}
			else
			{
				this.PersonCreatedBy = e.PersonCreatedBy;
			}

			if (e.PersonUpdatedBy == null)
			{
				if (e.IsPropertyPersonUpdatedByRemoved)
				{
					this.PersonUpdatedBy = default(string);
				}
			}
			else
			{
				this.PersonUpdatedBy = e.PersonUpdatedBy;
			}

			if (e.PersonCreatedAt == null)
			{
				if (e.IsPropertyPersonCreatedAtRemoved)
				{
					this.PersonCreatedAt = default(DateTime);
				}
			}
			else
			{
				this.PersonCreatedAt = (e.PersonCreatedAt != null && e.PersonCreatedAt.HasValue) ? e.PersonCreatedAt.Value : default(DateTime);
			}

			if (e.PersonUpdatedAt == null)
			{
				if (e.IsPropertyPersonUpdatedAtRemoved)
				{
					this.PersonUpdatedAt = default(DateTime);
				}
			}
			else
			{
				this.PersonUpdatedAt = (e.PersonUpdatedAt != null && e.PersonUpdatedAt.HasValue) ? e.PersonUpdatedAt.Value : default(DateTime);
			}

			if (e.PersonActive == null)
			{
				if (e.IsPropertyPersonActiveRemoved)
				{
					this.PersonActive = default(bool);
				}
			}
			else
			{
				this.PersonActive = (e.PersonActive != null && e.PersonActive.HasValue) ? e.PersonActive.Value : default(bool);
			}

			if (e.PersonDeleted == null)
			{
				if (e.IsPropertyPersonDeletedRemoved)
				{
					this.PersonDeleted = default(bool);
				}
			}
			else
			{
				this.PersonDeleted = (e.PersonDeleted != null && e.PersonDeleted.HasValue) ? e.PersonDeleted.Value : default(bool);
			}


			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;


		}

		public virtual void When(IYearPlanMvoStateDeleted e)
		{
			ThrowOnWrongEvent(e);

			this.Deleted = true;
			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;

		}


		public virtual void Mutate(IEvent e)
		{
			((dynamic)this).When((dynamic)e);
		}

		protected void ThrowOnWrongEvent(IYearPlanMvoStateEvent stateEvent)
		{
			var stateEntityId = this.YearPlanId; // Aggregate Id
			var eventEntityId = stateEvent.StateEventId.YearPlanId; // EntityBase.Aggregate.GetStateEventIdPropertyIdName();
			if (stateEntityId != eventEntityId)
			{
				throw DomainError.Named("mutateWrongEntity", "Entity Id {0} in state but entity id {1} in event", stateEntityId, eventEntityId);
			}

			var stateVersion = this.PersonVersion;
			var eventVersion = stateEvent.StateEventId.PersonVersion;
			if (stateVersion != eventVersion)
			{
				throw DomainError.Named("concurrencyConflict", "Conflict between state version {0} and event version {1}", stateVersion, eventVersion);
			}

		}
	}

}

