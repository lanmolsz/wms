// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrderShipment;

namespace Dddml.Wms.Domain.OrderShipment
{

    public class OrderShipmentStateEventDtoConverter
    {
        public virtual OrderShipmentStateCreatedOrMergePatchedOrDeletedDto ToOrderShipmentStateEventDto(IOrderShipmentStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IOrderShipmentStateCreated)stateEvent;
                return ToOrderShipmentStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IOrderShipmentStateMergePatched)stateEvent;
                return ToOrderShipmentStateMergePatchedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual OrderShipmentStateCreatedDto ToOrderShipmentStateCreatedDto(IOrderShipmentStateCreated e)
        {
            var dto = new OrderShipmentStateCreatedDto();
            dto.StateEventId = new OrderShipmentEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Quantity = e.Quantity;
            dto.Active = e.Active;
            return dto;
        }

        public virtual OrderShipmentStateMergePatchedDto ToOrderShipmentStateMergePatchedDto(IOrderShipmentStateMergePatched e)
        {
            var dto = new OrderShipmentStateMergePatchedDto();
            dto.StateEventId = new OrderShipmentEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Quantity = e.Quantity;
            dto.Active = e.Active;
            dto.IsPropertyQuantityRemoved = e.IsPropertyQuantityRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }



    }


}

