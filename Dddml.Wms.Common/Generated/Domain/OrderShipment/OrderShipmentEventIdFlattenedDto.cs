// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrderShipment;

namespace Dddml.Wms.Domain.OrderShipment
{

	public class OrderShipmentEventIdFlattenedDto : IIdFlattenedDto
	{

        private static string[] _flattenedPropertyNames = new string[] { "OrderShipmentIdOrderId", "OrderShipmentIdOrderItemSeqId", "OrderShipmentIdShipmentId", "OrderShipmentIdShipmentItemSeqId", "Version" };

        string[] IIdFlattenedDto.FieldNames
        {
            get { return _flattenedPropertyNames; }
        }

        object IIdFlattenedDto.GetFieldValue(string fieldName)
        {
            return ReflectUtils.GetPropertyValue(fieldName, this._value);
        }

        void IIdFlattenedDto.SetFieldValue(string fieldName, object fieldValue)
        {
            ReflectUtils.SetPropertyValue(fieldName, this._value, fieldValue);
        }

        Type IIdFlattenedDto.GetFieldType(string fieldName)
        {
            if (fieldName.Equals("OrderShipmentIdOrderId", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(string);
            }

            if (fieldName.Equals("OrderShipmentIdOrderItemSeqId", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(string);
            }

            if (fieldName.Equals("OrderShipmentIdShipmentId", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(string);
            }

            if (fieldName.Equals("OrderShipmentIdShipmentItemSeqId", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(string);
            }

            if (fieldName.Equals("Version", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(long);
            }

            throw new ArgumentException(String.Format("Unknown fileName: {0}", fieldName));
        }


        private OrderShipmentEventIdDto _value = new OrderShipmentEventIdDto();

		public OrderShipmentEventIdFlattenedDto()
		{
		}

		public OrderShipmentEventIdFlattenedDto(OrderShipmentEventIdDto val)
		{
			this._value = val;
		}

        public OrderShipmentEventIdDto ToOrderShipmentEventIdDto()
        {
            return this._value;
        }

		public OrderShipmentEventIdFlattenedDto(OrderShipmentEventId val)
		{
			this._value = new OrderShipmentEventIdDtoWrapper(val);
		}

        public OrderShipmentEventId ToOrderShipmentEventId()
        {
            return this._value.ToOrderShipmentEventId();
        }

		public virtual string OrderShipmentIdOrderId {
			get { return _value.OrderShipmentId.OrderId; }
			set { _value.OrderShipmentId.OrderId = value; }
		}

		public virtual string OrderShipmentIdOrderItemSeqId {
			get { return _value.OrderShipmentId.OrderItemSeqId; }
			set { _value.OrderShipmentId.OrderItemSeqId = value; }
		}

		public virtual string OrderShipmentIdShipmentId {
			get { return _value.OrderShipmentId.ShipmentId; }
			set { _value.OrderShipmentId.ShipmentId = value; }
		}

		public virtual string OrderShipmentIdShipmentItemSeqId {
			get { return _value.OrderShipmentId.ShipmentItemSeqId; }
			set { _value.OrderShipmentId.ShipmentItemSeqId = value; }
		}

		public virtual long Version { 
			get { return _value.Version; } 
			set { _value.Version = value; } 
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			OrderShipmentEventIdFlattenedDto other = obj as OrderShipmentEventIdFlattenedDto;
			if (other == null) {
				return false;
			}

            return _value.Equals(other._value);

		}

		public override int GetHashCode ()
		{
			return _value.GetHashCode();
		}

	}

    public class OrderShipmentEventIdFlattenedDtoFormatter : IdFlattenedDtoFormatterBase<OrderShipmentEventIdFlattenedDto>
    {

    }

}


