// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderItemShipGrpInvReservationDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrderItemShipGrpInvReservation;

namespace Dddml.Wms.Domain.OrderItemShipGrpInvReservation
{

	public static partial class OrderItemShipGrpInvReservationStateInterfaceExtension
	{

        public static IOrderItemShipGrpInvReservationCommand ToCreateOrMergePatchOrderItemShipGrpInvReservation<TCreateOrderItemShipGrpInvReservation, TMergePatchOrderItemShipGrpInvReservation>(this IOrderItemShipGrpInvReservationState state)
            where TCreateOrderItemShipGrpInvReservation : ICreateOrderItemShipGrpInvReservation, new()
            where TMergePatchOrderItemShipGrpInvReservation : IMergePatchOrderItemShipGrpInvReservation, new()
        {
            bool bUnsaved = ((IOrderItemShipGrpInvReservationState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateOrderItemShipGrpInvReservation<TCreateOrderItemShipGrpInvReservation>();
            }
            else 
            {
                return state.ToMergePatchOrderItemShipGrpInvReservation<TMergePatchOrderItemShipGrpInvReservation>();
            }
        }

        public static TDeleteOrderItemShipGrpInvReservation ToDeleteOrderItemShipGrpInvReservation<TDeleteOrderItemShipGrpInvReservation>(this IOrderItemShipGrpInvReservationState state)
            where TDeleteOrderItemShipGrpInvReservation : IDeleteOrderItemShipGrpInvReservation, new()
        {
            var cmd = new TDeleteOrderItemShipGrpInvReservation();
            cmd.OrderItemShipGrpInvResId = state.OrderItemShipGrpInvResId;
            cmd.Version = ((IOrderItemShipGrpInvReservationStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchOrderItemShipGrpInvReservation ToMergePatchOrderItemShipGrpInvReservation<TMergePatchOrderItemShipGrpInvReservation>(this IOrderItemShipGrpInvReservationState state)
            where TMergePatchOrderItemShipGrpInvReservation : IMergePatchOrderItemShipGrpInvReservation, new()
        {
            var cmd = new TMergePatchOrderItemShipGrpInvReservation();

            cmd.Version = ((IOrderItemShipGrpInvReservationStateProperties)state).Version;

            cmd.OrderItemShipGrpInvResId = state.OrderItemShipGrpInvResId;
            cmd.ReserveOrderEnumId = state.ReserveOrderEnumId;
            cmd.Quantity = state.Quantity;
            cmd.QuantityNotAvailable = state.QuantityNotAvailable;
            cmd.ReservedDatetime = state.ReservedDatetime;
            cmd.CreatedDatetime = state.CreatedDatetime;
            cmd.PromisedDatetime = state.PromisedDatetime;
            cmd.CurrentPromisedDate = state.CurrentPromisedDate;
            cmd.Priority = state.Priority;
            cmd.SequenceId = state.SequenceId;
            cmd.OldPickStartDate = state.OldPickStartDate;
            cmd.Active = ((IOrderItemShipGrpInvReservationStateProperties)state).Active;
            
            if (state.ReserveOrderEnumId == null) { cmd.IsPropertyReserveOrderEnumIdRemoved = true; }
            if (state.Quantity == null) { cmd.IsPropertyQuantityRemoved = true; }
            if (state.QuantityNotAvailable == null) { cmd.IsPropertyQuantityNotAvailableRemoved = true; }
            if (state.ReservedDatetime == null) { cmd.IsPropertyReservedDatetimeRemoved = true; }
            if (state.CreatedDatetime == null) { cmd.IsPropertyCreatedDatetimeRemoved = true; }
            if (state.PromisedDatetime == null) { cmd.IsPropertyPromisedDatetimeRemoved = true; }
            if (state.CurrentPromisedDate == null) { cmd.IsPropertyCurrentPromisedDateRemoved = true; }
            if (state.Priority == null) { cmd.IsPropertyPriorityRemoved = true; }
            if (state.SequenceId == null) { cmd.IsPropertySequenceIdRemoved = true; }
            if (state.OldPickStartDate == null) { cmd.IsPropertyOldPickStartDateRemoved = true; }
            return cmd;
        }

        public static TCreateOrderItemShipGrpInvReservation ToCreateOrderItemShipGrpInvReservation<TCreateOrderItemShipGrpInvReservation>(this IOrderItemShipGrpInvReservationState state)
            where TCreateOrderItemShipGrpInvReservation : ICreateOrderItemShipGrpInvReservation, new()
        {
            var cmd = new TCreateOrderItemShipGrpInvReservation();

            cmd.Version = ((IOrderItemShipGrpInvReservationStateProperties)state).Version;

            cmd.OrderItemShipGrpInvResId = state.OrderItemShipGrpInvResId;
            cmd.ReserveOrderEnumId = state.ReserveOrderEnumId;
            cmd.Quantity = state.Quantity;
            cmd.QuantityNotAvailable = state.QuantityNotAvailable;
            cmd.ReservedDatetime = state.ReservedDatetime;
            cmd.CreatedDatetime = state.CreatedDatetime;
            cmd.PromisedDatetime = state.PromisedDatetime;
            cmd.CurrentPromisedDate = state.CurrentPromisedDate;
            cmd.Priority = state.Priority;
            cmd.SequenceId = state.SequenceId;
            cmd.OldPickStartDate = state.OldPickStartDate;
            cmd.Active = ((IOrderItemShipGrpInvReservationStateProperties)state).Active;
            return cmd;
        }
		

	}

}

