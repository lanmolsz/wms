// <autogenerated>
//   This file was generated by T4 code generator GeneratePhysicalInventoryLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PhysicalInventoryLineMvo;
using Dddml.Wms.Domain.PhysicalInventory;

namespace Dddml.Wms.Domain.PhysicalInventoryLineMvo
{

    public partial class PhysicalInventoryLineMvoStateDto : IPhysicalInventoryLineMvoStateDto
    {

        public virtual PhysicalInventoryLineIdDto PhysicalInventoryLineId
        {
            get;
            set;
        }

        public virtual decimal? BookQuantity
        {
            get;
            set;
        }

        public virtual decimal? CountedQuantity
        {
            get;
            set;
        }

        public virtual bool? Processed
        {
            get;
            set;
        }

        public virtual long? ReversalLineNumber
        {
            get;
            set;
        }

        public virtual string Description
        {
            get;
            set;
        }

        public virtual long? Version
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryDocumentStatusId
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryWarehouseId
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryLocatorIdPattern
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryProductIdPattern
        {
            get;
            set;
        }

        public virtual bool? PhysicalInventoryPosted
        {
            get;
            set;
        }

        public virtual bool? PhysicalInventoryProcessed
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryProcessing
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryDocumentTypeId
        {
            get;
            set;
        }

        public virtual DateTime? PhysicalInventoryMovementDate
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryDescription
        {
            get;
            set;
        }

        public virtual bool? PhysicalInventoryIsApproved
        {
            get;
            set;
        }

        public virtual decimal? PhysicalInventoryApprovalAmount
        {
            get;
            set;
        }

        public virtual bool? PhysicalInventoryIsQuantityUpdated
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryReversalDocumentNumber
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryCreatedBy
        {
            get;
            set;
        }

        public virtual DateTime? PhysicalInventoryCreatedAt
        {
            get;
            set;
        }

        public virtual string PhysicalInventoryUpdatedBy
        {
            get;
            set;
        }

        public virtual DateTime? PhysicalInventoryUpdatedAt
        {
            get;
            set;
        }

        public virtual bool? PhysicalInventoryActive
        {
            get;
            set;
        }

        public virtual long? PhysicalInventoryVersion
        {
            get;
            set;
        }

        public virtual string CreatedBy
        {
            get;
            set;
        }

        public virtual DateTime? CreatedAt
        {
            get;
            set;
        }

        public virtual string UpdatedBy
        {
            get;
            set;
        }

        public virtual DateTime? UpdatedAt
        {
            get;
            set;
        }

        public virtual IPhysicalInventoryLineMvoState ToPhysicalInventoryLineMvoState()
        {
            var state = new PhysicalInventoryLineMvoState(true);
            state.PhysicalInventoryLineId = (this.PhysicalInventoryLineId == null) ? null : this.PhysicalInventoryLineId.ToPhysicalInventoryLineId();
            if (this.BookQuantity != null && this.BookQuantity.HasValue) { state.BookQuantity = this.BookQuantity.Value; }
            if (this.CountedQuantity != null && this.CountedQuantity.HasValue) { state.CountedQuantity = this.CountedQuantity.Value; }
            if (this.Processed != null && this.Processed.HasValue) { state.Processed = this.Processed.Value; }
            if (this.ReversalLineNumber != null && this.ReversalLineNumber.HasValue) { state.ReversalLineNumber = this.ReversalLineNumber.Value; }
            state.Description = this.Description;
            if (this.Version != null && this.Version.HasValue) { state.Version = this.Version.Value; }
            state.PhysicalInventoryDocumentStatusId = this.PhysicalInventoryDocumentStatusId;
            state.PhysicalInventoryWarehouseId = this.PhysicalInventoryWarehouseId;
            state.PhysicalInventoryLocatorIdPattern = this.PhysicalInventoryLocatorIdPattern;
            state.PhysicalInventoryProductIdPattern = this.PhysicalInventoryProductIdPattern;
            if (this.PhysicalInventoryPosted != null && this.PhysicalInventoryPosted.HasValue) { state.PhysicalInventoryPosted = this.PhysicalInventoryPosted.Value; }
            if (this.PhysicalInventoryProcessed != null && this.PhysicalInventoryProcessed.HasValue) { state.PhysicalInventoryProcessed = this.PhysicalInventoryProcessed.Value; }
            state.PhysicalInventoryProcessing = this.PhysicalInventoryProcessing;
            state.PhysicalInventoryDocumentTypeId = this.PhysicalInventoryDocumentTypeId;
            state.PhysicalInventoryMovementDate = this.PhysicalInventoryMovementDate;
            state.PhysicalInventoryDescription = this.PhysicalInventoryDescription;
            if (this.PhysicalInventoryIsApproved != null && this.PhysicalInventoryIsApproved.HasValue) { state.PhysicalInventoryIsApproved = this.PhysicalInventoryIsApproved.Value; }
            if (this.PhysicalInventoryApprovalAmount != null && this.PhysicalInventoryApprovalAmount.HasValue) { state.PhysicalInventoryApprovalAmount = this.PhysicalInventoryApprovalAmount.Value; }
            if (this.PhysicalInventoryIsQuantityUpdated != null && this.PhysicalInventoryIsQuantityUpdated.HasValue) { state.PhysicalInventoryIsQuantityUpdated = this.PhysicalInventoryIsQuantityUpdated.Value; }
            state.PhysicalInventoryReversalDocumentNumber = this.PhysicalInventoryReversalDocumentNumber;
            state.PhysicalInventoryCreatedBy = this.PhysicalInventoryCreatedBy;
            if (this.PhysicalInventoryCreatedAt != null && this.PhysicalInventoryCreatedAt.HasValue) { state.PhysicalInventoryCreatedAt = this.PhysicalInventoryCreatedAt.Value; }
            state.PhysicalInventoryUpdatedBy = this.PhysicalInventoryUpdatedBy;
            if (this.PhysicalInventoryUpdatedAt != null && this.PhysicalInventoryUpdatedAt.HasValue) { state.PhysicalInventoryUpdatedAt = this.PhysicalInventoryUpdatedAt.Value; }
            if (this.PhysicalInventoryActive != null && this.PhysicalInventoryActive.HasValue) { state.PhysicalInventoryActive = this.PhysicalInventoryActive.Value; }
            if (this.PhysicalInventoryVersion != null && this.PhysicalInventoryVersion.HasValue) { state.PhysicalInventoryVersion = this.PhysicalInventoryVersion.Value; }
            state.CreatedBy = this.CreatedBy;
            if (this.CreatedAt != null && this.CreatedAt.HasValue) { state.CreatedAt = this.CreatedAt.Value; }
            state.UpdatedBy = this.UpdatedBy;
            if (this.UpdatedAt != null && this.UpdatedAt.HasValue) { state.UpdatedAt = this.UpdatedAt.Value; }

            return state;
        }

    }

}

