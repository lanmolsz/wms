// <autogenerated>
//   This file was generated by T4 code generator GeneratePhysicalInventoryLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PhysicalInventoryLineMvo;
using Dddml.Wms.Domain.PhysicalInventory;

namespace Dddml.Wms.Domain.PhysicalInventoryLineMvo
{

	public abstract class PhysicalInventoryLineMvoCommandBase : IPhysicalInventoryLineMvoCommand
	{
		public virtual PhysicalInventoryLineId PhysicalInventoryLineId { get; set; }


		PhysicalInventoryLineId IAggregateCommand<PhysicalInventoryLineId, long>.AggregateId
		{
			get
			{
				return this.PhysicalInventoryLineId;
			}
		}


		long IAggregateCommand<PhysicalInventoryLineId, long>.AggregateVersion
		{
			get
			{
				return this.PhysicalInventoryVersion;
			}
		}

		public virtual long PhysicalInventoryVersion { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string LocatorId { get; set; }

		public virtual string ProductId { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual decimal? BookQuantity { get; set; }

		public virtual decimal? CountedQuantity { get; set; }

		public virtual bool? Processed { get; set; }

		public virtual long? ReversalLineNumber { get; set; }

		public virtual string Description { get; set; }

		public virtual long? Version { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string DocumentAction { get; set; }

		public virtual string PhysicalInventoryWarehouseId { get; set; }

		public virtual bool? PhysicalInventoryPosted { get; set; }

		public virtual bool? PhysicalInventoryProcessed { get; set; }

		public virtual string PhysicalInventoryProcessing { get; set; }

		public virtual string PhysicalInventoryDocumentTypeId { get; set; }

		public virtual DateTime? PhysicalInventoryMovementDate { get; set; }

		public virtual string PhysicalInventoryDescription { get; set; }

		public virtual bool? PhysicalInventoryIsApproved { get; set; }

		public virtual decimal? PhysicalInventoryApprovalAmount { get; set; }

		public virtual bool? PhysicalInventoryIsQuantityUpdated { get; set; }

		public virtual string PhysicalInventoryReversalDocumentNumber { get; set; }

		public virtual string PhysicalInventoryCreatedBy { get; set; }

		public virtual DateTime? PhysicalInventoryCreatedAt { get; set; }

		public virtual string PhysicalInventoryUpdatedBy { get; set; }

		public virtual DateTime? PhysicalInventoryUpdatedAt { get; set; }

		public virtual bool? PhysicalInventoryActive { get; set; }

		public virtual bool? PhysicalInventoryDeleted { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreatePhysicalInventoryLineMvo : PhysicalInventoryLineMvoCommandBase, ICreatePhysicalInventoryLineMvo
	{
		
		public CreatePhysicalInventoryLineMvo ()
		{
		}


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchPhysicalInventoryLineMvo :PhysicalInventoryLineMvoCommandBase, IMergePatchPhysicalInventoryLineMvo
	{

		public virtual bool IsPropertyLocatorIdRemoved { get; set; }

		public virtual bool IsPropertyProductIdRemoved { get; set; }

		public virtual bool IsPropertyAttributeSetInstanceIdRemoved { get; set; }

		public virtual bool IsPropertyBookQuantityRemoved { get; set; }

		public virtual bool IsPropertyCountedQuantityRemoved { get; set; }

		public virtual bool IsPropertyProcessedRemoved { get; set; }

		public virtual bool IsPropertyReversalLineNumberRemoved { get; set; }

		public virtual bool IsPropertyDescriptionRemoved { get; set; }

		public virtual bool IsPropertyVersionRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryWarehouseIdRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryPostedRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryProcessedRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryProcessingRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryDocumentTypeIdRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryMovementDateRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryDescriptionRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryIsApprovedRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryApprovalAmountRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryIsQuantityUpdatedRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryReversalDocumentNumberRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryCreatedByRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryCreatedAtRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryUpdatedByRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryUpdatedAtRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryActiveRemoved { get; set; }

		public virtual bool IsPropertyPhysicalInventoryDeletedRemoved { get; set; }


		public MergePatchPhysicalInventoryLineMvo ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeletePhysicalInventoryLineMvo : PhysicalInventoryLineMvoCommandBase, IDeletePhysicalInventoryLineMvo
	{
		public DeletePhysicalInventoryLineMvo ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }

	}

    public static partial class PhysicalInventoryLineMvoCommands
    {
    }

}
