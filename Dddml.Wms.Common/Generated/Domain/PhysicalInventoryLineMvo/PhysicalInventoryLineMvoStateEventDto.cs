// <autogenerated>
//   This file was generated by T4 code generator GeneratePhysicalInventoryLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PhysicalInventoryLineMvo;
using Dddml.Wms.Domain.PhysicalInventory;

namespace Dddml.Wms.Domain.PhysicalInventoryLineMvo
{

	public abstract class PhysicalInventoryLineMvoStateEventDtoBase : IStateEventDto, IPhysicalInventoryLineMvoStateCreated, IPhysicalInventoryLineMvoStateMergePatched, IPhysicalInventoryLineMvoStateDeleted
	{

        private PhysicalInventoryLineMvoStateEventIdDto _stateEventId;

		protected internal virtual PhysicalInventoryLineMvoStateEventIdDto StateEventId 
        {
            get 
            {
                if (_stateEventId == null) { _stateEventId = new PhysicalInventoryLineMvoStateEventIdDto(); }
                return _stateEventId;
            }
            set
            {
                _stateEventId = value;
            }
        }

        public virtual PhysicalInventoryLineIdDto PhysicalInventoryLineId
        {
            get { return StateEventId.PhysicalInventoryLineId; }
            set { StateEventId.PhysicalInventoryLineId = value; }
        }

        public virtual long PhysicalInventoryVersion
        {
            get { return StateEventId.PhysicalInventoryVersion; }
            set { StateEventId.PhysicalInventoryVersion = value; }
        }

		public virtual string LocatorId { get; set; }

		public virtual string ProductId { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual decimal? BookQuantity { get; set; }

		public virtual decimal? CountedQuantity { get; set; }

		public virtual bool? Processed { get; set; }

		public virtual long? ReversalLineNumber { get; set; }

		public virtual string Description { get; set; }

		public virtual long? Version { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string PhysicalInventoryDocumentStatusId { get; set; }

		public virtual string PhysicalInventoryWarehouseId { get; set; }

		public virtual bool? PhysicalInventoryPosted { get; set; }

		public virtual bool? PhysicalInventoryProcessed { get; set; }

		public virtual string PhysicalInventoryProcessing { get; set; }

		public virtual string PhysicalInventoryDocumentTypeId { get; set; }

		public virtual DateTime? PhysicalInventoryMovementDate { get; set; }

		public virtual string PhysicalInventoryDescription { get; set; }

		public virtual bool? PhysicalInventoryIsApproved { get; set; }

		public virtual decimal? PhysicalInventoryApprovalAmount { get; set; }

		public virtual bool? PhysicalInventoryIsQuantityUpdated { get; set; }

		public virtual string PhysicalInventoryReversalDocumentNumber { get; set; }

		public virtual string PhysicalInventoryCreatedBy { get; set; }

		public virtual DateTime? PhysicalInventoryCreatedAt { get; set; }

		public virtual string PhysicalInventoryUpdatedBy { get; set; }

		public virtual DateTime? PhysicalInventoryUpdatedAt { get; set; }

		public virtual bool? PhysicalInventoryActive { get; set; }

		public virtual bool? PhysicalInventoryDeleted { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		PhysicalInventoryLineMvoStateEventId IGlobalIdentity<PhysicalInventoryLineMvoStateEventId>.GlobalId {
			get 
			{
				return this.StateEventId.ToPhysicalInventoryLineMvoStateEventId();
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IPhysicalInventoryLineMvoStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyLocatorIdRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyLocatorIdRemoved
        {
            get 
            {
                var b = this.IsPropertyLocatorIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyLocatorIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyProductIdRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyProductIdRemoved
        {
            get 
            {
                var b = this.IsPropertyProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyAttributeSetInstanceIdRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyAttributeSetInstanceIdRemoved
        {
            get 
            {
                var b = this.IsPropertyAttributeSetInstanceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyAttributeSetInstanceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyBookQuantityRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyBookQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyBookQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyBookQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyCountedQuantityRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyCountedQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyCountedQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyCountedQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyProcessedRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyProcessedRemoved
        {
            get 
            {
                var b = this.IsPropertyProcessedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProcessedRemoved = value;
            }
        }

		public virtual bool? IsPropertyReversalLineNumberRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyReversalLineNumberRemoved
        {
            get 
            {
                var b = this.IsPropertyReversalLineNumberRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyReversalLineNumberRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyVersionRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyVersionRemoved
        {
            get 
            {
                var b = this.IsPropertyVersionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyVersionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryDocumentStatusIdRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryDocumentStatusIdRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryDocumentStatusIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryDocumentStatusIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryWarehouseIdRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryWarehouseIdRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryWarehouseIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryWarehouseIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryPostedRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryPostedRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryPostedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryPostedRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryProcessedRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryProcessedRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryProcessedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryProcessedRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryProcessingRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryProcessingRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryProcessingRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryProcessingRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryDocumentTypeIdRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryDocumentTypeIdRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryDocumentTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryDocumentTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryMovementDateRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryMovementDateRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryMovementDateRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryMovementDateRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryDescriptionRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryIsApprovedRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryIsApprovedRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryIsApprovedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryIsApprovedRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryApprovalAmountRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryApprovalAmountRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryApprovalAmountRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryApprovalAmountRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryIsQuantityUpdatedRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryIsQuantityUpdatedRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryIsQuantityUpdatedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryIsQuantityUpdatedRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryReversalDocumentNumberRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryReversalDocumentNumberRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryReversalDocumentNumberRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryReversalDocumentNumberRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryCreatedByRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryCreatedByRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryCreatedByRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryCreatedByRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryCreatedAtRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryCreatedAtRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryCreatedAtRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryCreatedAtRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryUpdatedByRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryUpdatedByRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryUpdatedByRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryUpdatedByRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryUpdatedAtRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryUpdatedAtRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryUpdatedAtRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryUpdatedAtRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryActiveRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryActiveRemoved = value;
            }
        }

		public virtual bool? IsPropertyPhysicalInventoryDeletedRemoved { get; set; }

        bool IPhysicalInventoryLineMvoStateMergePatched.IsPropertyPhysicalInventoryDeletedRemoved
        {
            get 
            {
                var b = this.IsPropertyPhysicalInventoryDeletedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPhysicalInventoryDeletedRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        PhysicalInventoryLineMvoStateEventId IPhysicalInventoryLineMvoStateEvent.StateEventId
        {
            get { return this.StateEventId.ToPhysicalInventoryLineMvoStateEventId(); }
        }

        protected PhysicalInventoryLineMvoStateEventDtoBase()
        {
        }

        protected PhysicalInventoryLineMvoStateEventDtoBase(PhysicalInventoryLineMvoStateEventIdDto stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto : PhysicalInventoryLineMvoStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class PhysicalInventoryLineMvoStateCreatedDto : PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto
	{
		public PhysicalInventoryLineMvoStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class PhysicalInventoryLineMvoStateMergePatchedDto : PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto
	{
		public PhysicalInventoryLineMvoStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class PhysicalInventoryLineMvoStateDeletedDto : PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto
	{
		public PhysicalInventoryLineMvoStateDeletedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IPhysicalInventoryLineMvoStateCreated>, IEnumerable<IPhysicalInventoryLineMvoStateMergePatched>, IEnumerable<IPhysicalInventoryLineMvoStateDeleted>
    {
        private List<PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IPhysicalInventoryLineMvoStateCreated> IEnumerable<IPhysicalInventoryLineMvoStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IPhysicalInventoryLineMvoStateMergePatched> IEnumerable<IPhysicalInventoryLineMvoStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IPhysicalInventoryLineMvoStateDeleted> IEnumerable<IPhysicalInventoryLineMvoStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddPhysicalInventoryLineMvoEvent(IPhysicalInventoryLineMvoStateCreated e)
        {
            _innerStateEvents.Add((PhysicalInventoryLineMvoStateCreatedDto)e);
        }

        public void AddPhysicalInventoryLineMvoEvent(IPhysicalInventoryLineMvoStateEvent e)
        {
            _innerStateEvents.Add((PhysicalInventoryLineMvoStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddPhysicalInventoryLineMvoEvent(IPhysicalInventoryLineMvoStateDeleted e)
        {
            _innerStateEvents.Add((PhysicalInventoryLineMvoStateDeletedDto)e);
        }

    }


}

