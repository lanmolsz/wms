// <autogenerated>
//   This file was generated by T4 code generator GeneratePhysicalInventoryLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PhysicalInventoryLineMvo;
using Dddml.Wms.Domain.PhysicalInventory;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.PhysicalInventoryLineMvo
{

	public partial interface IPhysicalInventoryLineMvoApplicationService : IApplicationService
	{
		void When(ICreatePhysicalInventoryLineMvo c);

		void When(IMergePatchPhysicalInventoryLineMvo c);

		void When(IDeletePhysicalInventoryLineMvo c);

 		IPhysicalInventoryLineMvoState Get(PhysicalInventoryLineId physicalInventoryLineId);

        IEnumerable<IPhysicalInventoryLineMvoState> GetAll(int firstResult, int maxResults);

        IEnumerable<IPhysicalInventoryLineMvoState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IPhysicalInventoryLineMvoState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IPhysicalInventoryLineMvoState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        IPhysicalInventoryLineMvoStateEvent GetStateEvent(PhysicalInventoryLineId physicalInventoryLineId, long version);

        IPhysicalInventoryLineMvoState GetHistoryState(PhysicalInventoryLineId physicalInventoryLineId, long version);


	}

    public static partial class PhysicalInventoryLineMvoApplicationServiceExtension
    {
        public static IEnumerable<IPhysicalInventoryLineMvoState> GetByProperty(this IPhysicalInventoryLineMvoApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IPhysicalInventoryLineMvoState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IPhysicalInventoryLineMvoState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<IPhysicalInventoryLineMvoState> GetByProperty<TPropertyType>(this IPhysicalInventoryLineMvoApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IPhysicalInventoryLineMvoState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IPhysicalInventoryLineMvoState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

