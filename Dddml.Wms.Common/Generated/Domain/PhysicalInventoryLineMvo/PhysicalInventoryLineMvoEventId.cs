// <autogenerated>
//   This file was generated by T4 code generator GeneratePhysicalInventoryLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PhysicalInventoryLineMvo;
using Dddml.Wms.Domain.PhysicalInventory;

namespace Dddml.Wms.Domain.PhysicalInventoryLineMvo
{

	public class PhysicalInventoryLineMvoEventId
	{

		private PhysicalInventoryLineId _physicalInventoryLineId = new PhysicalInventoryLineId();

		public virtual PhysicalInventoryLineId PhysicalInventoryLineId { 
			get { return this._physicalInventoryLineId; } 
			set { _physicalInventoryLineId = value; } 
		}

		private long _physicalInventoryVersion;

		public virtual long PhysicalInventoryVersion { 
			get { return this._physicalInventoryVersion; } 
			set { _physicalInventoryVersion = value; } 
		}


        #region  Flattened Properties


		public virtual string PhysicalInventoryLineIdPhysicalInventoryDocumentNumber {
			get { return PhysicalInventoryLineId.PhysicalInventoryDocumentNumber; }
			set { PhysicalInventoryLineId.PhysicalInventoryDocumentNumber = value; }
		}

		public virtual string PhysicalInventoryLineIdInventoryItemIdProductId {
			get { return PhysicalInventoryLineId.InventoryItemId.ProductId; }
			set { PhysicalInventoryLineId.InventoryItemId.ProductId = value; }
		}

		public virtual string PhysicalInventoryLineIdInventoryItemIdLocatorId {
			get { return PhysicalInventoryLineId.InventoryItemId.LocatorId; }
			set { PhysicalInventoryLineId.InventoryItemId.LocatorId = value; }
		}

		public virtual string PhysicalInventoryLineIdInventoryItemIdAttributeSetInstanceId {
			get { return PhysicalInventoryLineId.InventoryItemId.AttributeSetInstanceId; }
			set { PhysicalInventoryLineId.InventoryItemId.AttributeSetInstanceId = value; }
		}

        #endregion

		public PhysicalInventoryLineMvoEventId ()
		{
		}

		public PhysicalInventoryLineMvoEventId (PhysicalInventoryLineId physicalInventoryLineId, long physicalInventoryVersion)
		{
			this._physicalInventoryLineId = physicalInventoryLineId;
			this._physicalInventoryVersion = physicalInventoryVersion;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			PhysicalInventoryLineMvoEventId other = obj as PhysicalInventoryLineMvoEventId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.PhysicalInventoryLineId, other.PhysicalInventoryLineId)
				&& Object.Equals (this.PhysicalInventoryVersion, other.PhysicalInventoryVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.PhysicalInventoryLineId != null) {
				hash += 13 * this.PhysicalInventoryLineId.GetHashCode ();
			}
			if (this.PhysicalInventoryVersion != null) {
				hash += 13 * this.PhysicalInventoryVersion.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(PhysicalInventoryLineMvoEventId obj1, PhysicalInventoryLineMvoEventId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(PhysicalInventoryLineMvoEventId obj1, PhysicalInventoryLineMvoEventId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "PhysicalInventoryLineId: " + this.PhysicalInventoryLineId + ", "
                + "PhysicalInventoryVersion: " + this.PhysicalInventoryVersion + ", "
                ;
        }
	}

}


