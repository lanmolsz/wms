// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public class UserClaimStateEventIdDto
	{

		public UserClaimStateEventIdDto()
		{
		}

        public virtual UserClaimStateEventId ToUserClaimStateEventId()
        {
            UserClaimStateEventId v = new UserClaimStateEventId();
            v.UserId = this.UserId;
            v.ClaimId = this.ClaimId;
            v.UserVersion = this.UserVersion;
            return v;
        }

		public virtual string UserId { 
			get;
			set;
		}

		public virtual int ClaimId { 
			get;
			set;
		}

		public virtual long UserVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			UserClaimStateEventIdDto other = obj as UserClaimStateEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.UserId, other.UserId)
				&& Object.Equals (this.ClaimId, other.ClaimId)
				&& Object.Equals (this.UserVersion, other.UserVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.UserId != null) {
				hash += 13 * this.UserId.GetHashCode ();
			}
			if (this.ClaimId != null) {
				hash += 13 * this.ClaimId.GetHashCode ();
			}
			if (this.UserVersion != null) {
				hash += 13 * this.UserVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


