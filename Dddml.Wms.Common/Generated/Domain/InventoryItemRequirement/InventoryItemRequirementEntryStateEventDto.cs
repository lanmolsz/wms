// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemRequirementDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemRequirement;
using Dddml.Wms.Domain.InventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.InventoryItemRequirement
{

	public abstract class InventoryItemRequirementEntryStateEventDtoBase : IStateEventDto, IInventoryItemRequirementEntryStateCreated
	{

        private InventoryItemRequirementEntryEventIdDto _stateEventId;

		protected internal virtual InventoryItemRequirementEntryEventIdDto StateEventId 
        {
            get 
            {
                if (_stateEventId == null) { _stateEventId = new InventoryItemRequirementEntryEventIdDto(); }
                return _stateEventId;
            }
            set
            {
                _stateEventId = value;
            }
        }

        public virtual long EntrySeqId
        {
            get { return StateEventId.EntrySeqId; }
            set { StateEventId.EntrySeqId = value; }
        }

		public virtual decimal? Quantity { get; set; }

		private InventoryPRTriggeredIdDto _sourceEventId = new InventoryPRTriggeredIdDto();

		public virtual InventoryPRTriggeredIdDto SourceEventId { get { return _sourceEventId; } set { _sourceEventId = value; } }

		InventoryPRTriggeredId IInventoryItemRequirementEntryStateEvent.SourceEventId
		{ 
			get 
			{
				return this.SourceEventId == null ? null : this.SourceEventId.ToInventoryPRTriggeredId(); 
			} 
			set
			{
				if (value == null) { SourceEventId = null; } else { SourceEventId = new InventoryPRTriggeredIdDtoWrapper(value); }
			} 
		}

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		InventoryItemRequirementEntryEventId IGlobalIdentity<InventoryItemRequirementEntryEventId>.GlobalId {
			get 
			{
				return this.StateEventId.ToInventoryItemRequirementEntryEventId();
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IInventoryItemRequirementEntryStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        InventoryItemRequirementEntryEventId IInventoryItemRequirementEntryStateEvent.StateEventId
        {
            get { return this.StateEventId.ToInventoryItemRequirementEntryEventId(); }
        }

        protected InventoryItemRequirementEntryStateEventDtoBase()
        {
        }

        protected InventoryItemRequirementEntryStateEventDtoBase(InventoryItemRequirementEntryEventIdDto stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto : InventoryItemRequirementEntryStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class InventoryItemRequirementEntryStateCreatedDto : InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto
	{
		public InventoryItemRequirementEntryStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class InventoryItemRequirementEntryStateMergePatchedDto : InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto
	{
		public InventoryItemRequirementEntryStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class InventoryItemRequirementEntryStateRemovedDto : InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto
	{
		public InventoryItemRequirementEntryStateRemovedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }

	}


    public partial class InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDtos : IEnumerable<IInventoryItemRequirementEntryStateCreated>
    {
        private List<InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto> _innerStateEvents = new List<InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto>();

        public virtual InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IInventoryItemRequirementEntryStateCreated> IEnumerable<IInventoryItemRequirementEntryStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }


        public void AddInventoryItemRequirementEntryEvent(IInventoryItemRequirementEntryStateCreated e)
        {
            _innerStateEvents.Add((InventoryItemRequirementEntryStateCreatedDto)e);
        }

        public void AddInventoryItemRequirementEntryEvent(IInventoryItemRequirementEntryStateEvent e)
        {
            _innerStateEvents.Add((InventoryItemRequirementEntryStateCreatedOrMergePatchedOrRemovedDto)e);
        }


    }


}

