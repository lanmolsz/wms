// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemRequirementDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemRequirement;
using Dddml.Wms.Domain.InventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.InventoryItemRequirement
{

	public partial class InventoryItemRequirementEntryStateDtoWrapper : StateDtoWrapperBase, IInventoryItemRequirementEntryStateDto, IInventoryItemRequirementEntryState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IInventoryItemRequirementEntryState _state;

        public InventoryItemRequirementEntryStateDtoWrapper()
        {
            this._state = new InventoryItemRequirementEntryState();
        }

		public InventoryItemRequirementEntryStateDtoWrapper(IInventoryItemRequirementEntryState state)
		{
            this._state = state;
		}

		public IInventoryItemRequirementEntryState ToInventoryItemRequirementEntryState()
		{
			return this._state;
		}

		public virtual long? EntrySeqId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EntrySeqId"))
                {
                    return _state.EntrySeqId;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.EntrySeqId = value.Value;
                }
            }
        }

        long IInventoryItemRequirementEntryStateProperties.EntrySeqId
        {
            get 
            {
                return (this._state as IInventoryItemRequirementEntryStateProperties).EntrySeqId;
            }
            set 
            {
                (this._state as IInventoryItemRequirementEntryStateProperties).EntrySeqId = value;
            }
        }

		public virtual decimal? Quantity
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Quantity"))
                {
                    return _state.Quantity;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.Quantity = value.Value;
                }
            }
        }

        decimal IInventoryItemRequirementEntryStateProperties.Quantity
        {
            get 
            {
                return (this._state as IInventoryItemRequirementEntryStateProperties).Quantity;
            }
            set 
            {
                (this._state as IInventoryItemRequirementEntryStateProperties).Quantity = value;
            }
        }

        public InventoryPRTriggeredIdDto SourceEventId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SourceEventId"))
                {
					return (_state.SourceEventId == null) ? null : new InventoryPRTriggeredIdDtoWrapper(_state.SourceEventId);
                }
                return null;
            }
            set
            {
                _state.SourceEventId = (value == null) ? null : value.ToInventoryPRTriggeredId();
            }
        }

        InventoryPRTriggeredId IInventoryItemRequirementEntryStateProperties.SourceEventId
        {
            get 
            {
                return (this._state as IInventoryItemRequirementEntryStateProperties).SourceEventId;
            }
            set 
            {
                (this._state as IInventoryItemRequirementEntryStateProperties).SourceEventId = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IInventoryItemRequirementEntryStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IInventoryItemRequirementEntryStateProperties).Version = value.Value;
                }
            }
        }

        long IInventoryItemRequirementEntryStateProperties.Version
        {
            get 
            {
                return (this._state as IInventoryItemRequirementEntryStateProperties).Version;
            }
            set 
            {
                (this._state as IInventoryItemRequirementEntryStateProperties).Version = value;
            }
        }

        public InventoryItemIdDto InventoryItemRequirementId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InventoryItemRequirementId"))
                {
					return (_state.InventoryItemRequirementId == null) ? null : new InventoryItemIdDtoWrapper(_state.InventoryItemRequirementId);
                }
                return null;
            }
            set
            {
                _state.InventoryItemRequirementId = (value == null) ? null : value.ToInventoryItemId();
            }
        }

        InventoryItemId IInventoryItemRequirementEntryStateProperties.InventoryItemRequirementId
        {
            get 
            {
                return (this._state as IInventoryItemRequirementEntryStateProperties).InventoryItemRequirementId;
            }
            set 
            {
                (this._state as IInventoryItemRequirementEntryStateProperties).InventoryItemRequirementId = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation


		InventoryItemRequirementEntryId IGlobalIdentity<InventoryItemRequirementEntryId>.GlobalId {
			get { return (_state as IInventoryItemRequirementEntryState).GlobalId; }
		}

        long ILocalIdentity<long>.LocalId
        {
			get { return (_state as IInventoryItemRequirementEntryState).LocalId; }
        }

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IInventoryItemRequirementEntryState).CreatedBy; }
            set { (_state as IInventoryItemRequirementEntryState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IInventoryItemRequirementEntryState).CreatedAt; }
            set { (_state as IInventoryItemRequirementEntryState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IInventoryItemRequirementEntryState).UpdatedBy; }
            set { (_state as IInventoryItemRequirementEntryState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IInventoryItemRequirementEntryState).UpdatedAt; }
            set { (_state as IInventoryItemRequirementEntryState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IEntityVersioned<long>.EntityVersion
		{
            get { return (_state as IInventoryItemRequirementEntryStateProperties).Version; }
		}

		#endregion

        bool IInventoryItemRequirementEntryState.IsUnsaved
        {
            get { return this.Version == InventoryItemRequirementEntryState.VersionZero; }
        }

		void IInventoryItemRequirementEntryState.When(IInventoryItemRequirementEntryStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IInventoryItemRequirementEntryState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

        public virtual string CommandId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CommandId"))
                {
                    return _state.CommandId; 
                }
                return null;
            }
            set { _state.CommandId = value; }
        }

		void IInventoryItemRequirementEntryState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class InventoryItemRequirementEntryStateDtoWrapperCollection : StateDtoWrapperCollectionBase<InventoryItemRequirementEntryStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(InventoryItemRequirementEntryStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

