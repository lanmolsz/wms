// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public abstract class AttributeStateEventDtoBase : IStateEventDto, IAttributeStateCreated, IAttributeStateMergePatched, IAttributeStateDeleted
	{

		public virtual AttributeStateEventIdDto StateEventId { get; set; }

		public virtual string Name { get; set; }

		public virtual string OrganizationId { get; set; }

		public virtual string Description { get; set; }

		public virtual bool? IsMandatory { get; set; }

		public virtual bool? IsInstanceAttribute { get; set; }

		public virtual string AttributeValueType { get; set; }

		public virtual int? AttributeValueLength { get; set; }

		public virtual bool? IsList { get; set; }

		public virtual string FieldName { get; set; }

		public virtual string ReferenceId { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

		AttributeStateEventId IGlobalIdentity<AttributeStateEventId>.GlobalId {
			get {
				return this.StateEventId.ToAttributeStateEventId();
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IAttributeStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyNameRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyNameRemoved
        {
            get 
            {
                var b = this.IsPropertyNameRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyNameRemoved = value;
            }
        }

		public virtual bool? IsPropertyOrganizationIdRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyOrganizationIdRemoved
        {
            get 
            {
                var b = this.IsPropertyOrganizationIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyOrganizationIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyIsMandatoryRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyIsMandatoryRemoved
        {
            get 
            {
                var b = this.IsPropertyIsMandatoryRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyIsMandatoryRemoved = value;
            }
        }

		public virtual bool? IsPropertyIsInstanceAttributeRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyIsInstanceAttributeRemoved
        {
            get 
            {
                var b = this.IsPropertyIsInstanceAttributeRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyIsInstanceAttributeRemoved = value;
            }
        }

		public virtual bool? IsPropertyAttributeValueTypeRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyAttributeValueTypeRemoved
        {
            get 
            {
                var b = this.IsPropertyAttributeValueTypeRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyAttributeValueTypeRemoved = value;
            }
        }

		public virtual bool? IsPropertyAttributeValueLengthRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyAttributeValueLengthRemoved
        {
            get 
            {
                var b = this.IsPropertyAttributeValueLengthRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyAttributeValueLengthRemoved = value;
            }
        }

		public virtual bool? IsPropertyIsListRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyIsListRemoved
        {
            get 
            {
                var b = this.IsPropertyIsListRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyIsListRemoved = value;
            }
        }

		public virtual bool? IsPropertyFieldNameRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyFieldNameRemoved
        {
            get 
            {
                var b = this.IsPropertyFieldNameRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyFieldNameRemoved = value;
            }
        }

		public virtual bool? IsPropertyReferenceIdRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyReferenceIdRemoved
        {
            get 
            {
                var b = this.IsPropertyReferenceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyReferenceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IAttributeStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        private AttributeValueStateCreatedOrMergePatchedOrRemovedDtos _attributeValueEvents = new AttributeValueStateCreatedOrMergePatchedOrRemovedDtos();

        public virtual AttributeValueStateCreatedOrMergePatchedOrRemovedDto[] AttributeValueEvents
        {
            get
            {
                return _attributeValueEvents.ToArray();
            }
            set
            {
                _attributeValueEvents.Clear();
                _attributeValueEvents.AddRange(value);
            }
        }



        private AttributeValueStateEventIdDto NewAttributeValueStateEventId(string value)
        {
            var eId = new AttributeValueStateEventIdDto();
            eId.AttributeId = this.StateEventId.AttributeId;
            eId.Value = value;
            eId.AttributeVersion = this.StateEventId.Version;
            return eId;
        }

        public virtual AttributeValueStateCreatedDto NewAttributeValueStateCreated(string value)
        {
            var e = new AttributeValueStateCreatedDto();
            var eId = NewAttributeValueStateEventId(value);
            e.StateEventId = eId;
            return e;
        }

        public virtual AttributeValueStateMergePatchedDto NewAttributeValueStateMergePatched(string value)
        {
            var e = new AttributeValueStateMergePatchedDto();
            var eId = NewAttributeValueStateEventId(value);
            e.StateEventId = eId;
            return e;
        }

        public virtual AttributeValueStateRemovedDto NewAttributeValueStateRemoved(string value)
        {
            var e = new AttributeValueStateRemovedDto();
            var eId = NewAttributeValueStateEventId(value);
            e.StateEventId = eId;
            return e;
        }

        IEnumerable<IAttributeValueStateCreated> IAttributeStateCreated.AttributeValueEvents
        {
            get { return this._attributeValueEvents; }
        }

        void IAttributeStateCreated.AddAttributeValueEvent(IAttributeValueStateCreated e)
        {
            this._attributeValueEvents.AddAttributeValueEvent(e);
        }

        IAttributeValueStateCreated IAttributeStateCreated.NewAttributeValueStateCreated(string value)
        {
            return NewAttributeValueStateCreated(value);
        }

        IEnumerable<IAttributeValueStateEvent> IAttributeStateMergePatched.AttributeValueEvents
        {
            get { return this._attributeValueEvents; }
        }

        void IAttributeStateMergePatched.AddAttributeValueEvent(IAttributeValueStateEvent e)
        {
            this._attributeValueEvents.AddAttributeValueEvent(e);
        }

        IAttributeValueStateCreated IAttributeStateMergePatched.NewAttributeValueStateCreated(string value)
        {
            return NewAttributeValueStateCreated(value);
        }

        IAttributeValueStateMergePatched IAttributeStateMergePatched.NewAttributeValueStateMergePatched(string value)
        {
            return NewAttributeValueStateMergePatched(value);
        }

        IAttributeValueStateRemoved IAttributeStateMergePatched.NewAttributeValueStateRemoved(string value)
        {
            return NewAttributeValueStateRemoved(value);
        }


        IEnumerable<IAttributeValueStateRemoved> IAttributeStateDeleted.AttributeValueEvents
        {
            get { return this._attributeValueEvents; }
        }

        void IAttributeStateDeleted.AddAttributeValueEvent(IAttributeValueStateRemoved e)
        {
            this._attributeValueEvents.AddAttributeValueEvent(e);
        }

        IAttributeValueStateRemoved IAttributeStateDeleted.NewAttributeValueStateRemoved(string value)
        {
            return NewAttributeValueStateRemoved(value);
        }


        AttributeStateEventId IAttributeStateEvent.StateEventId
        {
            get { return this.StateEventId.ToAttributeStateEventId(); }
        }

        protected AttributeStateEventDtoBase()
        {
        }

        protected AttributeStateEventDtoBase(AttributeStateEventIdDto stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class AttributeStateCreatedOrMergePatchedOrDeletedDto : AttributeStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class AttributeStateCreatedDto : AttributeStateCreatedOrMergePatchedOrDeletedDto
	{
		public AttributeStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class AttributeStateMergePatchedDto : AttributeStateCreatedOrMergePatchedOrDeletedDto
	{
		public AttributeStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class AttributeStateDeletedDto : AttributeStateCreatedOrMergePatchedOrDeletedDto
	{
		public AttributeStateDeletedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class AttributeStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IAttributeStateCreated>, IEnumerable<IAttributeStateMergePatched>, IEnumerable<IAttributeStateDeleted>
    {
        private List<AttributeStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<AttributeStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual AttributeStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<AttributeStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IAttributeStateCreated> IEnumerable<IAttributeStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IAttributeStateMergePatched> IEnumerable<IAttributeStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IAttributeStateDeleted> IEnumerable<IAttributeStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddAttributeEvent(IAttributeStateCreated e)
        {
            _innerStateEvents.Add((AttributeStateCreatedDto)e);
        }

        public void AddAttributeEvent(IAttributeStateEvent e)
        {
            _innerStateEvents.Add((AttributeStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddAttributeEvent(IAttributeStateDeleted e)
        {
            _innerStateEvents.Add((AttributeStateDeletedDto)e);
        }

    }


}

