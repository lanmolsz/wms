// <autogenerated>
//   This file was generated by T4 code generator GenerateInOutLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InOutLineMvo;
using Dddml.Wms.Domain.InOut;

namespace Dddml.Wms.Domain.InOutLineMvo
{

	public partial class InOutLineMvoState : InOutLineMvoStateProperties, IInOutLineMvoState
	{

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

		public virtual string UpdatedBy { get; set; }

		public virtual DateTime UpdatedAt { get; set; }

		public virtual bool Deleted { get; set; }


		#region IIdentity implementation

		InOutLineId IGlobalIdentity<InOutLineId>.GlobalId
		{
			get
			{
				return this.InOutLineId;
			}
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
			return this.Active;
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
			get
			{
				return this.Deleted;
			}
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
			get
			{
				return this.CreatedBy;
			}
			set
			{
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt
		{
			get
			{
				return this.CreatedAt;
			}
			set
			{
				this.CreatedAt = value;
			}
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
			get { return this.UpdatedBy; }
			set { this.UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
			get { return this.UpdatedAt; }
			set { this.UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
			get
			{
				return this.InOutVersion;
			}
		}


		#endregion

        bool IInOutLineMvoState.IsUnsaved
        {
            get { return this.InOutVersion == VersionZero; }
        }

		public static long VersionZero
		{
			get
			{
				return (long)0;
			}
		}


        public virtual bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }
	
        private bool _forReapplying;

        public virtual bool ForReapplying
        {
            get { return _forReapplying; }
            set { _forReapplying = value; } 
        }

        public InOutLineMvoState(IEnumerable<IEvent> events) : this(true)
        {
            if (events != null && events.Count() > 0)
            {
                this.InOutLineId = ((IInOutLineMvoStateEvent)events.First()).StateEventId.InOutLineId;
                foreach (var e in events)
                {
                    Mutate(e);
                    this.InOutVersion += 1;
                }
            }
        }

        public InOutLineMvoState() : this(false)
        {
        }

        public InOutLineMvoState(bool forReapplying)
        {
            this._forReapplying = forReapplying;
            InitializeProperties();
        }


		public virtual void When(IInOutLineMvoStateCreated e)
		{
			ThrowOnWrongEvent(e);
			this.LocatorId = e.LocatorId;

			this.ProductId = e.ProductId;

			this.AttributeSetInstanceId = e.AttributeSetInstanceId;

			this.Description = e.Description;

			this.UomId = e.UomId;

            this.MovementQuantity = (e.MovementQuantity != null && e.MovementQuantity.HasValue) ? e.MovementQuantity.Value : default(decimal);

            this.ConfirmedQuantity = (e.ConfirmedQuantity != null && e.ConfirmedQuantity.HasValue) ? e.ConfirmedQuantity.Value : default(decimal);

            this.ScrappedQuantity = (e.ScrappedQuantity != null && e.ScrappedQuantity.HasValue) ? e.ScrappedQuantity.Value : default(decimal);

            this.TargetQuantity = (e.TargetQuantity != null && e.TargetQuantity.HasValue) ? e.TargetQuantity.Value : default(decimal);

            this.PickedQuantity = (e.PickedQuantity != null && e.PickedQuantity.HasValue) ? e.PickedQuantity.Value : default(decimal);

            this.IsInvoiced = (e.IsInvoiced != null && e.IsInvoiced.HasValue) ? e.IsInvoiced.Value : default(bool);

            this.Processed = (e.Processed != null && e.Processed.HasValue) ? e.Processed.Value : default(bool);

            this.QuantityEntered = (e.QuantityEntered != null && e.QuantityEntered.HasValue) ? e.QuantityEntered.Value : default(decimal);

            this.RmaLineNumber = (e.RmaLineNumber != null && e.RmaLineNumber.HasValue) ? e.RmaLineNumber.Value : default(long);

            this.ReversalLineNumber = (e.ReversalLineNumber != null && e.ReversalLineNumber.HasValue) ? e.ReversalLineNumber.Value : default(long);

            this.Version = (e.Version != null && e.Version.HasValue) ? e.Version.Value : default(long);

            this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);

			this.InOutDocumentStatusId = e.InOutDocumentStatusId;

            this.InOutPosted = (e.InOutPosted != null && e.InOutPosted.HasValue) ? e.InOutPosted.Value : default(bool);

            this.InOutProcessed = (e.InOutProcessed != null && e.InOutProcessed.HasValue) ? e.InOutProcessed.Value : default(bool);

			this.InOutProcessing = e.InOutProcessing;

			this.InOutDocumentTypeId = e.InOutDocumentTypeId;

			this.InOutDescription = e.InOutDescription;

			this.InOutOrderId = e.InOutOrderId;

			this.InOutDateOrdered = e.InOutDateOrdered;

            this.InOutIsPrinted = (e.InOutIsPrinted != null && e.InOutIsPrinted.HasValue) ? e.InOutIsPrinted.Value : default(bool);

			this.InOutMovementTypeId = e.InOutMovementTypeId;

			this.InOutMovementDate = e.InOutMovementDate;

			this.InOutBusinessPartnerId = e.InOutBusinessPartnerId;

			this.InOutWarehouseId = e.InOutWarehouseId;

			this.InOutPOReference = e.InOutPOReference;

			this.InOutShipperId = e.InOutShipperId;

			this.InOutDatePrinted = e.InOutDatePrinted;

			this.InOutSalesRepresentativeId = e.InOutSalesRepresentativeId;

            this.InOutNumberOfPackages = (e.InOutNumberOfPackages != null && e.InOutNumberOfPackages.HasValue) ? e.InOutNumberOfPackages.Value : default(int);

			this.InOutPickDate = e.InOutPickDate;

			this.InOutShipDate = e.InOutShipDate;

			this.InOutTrackingNumber = e.InOutTrackingNumber;

			this.InOutDateReceived = e.InOutDateReceived;

            this.InOutIsInTransit = (e.InOutIsInTransit != null && e.InOutIsInTransit.HasValue) ? e.InOutIsInTransit.Value : default(bool);

            this.InOutIsApproved = (e.InOutIsApproved != null && e.InOutIsApproved.HasValue) ? e.InOutIsApproved.Value : default(bool);

            this.InOutIsInDispute = (e.InOutIsInDispute != null && e.InOutIsInDispute.HasValue) ? e.InOutIsInDispute.Value : default(bool);

			this.InOutRmaDocumentNumber = e.InOutRmaDocumentNumber;

			this.InOutReversalDocumentNumber = e.InOutReversalDocumentNumber;

			this.InOutCreatedBy = e.InOutCreatedBy;

            this.InOutCreatedAt = (e.InOutCreatedAt != null && e.InOutCreatedAt.HasValue) ? e.InOutCreatedAt.Value : default(DateTime);

			this.InOutUpdatedBy = e.InOutUpdatedBy;

            this.InOutUpdatedAt = (e.InOutUpdatedAt != null && e.InOutUpdatedAt.HasValue) ? e.InOutUpdatedAt.Value : default(DateTime);

            this.InOutActive = (e.InOutActive != null && e.InOutActive.HasValue) ? e.InOutActive.Value : default(bool);

            this.InOutDeleted = (e.InOutDeleted != null && e.InOutDeleted.HasValue) ? e.InOutDeleted.Value : default(bool);

			this.Deleted = false;

			this.CreatedBy = e.CreatedBy;
			this.CreatedAt = e.CreatedAt;


		}


		public virtual void When(IInOutLineMvoStateMergePatched e)
		{
			ThrowOnWrongEvent(e);

			if (e.LocatorId == null)
			{
				if (e.IsPropertyLocatorIdRemoved)
				{
					this.LocatorId = default(string);
				}
			}
			else
			{
				this.LocatorId = e.LocatorId;
			}

			if (e.ProductId == null)
			{
				if (e.IsPropertyProductIdRemoved)
				{
					this.ProductId = default(string);
				}
			}
			else
			{
				this.ProductId = e.ProductId;
			}

			if (e.AttributeSetInstanceId == null)
			{
				if (e.IsPropertyAttributeSetInstanceIdRemoved)
				{
					this.AttributeSetInstanceId = default(string);
				}
			}
			else
			{
				this.AttributeSetInstanceId = e.AttributeSetInstanceId;
			}

			if (e.Description == null)
			{
				if (e.IsPropertyDescriptionRemoved)
				{
					this.Description = default(string);
				}
			}
			else
			{
				this.Description = e.Description;
			}

			if (e.UomId == null)
			{
				if (e.IsPropertyUomIdRemoved)
				{
					this.UomId = default(string);
				}
			}
			else
			{
				this.UomId = e.UomId;
			}

			if (e.MovementQuantity == null)
			{
				if (e.IsPropertyMovementQuantityRemoved)
				{
					this.MovementQuantity = default(decimal);
				}
			}
			else
			{
				this.MovementQuantity = (e.MovementQuantity != null && e.MovementQuantity.HasValue) ? e.MovementQuantity.Value : default(decimal);
			}

			if (e.ConfirmedQuantity == null)
			{
				if (e.IsPropertyConfirmedQuantityRemoved)
				{
					this.ConfirmedQuantity = default(decimal);
				}
			}
			else
			{
				this.ConfirmedQuantity = (e.ConfirmedQuantity != null && e.ConfirmedQuantity.HasValue) ? e.ConfirmedQuantity.Value : default(decimal);
			}

			if (e.ScrappedQuantity == null)
			{
				if (e.IsPropertyScrappedQuantityRemoved)
				{
					this.ScrappedQuantity = default(decimal);
				}
			}
			else
			{
				this.ScrappedQuantity = (e.ScrappedQuantity != null && e.ScrappedQuantity.HasValue) ? e.ScrappedQuantity.Value : default(decimal);
			}

			if (e.TargetQuantity == null)
			{
				if (e.IsPropertyTargetQuantityRemoved)
				{
					this.TargetQuantity = default(decimal);
				}
			}
			else
			{
				this.TargetQuantity = (e.TargetQuantity != null && e.TargetQuantity.HasValue) ? e.TargetQuantity.Value : default(decimal);
			}

			if (e.PickedQuantity == null)
			{
				if (e.IsPropertyPickedQuantityRemoved)
				{
					this.PickedQuantity = default(decimal);
				}
			}
			else
			{
				this.PickedQuantity = (e.PickedQuantity != null && e.PickedQuantity.HasValue) ? e.PickedQuantity.Value : default(decimal);
			}

			if (e.IsInvoiced == null)
			{
				if (e.IsPropertyIsInvoicedRemoved)
				{
					this.IsInvoiced = default(bool);
				}
			}
			else
			{
				this.IsInvoiced = (e.IsInvoiced != null && e.IsInvoiced.HasValue) ? e.IsInvoiced.Value : default(bool);
			}

			if (e.Processed == null)
			{
				if (e.IsPropertyProcessedRemoved)
				{
					this.Processed = default(bool);
				}
			}
			else
			{
				this.Processed = (e.Processed != null && e.Processed.HasValue) ? e.Processed.Value : default(bool);
			}

			if (e.QuantityEntered == null)
			{
				if (e.IsPropertyQuantityEnteredRemoved)
				{
					this.QuantityEntered = default(decimal);
				}
			}
			else
			{
				this.QuantityEntered = (e.QuantityEntered != null && e.QuantityEntered.HasValue) ? e.QuantityEntered.Value : default(decimal);
			}

			if (e.RmaLineNumber == null)
			{
				if (e.IsPropertyRmaLineNumberRemoved)
				{
					this.RmaLineNumber = default(long);
				}
			}
			else
			{
				this.RmaLineNumber = (e.RmaLineNumber != null && e.RmaLineNumber.HasValue) ? e.RmaLineNumber.Value : default(long);
			}

			if (e.ReversalLineNumber == null)
			{
				if (e.IsPropertyReversalLineNumberRemoved)
				{
					this.ReversalLineNumber = default(long);
				}
			}
			else
			{
				this.ReversalLineNumber = (e.ReversalLineNumber != null && e.ReversalLineNumber.HasValue) ? e.ReversalLineNumber.Value : default(long);
			}

			if (e.Version == null)
			{
				if (e.IsPropertyVersionRemoved)
				{
					this.Version = default(long);
				}
			}
			else
			{
				this.Version = (e.Version != null && e.Version.HasValue) ? e.Version.Value : default(long);
			}

			if (e.Active == null)
			{
				if (e.IsPropertyActiveRemoved)
				{
					this.Active = default(bool);
				}
			}
			else
			{
				this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);
			}

			if (e.InOutDocumentStatusId == null)
			{
				if (e.IsPropertyInOutDocumentStatusIdRemoved)
				{
					this.InOutDocumentStatusId = default(string);
				}
			}
			else
			{
				this.InOutDocumentStatusId = e.InOutDocumentStatusId;
			}

			if (e.InOutPosted == null)
			{
				if (e.IsPropertyInOutPostedRemoved)
				{
					this.InOutPosted = default(bool);
				}
			}
			else
			{
				this.InOutPosted = (e.InOutPosted != null && e.InOutPosted.HasValue) ? e.InOutPosted.Value : default(bool);
			}

			if (e.InOutProcessed == null)
			{
				if (e.IsPropertyInOutProcessedRemoved)
				{
					this.InOutProcessed = default(bool);
				}
			}
			else
			{
				this.InOutProcessed = (e.InOutProcessed != null && e.InOutProcessed.HasValue) ? e.InOutProcessed.Value : default(bool);
			}

			if (e.InOutProcessing == null)
			{
				if (e.IsPropertyInOutProcessingRemoved)
				{
					this.InOutProcessing = default(string);
				}
			}
			else
			{
				this.InOutProcessing = e.InOutProcessing;
			}

			if (e.InOutDocumentTypeId == null)
			{
				if (e.IsPropertyInOutDocumentTypeIdRemoved)
				{
					this.InOutDocumentTypeId = default(string);
				}
			}
			else
			{
				this.InOutDocumentTypeId = e.InOutDocumentTypeId;
			}

			if (e.InOutDescription == null)
			{
				if (e.IsPropertyInOutDescriptionRemoved)
				{
					this.InOutDescription = default(string);
				}
			}
			else
			{
				this.InOutDescription = e.InOutDescription;
			}

			if (e.InOutOrderId == null)
			{
				if (e.IsPropertyInOutOrderIdRemoved)
				{
					this.InOutOrderId = default(string);
				}
			}
			else
			{
				this.InOutOrderId = e.InOutOrderId;
			}

			if (e.InOutDateOrdered == null)
			{
				if (e.IsPropertyInOutDateOrderedRemoved)
				{
					this.InOutDateOrdered = default(DateTime?);
				}
			}
			else
			{
				this.InOutDateOrdered = e.InOutDateOrdered;
			}

			if (e.InOutIsPrinted == null)
			{
				if (e.IsPropertyInOutIsPrintedRemoved)
				{
					this.InOutIsPrinted = default(bool);
				}
			}
			else
			{
				this.InOutIsPrinted = (e.InOutIsPrinted != null && e.InOutIsPrinted.HasValue) ? e.InOutIsPrinted.Value : default(bool);
			}

			if (e.InOutMovementTypeId == null)
			{
				if (e.IsPropertyInOutMovementTypeIdRemoved)
				{
					this.InOutMovementTypeId = default(string);
				}
			}
			else
			{
				this.InOutMovementTypeId = e.InOutMovementTypeId;
			}

			if (e.InOutMovementDate == null)
			{
				if (e.IsPropertyInOutMovementDateRemoved)
				{
					this.InOutMovementDate = default(DateTime?);
				}
			}
			else
			{
				this.InOutMovementDate = e.InOutMovementDate;
			}

			if (e.InOutBusinessPartnerId == null)
			{
				if (e.IsPropertyInOutBusinessPartnerIdRemoved)
				{
					this.InOutBusinessPartnerId = default(string);
				}
			}
			else
			{
				this.InOutBusinessPartnerId = e.InOutBusinessPartnerId;
			}

			if (e.InOutWarehouseId == null)
			{
				if (e.IsPropertyInOutWarehouseIdRemoved)
				{
					this.InOutWarehouseId = default(string);
				}
			}
			else
			{
				this.InOutWarehouseId = e.InOutWarehouseId;
			}

			if (e.InOutPOReference == null)
			{
				if (e.IsPropertyInOutPOReferenceRemoved)
				{
					this.InOutPOReference = default(string);
				}
			}
			else
			{
				this.InOutPOReference = e.InOutPOReference;
			}

			if (e.InOutShipperId == null)
			{
				if (e.IsPropertyInOutShipperIdRemoved)
				{
					this.InOutShipperId = default(string);
				}
			}
			else
			{
				this.InOutShipperId = e.InOutShipperId;
			}

			if (e.InOutDatePrinted == null)
			{
				if (e.IsPropertyInOutDatePrintedRemoved)
				{
					this.InOutDatePrinted = default(DateTime?);
				}
			}
			else
			{
				this.InOutDatePrinted = e.InOutDatePrinted;
			}

			if (e.InOutSalesRepresentativeId == null)
			{
				if (e.IsPropertyInOutSalesRepresentativeIdRemoved)
				{
					this.InOutSalesRepresentativeId = default(string);
				}
			}
			else
			{
				this.InOutSalesRepresentativeId = e.InOutSalesRepresentativeId;
			}

			if (e.InOutNumberOfPackages == null)
			{
				if (e.IsPropertyInOutNumberOfPackagesRemoved)
				{
					this.InOutNumberOfPackages = default(int);
				}
			}
			else
			{
				this.InOutNumberOfPackages = (e.InOutNumberOfPackages != null && e.InOutNumberOfPackages.HasValue) ? e.InOutNumberOfPackages.Value : default(int);
			}

			if (e.InOutPickDate == null)
			{
				if (e.IsPropertyInOutPickDateRemoved)
				{
					this.InOutPickDate = default(DateTime?);
				}
			}
			else
			{
				this.InOutPickDate = e.InOutPickDate;
			}

			if (e.InOutShipDate == null)
			{
				if (e.IsPropertyInOutShipDateRemoved)
				{
					this.InOutShipDate = default(DateTime?);
				}
			}
			else
			{
				this.InOutShipDate = e.InOutShipDate;
			}

			if (e.InOutTrackingNumber == null)
			{
				if (e.IsPropertyInOutTrackingNumberRemoved)
				{
					this.InOutTrackingNumber = default(string);
				}
			}
			else
			{
				this.InOutTrackingNumber = e.InOutTrackingNumber;
			}

			if (e.InOutDateReceived == null)
			{
				if (e.IsPropertyInOutDateReceivedRemoved)
				{
					this.InOutDateReceived = default(DateTime?);
				}
			}
			else
			{
				this.InOutDateReceived = e.InOutDateReceived;
			}

			if (e.InOutIsInTransit == null)
			{
				if (e.IsPropertyInOutIsInTransitRemoved)
				{
					this.InOutIsInTransit = default(bool);
				}
			}
			else
			{
				this.InOutIsInTransit = (e.InOutIsInTransit != null && e.InOutIsInTransit.HasValue) ? e.InOutIsInTransit.Value : default(bool);
			}

			if (e.InOutIsApproved == null)
			{
				if (e.IsPropertyInOutIsApprovedRemoved)
				{
					this.InOutIsApproved = default(bool);
				}
			}
			else
			{
				this.InOutIsApproved = (e.InOutIsApproved != null && e.InOutIsApproved.HasValue) ? e.InOutIsApproved.Value : default(bool);
			}

			if (e.InOutIsInDispute == null)
			{
				if (e.IsPropertyInOutIsInDisputeRemoved)
				{
					this.InOutIsInDispute = default(bool);
				}
			}
			else
			{
				this.InOutIsInDispute = (e.InOutIsInDispute != null && e.InOutIsInDispute.HasValue) ? e.InOutIsInDispute.Value : default(bool);
			}

			if (e.InOutRmaDocumentNumber == null)
			{
				if (e.IsPropertyInOutRmaDocumentNumberRemoved)
				{
					this.InOutRmaDocumentNumber = default(string);
				}
			}
			else
			{
				this.InOutRmaDocumentNumber = e.InOutRmaDocumentNumber;
			}

			if (e.InOutReversalDocumentNumber == null)
			{
				if (e.IsPropertyInOutReversalDocumentNumberRemoved)
				{
					this.InOutReversalDocumentNumber = default(string);
				}
			}
			else
			{
				this.InOutReversalDocumentNumber = e.InOutReversalDocumentNumber;
			}

			if (e.InOutCreatedBy == null)
			{
				if (e.IsPropertyInOutCreatedByRemoved)
				{
					this.InOutCreatedBy = default(string);
				}
			}
			else
			{
				this.InOutCreatedBy = e.InOutCreatedBy;
			}

			if (e.InOutCreatedAt == null)
			{
				if (e.IsPropertyInOutCreatedAtRemoved)
				{
					this.InOutCreatedAt = default(DateTime);
				}
			}
			else
			{
				this.InOutCreatedAt = (e.InOutCreatedAt != null && e.InOutCreatedAt.HasValue) ? e.InOutCreatedAt.Value : default(DateTime);
			}

			if (e.InOutUpdatedBy == null)
			{
				if (e.IsPropertyInOutUpdatedByRemoved)
				{
					this.InOutUpdatedBy = default(string);
				}
			}
			else
			{
				this.InOutUpdatedBy = e.InOutUpdatedBy;
			}

			if (e.InOutUpdatedAt == null)
			{
				if (e.IsPropertyInOutUpdatedAtRemoved)
				{
					this.InOutUpdatedAt = default(DateTime);
				}
			}
			else
			{
				this.InOutUpdatedAt = (e.InOutUpdatedAt != null && e.InOutUpdatedAt.HasValue) ? e.InOutUpdatedAt.Value : default(DateTime);
			}

			if (e.InOutActive == null)
			{
				if (e.IsPropertyInOutActiveRemoved)
				{
					this.InOutActive = default(bool);
				}
			}
			else
			{
				this.InOutActive = (e.InOutActive != null && e.InOutActive.HasValue) ? e.InOutActive.Value : default(bool);
			}

			if (e.InOutDeleted == null)
			{
				if (e.IsPropertyInOutDeletedRemoved)
				{
					this.InOutDeleted = default(bool);
				}
			}
			else
			{
				this.InOutDeleted = (e.InOutDeleted != null && e.InOutDeleted.HasValue) ? e.InOutDeleted.Value : default(bool);
			}


			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;


		}

		public virtual void When(IInOutLineMvoStateDeleted e)
		{
			ThrowOnWrongEvent(e);

			this.Deleted = true;
			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;

		}


		public virtual void Mutate(IEvent e)
		{
            StateReadOnly = false;
			((dynamic)this).When((dynamic)e);
		}

        protected void ThrowOnWrongEvent(IInOutLineMvoStateEvent stateEvent)
        {
            var id = new System.Text.StringBuilder(); 
            id.Append("[").Append("InOutLineMvo|");

            var stateEntityId = this.InOutLineId; // Aggregate Id
            var eventEntityId = stateEvent.StateEventId.InOutLineId; // EntityBase.Aggregate.GetStateEventIdPropertyIdName();
            if (stateEntityId != eventEntityId)
            {
                throw DomainError.Named("mutateWrongEntity", "Entity Id {0} in state but entity id {1} in event", stateEntityId, eventEntityId);
            }
            id.Append(stateEntityId).Append(",");

            id.Append("]");

            var stateVersion = this.InOutVersion;
            var eventVersion = stateEvent.StateEventId.InOutVersion;
            if (stateVersion != eventVersion)
            {
                throw OptimisticConcurrencyException.Create(stateVersion, eventVersion, id.ToString());
            }
        }
    }

}

