// <autogenerated>
//   This file was generated by T4 code generator GenerateOrganizationStructureDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrganizationStructure;

namespace Dddml.Wms.Domain.OrganizationStructure
{

	public abstract class OrganizationStructureEventBase : IOrganizationStructureEvent
	{

		public virtual OrganizationStructureEventId OrganizationStructureEventId { get; set; }

        public virtual OrganizationStructureId Id
        {
            get { return OrganizationStructureEventId.Id; }
            set { OrganizationStructureEventId.Id = value; }
        }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		OrganizationStructureEventId IGlobalIdentity<OrganizationStructureEventId>.GlobalId {
			get
			{
				return this.OrganizationStructureEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IOrganizationStructureEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected OrganizationStructureEventBase()
        {
        }

        protected OrganizationStructureEventBase(OrganizationStructureEventId stateEventId)
        {
            this.OrganizationStructureEventId = stateEventId;
        }


        string IEventDto.EventType
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}

    public abstract class OrganizationStructureStateEventBase : OrganizationStructureEventBase, IOrganizationStructureStateEvent
    {

		public virtual bool? Active { get; set; }

        protected OrganizationStructureStateEventBase() : base()
        {
        }

        protected OrganizationStructureStateEventBase(OrganizationStructureEventId stateEventId) : base(stateEventId)
        {
        }

    }

	public class OrganizationStructureStateCreated : OrganizationStructureStateEventBase, IOrganizationStructureStateCreated
	{
		public OrganizationStructureStateCreated () : this(new OrganizationStructureEventId())
		{
		}

		public OrganizationStructureStateCreated (OrganizationStructureEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class OrganizationStructureStateMergePatched : OrganizationStructureStateEventBase, IOrganizationStructureStateMergePatched
	{
		public virtual bool IsPropertyActiveRemoved { get; set; }


		public OrganizationStructureStateMergePatched ()
		{
		}

		public OrganizationStructureStateMergePatched (OrganizationStructureEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class OrganizationStructureStateDeleted : OrganizationStructureStateEventBase, IOrganizationStructureStateDeleted
	{
		public OrganizationStructureStateDeleted ()
		{
		}

		public OrganizationStructureStateDeleted (OrganizationStructureEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }



	}



}

