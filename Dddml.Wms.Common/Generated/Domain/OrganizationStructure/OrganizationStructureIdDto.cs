// <autogenerated>
//   This file was generated by T4 code generator GenerateOrganizationStructureDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrganizationStructure;

namespace Dddml.Wms.Domain.OrganizationStructure
{

	public class OrganizationStructureIdDto
	{

		public OrganizationStructureIdDto()
		{
		}

        public virtual OrganizationStructureId ToOrganizationStructureId()
        {
            OrganizationStructureId v = new OrganizationStructureId();
            v.OrganizationStructureTypeId = this.OrganizationStructureTypeId;
            v.ParentId = this.ParentId;
            v.SubsidiaryId = this.SubsidiaryId;
            return v;
        }

		public virtual string OrganizationStructureTypeId { 
			get;
			set;
		}

		public virtual string ParentId { 
			get;
			set;
		}

		public virtual string SubsidiaryId { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			OrganizationStructureIdDto other = obj as OrganizationStructureIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.OrganizationStructureTypeId, other.OrganizationStructureTypeId)
				&& Object.Equals (this.ParentId, other.ParentId)
				&& Object.Equals (this.SubsidiaryId, other.SubsidiaryId)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.OrganizationStructureTypeId != null) {
				hash += 13 * this.OrganizationStructureTypeId.GetHashCode ();
			}
			if (this.ParentId != null) {
				hash += 13 * this.ParentId.GetHashCode ();
			}
			if (this.SubsidiaryId != null) {
				hash += 13 * this.SubsidiaryId.GetHashCode ();
			}
			return hash;
		}

	}

}


