// <autogenerated>
//   This file was generated by T4 code generator GenerateOrganizationStructureDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrganizationStructure;

namespace Dddml.Wms.Domain.OrganizationStructure
{

	public class OrganizationStructureEventIdFlattenedDto : IIdFlattenedDto
	{

        private static string[] _flattenedPropertyNames = new string[] { "IdOrganizationStructureTypeId", "IdParentId", "IdSubsidiaryId", "Version" };

        string[] IIdFlattenedDto.FieldNames
        {
            get { return _flattenedPropertyNames; }
        }

        object IIdFlattenedDto.GetFieldValue(string fieldName)
        {
            return ReflectUtils.GetPropertyValue(fieldName, this._value);
        }

        void IIdFlattenedDto.SetFieldValue(string fieldName, object fieldValue)
        {
            ReflectUtils.SetPropertyValue(fieldName, this._value, fieldValue);
        }

        Type IIdFlattenedDto.GetFieldType(string fieldName)
        {
            if (fieldName.Equals("IdOrganizationStructureTypeId", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(string);
            }

            if (fieldName.Equals("IdParentId", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(string);
            }

            if (fieldName.Equals("IdSubsidiaryId", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(string);
            }

            if (fieldName.Equals("Version", StringComparison.InvariantCultureIgnoreCase))
            {
                return typeof(long);
            }

            throw new ArgumentException(String.Format("Unknown fileName: {0}", fieldName));
        }


        private OrganizationStructureEventIdDto _value = new OrganizationStructureEventIdDto();

		public OrganizationStructureEventIdFlattenedDto()
		{
		}

		public OrganizationStructureEventIdFlattenedDto(OrganizationStructureEventIdDto val)
		{
			this._value = val;
		}

        public OrganizationStructureEventIdDto ToOrganizationStructureEventIdDto()
        {
            return this._value;
        }

		public OrganizationStructureEventIdFlattenedDto(OrganizationStructureEventId val)
		{
			this._value = new OrganizationStructureEventIdDtoWrapper(val);
		}

        public OrganizationStructureEventId ToOrganizationStructureEventId()
        {
            return this._value.ToOrganizationStructureEventId();
        }

		public virtual string IdOrganizationStructureTypeId {
			get { return _value.Id.OrganizationStructureTypeId; }
			set { _value.Id.OrganizationStructureTypeId = value; }
		}

		public virtual string IdParentId {
			get { return _value.Id.ParentId; }
			set { _value.Id.ParentId = value; }
		}

		public virtual string IdSubsidiaryId {
			get { return _value.Id.SubsidiaryId; }
			set { _value.Id.SubsidiaryId = value; }
		}

		public virtual long Version { 
			get { return _value.Version; } 
			set { _value.Version = value; } 
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			OrganizationStructureEventIdFlattenedDto other = obj as OrganizationStructureEventIdFlattenedDto;
			if (other == null) {
				return false;
			}

            return _value.Equals(other._value);

		}

		public override int GetHashCode ()
		{
			return _value.GetHashCode();
		}

	}

    public class OrganizationStructureEventIdFlattenedDtoFormatter : IdFlattenedDtoFormatterBase<OrganizationStructureEventIdFlattenedDto>
    {

    }

}


