// <autogenerated>
//   This file was generated by T4 code generator GenerateOrganizationStructureDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrganizationStructure;

namespace Dddml.Wms.Domain.OrganizationStructure
{

	public class OrganizationStructureId
	{

		private string _organizationStructureTypeId;

		public virtual string OrganizationStructureTypeId { 
			get { return this._organizationStructureTypeId; } 
			internal set { _organizationStructureTypeId = value; } 
		}

		private string _parentId;

		public virtual string ParentId { 
			get { return this._parentId; } 
			internal set { _parentId = value; } 
		}

		private string _subsidiaryId;

		public virtual string SubsidiaryId { 
			get { return this._subsidiaryId; } 
			internal set { _subsidiaryId = value; } 
		}


        #region  Flattened Properties


        #endregion

		internal OrganizationStructureId ()
		{
		}

		public OrganizationStructureId (string organizationStructureTypeId, string parentId, string subsidiaryId)
		{
			this._organizationStructureTypeId = organizationStructureTypeId;
			this._parentId = parentId;
			this._subsidiaryId = subsidiaryId;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			OrganizationStructureId other = obj as OrganizationStructureId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.OrganizationStructureTypeId, other.OrganizationStructureTypeId)
				&& Object.Equals (this.ParentId, other.ParentId)
				&& Object.Equals (this.SubsidiaryId, other.SubsidiaryId)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.OrganizationStructureTypeId != null) {
				hash += 13 * this.OrganizationStructureTypeId.GetHashCode ();
			}
			if (this.ParentId != null) {
				hash += 13 * this.ParentId.GetHashCode ();
			}
			if (this.SubsidiaryId != null) {
				hash += 13 * this.SubsidiaryId.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(OrganizationStructureId obj1, OrganizationStructureId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(OrganizationStructureId obj1, OrganizationStructureId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

	}

}


