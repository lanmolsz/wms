// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public class ShipmentReceiptEventIdDto
	{

		public ShipmentReceiptEventIdDto()
		{
		}

        public virtual ShipmentReceiptEventId ToShipmentReceiptEventId()
        {
            ShipmentReceiptEventId v = new ShipmentReceiptEventId();
            v.ShipmentId = this.ShipmentId;
            v.ReceiptSeqId = this.ReceiptSeqId;
            v.ShipmentVersion = this.ShipmentVersion;
            return v;
        }

		public virtual string ShipmentId { 
			get;
			set;
		}

		public virtual string ReceiptSeqId { 
			get;
			set;
		}

		public virtual long ShipmentVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			ShipmentReceiptEventIdDto other = obj as ShipmentReceiptEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.ShipmentId, other.ShipmentId)
				&& Object.Equals (this.ReceiptSeqId, other.ReceiptSeqId)
				&& Object.Equals (this.ShipmentVersion, other.ShipmentVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.ShipmentId != null) {
				hash += 13 * this.ShipmentId.GetHashCode ();
			}
			if (this.ReceiptSeqId != null) {
				hash += 13 * this.ReceiptSeqId.GetHashCode ();
			}
			if (this.ShipmentVersion != null) {
				hash += 13 * this.ShipmentVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


