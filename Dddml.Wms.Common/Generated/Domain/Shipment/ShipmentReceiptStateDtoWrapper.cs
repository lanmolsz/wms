// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public partial class ShipmentReceiptStateDtoWrapper : StateDtoWrapperBase, IShipmentReceiptStateDto, IShipmentReceiptState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IShipmentReceiptState _state;

        public ShipmentReceiptStateDtoWrapper()
        {
            this._state = new ShipmentReceiptState();
        }

		public ShipmentReceiptStateDtoWrapper(IShipmentReceiptState state)
		{
            this._state = state;
		}

		public IShipmentReceiptState ToShipmentReceiptState()
		{
			return this._state;
		}

		public virtual string ReceiptSeqId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ReceiptSeqId"))
                {
                    return _state.ReceiptSeqId;
                }
                return null;
            }
            set
            {
                _state.ReceiptSeqId = value;
            }
        }

        string IShipmentReceiptStateProperties.ReceiptSeqId
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).ReceiptSeqId;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).ReceiptSeqId = value;
            }
        }

		public virtual string ProductId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductId"))
                {
                    return _state.ProductId;
                }
                return null;
            }
            set
            {
                _state.ProductId = value;
            }
        }

        string IShipmentReceiptStateProperties.ProductId
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).ProductId;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).ProductId = value;
            }
        }

		public virtual string ShipmentItemSeqId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentItemSeqId"))
                {
                    return _state.ShipmentItemSeqId;
                }
                return null;
            }
            set
            {
                _state.ShipmentItemSeqId = value;
            }
        }

        string IShipmentReceiptStateProperties.ShipmentItemSeqId
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).ShipmentItemSeqId;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).ShipmentItemSeqId = value;
            }
        }

		public virtual string RejectionId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("RejectionId"))
                {
                    return _state.RejectionId;
                }
                return null;
            }
            set
            {
                _state.RejectionId = value;
            }
        }

        string IShipmentReceiptStateProperties.RejectionId
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).RejectionId;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).RejectionId = value;
            }
        }

		public virtual string ItemDescription
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ItemDescription"))
                {
                    return _state.ItemDescription;
                }
                return null;
            }
            set
            {
                _state.ItemDescription = value;
            }
        }

        string IShipmentReceiptStateProperties.ItemDescription
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).ItemDescription;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).ItemDescription = value;
            }
        }

		public virtual decimal? AcceptedQuantity
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AcceptedQuantity"))
                {
                    return _state.AcceptedQuantity;
                }
                return null;
            }
            set
            {
                _state.AcceptedQuantity = value;
            }
        }

        decimal? IShipmentReceiptStateProperties.AcceptedQuantity
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).AcceptedQuantity;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).AcceptedQuantity = value;
            }
        }

		public virtual decimal? RejectedQuantity
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("RejectedQuantity"))
                {
                    return _state.RejectedQuantity;
                }
                return null;
            }
            set
            {
                _state.RejectedQuantity = value;
            }
        }

        decimal? IShipmentReceiptStateProperties.RejectedQuantity
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).RejectedQuantity;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).RejectedQuantity = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IShipmentReceiptStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IShipmentReceiptStateProperties).Active = value.Value;
                }
            }
        }

        bool IShipmentReceiptStateProperties.Active
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).Active;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IShipmentReceiptStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IShipmentReceiptStateProperties).Version = value.Value;
                }
            }
        }

        long IShipmentReceiptStateProperties.Version
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).Version;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).Version = value;
            }
        }

		public virtual string ShipmentId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentId"))
                {
                    return _state.ShipmentId;
                }
                return null;
            }
            set
            {
                _state.ShipmentId = value;
            }
        }

        string IShipmentReceiptStateProperties.ShipmentId
        {
            get 
            {
                return (this._state as IShipmentReceiptStateProperties).ShipmentId;
            }
            set 
            {
                (this._state as IShipmentReceiptStateProperties).ShipmentId = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation


		ShipmentReceiptId IGlobalIdentity<ShipmentReceiptId>.GlobalId {
			get { return (_state as IShipmentReceiptState).GlobalId; }
		}

        string ILocalIdentity<string>.LocalId
        {
			get { return (_state as IShipmentReceiptState).LocalId; }
        }

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IShipmentReceiptState).CreatedBy; }
            set { (_state as IShipmentReceiptState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IShipmentReceiptState).CreatedAt; }
            set { (_state as IShipmentReceiptState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IShipmentReceiptState).UpdatedBy; }
            set { (_state as IShipmentReceiptState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IShipmentReceiptState).UpdatedAt; }
            set { (_state as IShipmentReceiptState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IEntityVersioned<long>.EntityVersion
		{
            get { return (_state as IShipmentReceiptStateProperties).Version; }
		}

		#endregion

        bool IShipmentReceiptState.IsUnsaved
        {
            get { return this.Version == ShipmentReceiptState.VersionZero; }
        }

		void IShipmentReceiptState.When(IShipmentReceiptStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IShipmentReceiptState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IShipmentReceiptState.When(IShipmentReceiptStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IShipmentReceiptState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class ShipmentReceiptStateDtoWrapperCollection : StateDtoWrapperCollectionBase<ShipmentReceiptStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(ShipmentReceiptStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

