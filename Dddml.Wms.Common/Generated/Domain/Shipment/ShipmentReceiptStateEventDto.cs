// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public abstract class ShipmentReceiptStateEventDtoBase : IStateEventDto, IShipmentReceiptStateCreated, IShipmentReceiptStateMergePatched
	{

        private ShipmentReceiptStateEventIdDto _stateEventId;

		protected internal virtual ShipmentReceiptStateEventIdDto StateEventId 
        {
            get 
            {
                if (_stateEventId == null) { _stateEventId = new ShipmentReceiptStateEventIdDto(); }
                return _stateEventId;
            }
            set
            {
                _stateEventId = value;
            }
        }

        public virtual string ReceiptSeqId
        {
            get { return StateEventId.ReceiptSeqId; }
            set { StateEventId.ReceiptSeqId = value; }
        }

		public virtual string ProductId { get; set; }

		public virtual string ShipmentItemSeqId { get; set; }

		public virtual string RejectionId { get; set; }

		public virtual string ItemDescription { get; set; }

		public virtual decimal? AcceptedQuantity { get; set; }

		public virtual decimal? RejectedQuantity { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		ShipmentReceiptStateEventId IGlobalIdentity<ShipmentReceiptStateEventId>.GlobalId {
			get 
			{
				return this.StateEventId.ToShipmentReceiptStateEventId();
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IShipmentReceiptStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }

		public virtual bool? IsPropertyProductIdRemoved { get; set; }

        bool IShipmentReceiptStateMergePatched.IsPropertyProductIdRemoved
        {
            get 
            {
                var b = this.IsPropertyProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyShipmentItemSeqIdRemoved { get; set; }

        bool IShipmentReceiptStateMergePatched.IsPropertyShipmentItemSeqIdRemoved
        {
            get 
            {
                var b = this.IsPropertyShipmentItemSeqIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyShipmentItemSeqIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyRejectionIdRemoved { get; set; }

        bool IShipmentReceiptStateMergePatched.IsPropertyRejectionIdRemoved
        {
            get 
            {
                var b = this.IsPropertyRejectionIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyRejectionIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyItemDescriptionRemoved { get; set; }

        bool IShipmentReceiptStateMergePatched.IsPropertyItemDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyItemDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyItemDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyAcceptedQuantityRemoved { get; set; }

        bool IShipmentReceiptStateMergePatched.IsPropertyAcceptedQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyAcceptedQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyAcceptedQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyRejectedQuantityRemoved { get; set; }

        bool IShipmentReceiptStateMergePatched.IsPropertyRejectedQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyRejectedQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyRejectedQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IShipmentReceiptStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        ShipmentReceiptStateEventId IShipmentReceiptStateEvent.StateEventId
        {
            get { return this.StateEventId.ToShipmentReceiptStateEventId(); }
        }

        protected ShipmentReceiptStateEventDtoBase()
        {
        }

        protected ShipmentReceiptStateEventDtoBase(ShipmentReceiptStateEventIdDto stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto : ShipmentReceiptStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class ShipmentReceiptStateCreatedDto : ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto
	{
		public ShipmentReceiptStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class ShipmentReceiptStateMergePatchedDto : ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto
	{
		public ShipmentReceiptStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class ShipmentReceiptStateRemovedDto : ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto
	{
		public ShipmentReceiptStateRemovedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }

	}


    public partial class ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDtos : IEnumerable<IShipmentReceiptStateCreated>, IEnumerable<IShipmentReceiptStateMergePatched>
    {
        private List<ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto> _innerStateEvents = new List<ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto>();

        public virtual ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentReceiptStateCreated> IEnumerable<IShipmentReceiptStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentReceiptStateMergePatched> IEnumerable<IShipmentReceiptStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }


        public void AddShipmentReceiptEvent(IShipmentReceiptStateCreated e)
        {
            _innerStateEvents.Add((ShipmentReceiptStateCreatedDto)e);
        }

        public void AddShipmentReceiptEvent(IShipmentReceiptStateEvent e)
        {
            _innerStateEvents.Add((ShipmentReceiptStateCreatedOrMergePatchedOrRemovedDto)e);
        }


    }


}

