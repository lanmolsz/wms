// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public class ImportingShipmentItem
	{

		private string _productId;

		public virtual string ProductId { 
			get { return this._productId; } 
			set { _productId = value; } 
		}

		private decimal? _quantity;

		public virtual decimal? Quantity { 
			get { return this._quantity; } 
			set { _quantity = value; } 
		}

		private decimal? _targetQuantity;

		public virtual decimal? TargetQuantity { 
			get { return this._targetQuantity; } 
			set { _targetQuantity = value; } 
		}

		private string _shipmentContentDescription;

		public virtual string ShipmentContentDescription { 
			get { return this._shipmentContentDescription; } 
			set { _shipmentContentDescription = value; } 
		}

		private IDictionary<string, object> _attributeSetInstance;

		public virtual IDictionary<string, object> AttributeSetInstance { 
			get { return this._attributeSetInstance; } 
			set { _attributeSetInstance = value; } 
		}


        #region  Flattened Properties


        #endregion

		public ImportingShipmentItem ()
		{
		}

		public ImportingShipmentItem (string productId, decimal? quantity, decimal? targetQuantity, string shipmentContentDescription, IDictionary<string, object> attributeSetInstance)
		{
			this._productId = productId;
			this._quantity = quantity;
			this._targetQuantity = targetQuantity;
			this._shipmentContentDescription = shipmentContentDescription;
			this._attributeSetInstance = attributeSetInstance;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			ImportingShipmentItem other = obj as ImportingShipmentItem;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.ProductId, other.ProductId)
				&& Object.Equals (this.Quantity, other.Quantity)
				&& Object.Equals (this.TargetQuantity, other.TargetQuantity)
				&& Object.Equals (this.ShipmentContentDescription, other.ShipmentContentDescription)
				&& Object.Equals (this.AttributeSetInstance, other.AttributeSetInstance)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.ProductId != null) {
				hash += 13 * this.ProductId.GetHashCode ();
			}
			if (this.Quantity != null) {
				hash += 13 * this.Quantity.GetHashCode ();
			}
			if (this.TargetQuantity != null) {
				hash += 13 * this.TargetQuantity.GetHashCode ();
			}
			if (this.ShipmentContentDescription != null) {
				hash += 13 * this.ShipmentContentDescription.GetHashCode ();
			}
			if (this.AttributeSetInstance != null) {
				hash += 13 * this.AttributeSetInstance.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(ImportingShipmentItem obj1, ImportingShipmentItem obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(ImportingShipmentItem obj1, ImportingShipmentItem obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "ProductId: " + this.ProductId + ", "
                + "Quantity: " + this.Quantity + ", "
                + "TargetQuantity: " + this.TargetQuantity + ", "
                + "ShipmentContentDescription: " + this.ShipmentContentDescription + ", "
                + "AttributeSetInstance: " + this.AttributeSetInstance + ", "
                ;
        }
	}

}


