// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public abstract class ShipmentItemCommandDtoBase : ICommandDto, ICreateShipmentItem, IMergePatchShipmentItem, IRemoveShipmentItem
	{

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string ShipmentItemSeqId { get; set; }

		public virtual string ProductId { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual decimal? Quantity { get; set; }

		public virtual string ShipmentContentDescription { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string ShipmentId { get; set; }

		public virtual bool? IsPropertyProductIdRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyProductIdRemoved
        {
            get
            {
                var b = this.IsPropertyProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyAttributeSetInstanceIdRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyAttributeSetInstanceIdRemoved
        {
            get
            {
                var b = this.IsPropertyAttributeSetInstanceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyAttributeSetInstanceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyQuantityRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyShipmentContentDescriptionRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyShipmentContentDescriptionRemoved
        {
            get
            {
                var b = this.IsPropertyShipmentContentDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyShipmentContentDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrRemoveShipmentItemDto : ShipmentItemCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateShipmentItemDto : CreateOrMergePatchOrRemoveShipmentItemDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchShipmentItemDto : CreateOrMergePatchOrRemoveShipmentItemDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class RemoveShipmentItemDto : CreateOrMergePatchOrRemoveShipmentItemDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Remove;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}


    public partial class CreateOrMergePatchOrRemoveShipmentItemDtos : IShipmentItemCommands, ICreateShipmentItemCommands, IEnumerable<CreateOrMergePatchOrRemoveShipmentItemDto>
    {
        private List<CreateOrMergePatchOrRemoveShipmentItemDto> _innerCommands = new List<CreateOrMergePatchOrRemoveShipmentItemDto>();

        public virtual CreateOrMergePatchOrRemoveShipmentItemDto[] ToArray()
        {
            return _innerCommands.ToArray();
        }

        public virtual void Clear()
        {
            _innerCommands.Clear();
        }

        public virtual void AddRange(IEnumerable<CreateOrMergePatchOrRemoveShipmentItemDto> cs)
        {
            _innerCommands.AddRange(cs);
        }

        void IShipmentItemCommands.Add(IShipmentItemCommand c)
        {
            _innerCommands.Add((CreateOrMergePatchOrRemoveShipmentItemDto)c);
        }

        void IShipmentItemCommands.Remove(IShipmentItemCommand c)
        {
            _innerCommands.Remove((CreateOrMergePatchOrRemoveShipmentItemDto)c);
        }


        IEnumerator<CreateOrMergePatchOrRemoveShipmentItemDto> IEnumerable<CreateOrMergePatchOrRemoveShipmentItemDto>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        IEnumerator<IShipmentItemCommand> IEnumerable<IShipmentItemCommand>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        void ICreateShipmentItemCommands.Add(ICreateShipmentItem c)
        {
            _innerCommands.Add((CreateShipmentItemDto)c);
        }

        void ICreateShipmentItemCommands.Remove(ICreateShipmentItem c)
        {
            _innerCommands.Remove((CreateShipmentItemDto)c);
        }

        IEnumerator<ICreateShipmentItem> IEnumerable<ICreateShipmentItem>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

}

