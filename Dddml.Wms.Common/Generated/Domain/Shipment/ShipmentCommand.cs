// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public abstract class ShipmentCommandBase : IShipmentCommand
	{
		public virtual string ShipmentId { get; set; }


		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return this.ShipmentId;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string ShipmentTypeId { get; set; }

		public virtual string StatusId { get; set; }

		public virtual string PrimaryOrderId { get; set; }

		public virtual string PrimaryReturnId { get; set; }

		public virtual string PicklistBinId { get; set; }

		public virtual DateTime? EstimatedReadyDate { get; set; }

		public virtual DateTime? EstimatedShipDate { get; set; }

		public virtual string EstimatedShipWorkEffId { get; set; }

		public virtual DateTime? EstimatedArrivalDate { get; set; }

		public virtual string EstimatedArrivalWorkEffId { get; set; }

		public virtual DateTime? LatestCancelDate { get; set; }

		public virtual decimal? EstimatedShipCost { get; set; }

		public virtual string CurrencyUomId { get; set; }

		public virtual string HandlingInstructions { get; set; }

		public virtual string OriginFacilityId { get; set; }

		public virtual string DestinationFacilityId { get; set; }

		public virtual string OriginContactMechId { get; set; }

		public virtual string OriginTelecomNumberId { get; set; }

		public virtual string DestinationContactMechId { get; set; }

		public virtual string DestinationTelecomNumberId { get; set; }

		public virtual string PartyIdTo { get; set; }

		public virtual string PartyIdFrom { get; set; }

		public virtual decimal? AdditionalShippingCharge { get; set; }

		public virtual string AddtlShippingChargeDesc { get; set; }

		public virtual bool? Active { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreateShipment : ShipmentCommandBase, ICreateShipment
	{
		
		public CreateShipment ()
		{
		}


        private CreateShipmentItemCommands _shipmentItems = new CreateShipmentItemCommands();

        public ICreateShipmentItemCommands ShipmentItems
        {
            get
            {
                return this._shipmentItems;
            }
        }

        public CreateShipmentItem NewCreateShipmentItem()
        {
            var c = new CreateShipmentItem();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        ICreateShipmentItem ICreateShipment.NewCreateShipmentItem()
        {
            return this.NewCreateShipmentItem();
        }



        private CreateShipmentReceiptCommands _shipmentReceipts = new CreateShipmentReceiptCommands();

        public ICreateShipmentReceiptCommands ShipmentReceipts
        {
            get
            {
                return this._shipmentReceipts;
            }
        }

        public CreateShipmentReceipt NewCreateShipmentReceipt()
        {
            var c = new CreateShipmentReceipt();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        ICreateShipmentReceipt ICreateShipment.NewCreateShipmentReceipt()
        {
            return this.NewCreateShipmentReceipt();
        }



        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchShipment :ShipmentCommandBase, IMergePatchShipment
	{

		public virtual bool IsPropertyShipmentTypeIdRemoved { get; set; }

		public virtual bool IsPropertyStatusIdRemoved { get; set; }

		public virtual bool IsPropertyPrimaryOrderIdRemoved { get; set; }

		public virtual bool IsPropertyPrimaryReturnIdRemoved { get; set; }

		public virtual bool IsPropertyPicklistBinIdRemoved { get; set; }

		public virtual bool IsPropertyEstimatedReadyDateRemoved { get; set; }

		public virtual bool IsPropertyEstimatedShipDateRemoved { get; set; }

		public virtual bool IsPropertyEstimatedShipWorkEffIdRemoved { get; set; }

		public virtual bool IsPropertyEstimatedArrivalDateRemoved { get; set; }

		public virtual bool IsPropertyEstimatedArrivalWorkEffIdRemoved { get; set; }

		public virtual bool IsPropertyLatestCancelDateRemoved { get; set; }

		public virtual bool IsPropertyEstimatedShipCostRemoved { get; set; }

		public virtual bool IsPropertyCurrencyUomIdRemoved { get; set; }

		public virtual bool IsPropertyHandlingInstructionsRemoved { get; set; }

		public virtual bool IsPropertyOriginFacilityIdRemoved { get; set; }

		public virtual bool IsPropertyDestinationFacilityIdRemoved { get; set; }

		public virtual bool IsPropertyOriginContactMechIdRemoved { get; set; }

		public virtual bool IsPropertyOriginTelecomNumberIdRemoved { get; set; }

		public virtual bool IsPropertyDestinationContactMechIdRemoved { get; set; }

		public virtual bool IsPropertyDestinationTelecomNumberIdRemoved { get; set; }

		public virtual bool IsPropertyPartyIdToRemoved { get; set; }

		public virtual bool IsPropertyPartyIdFromRemoved { get; set; }

		public virtual bool IsPropertyAdditionalShippingChargeRemoved { get; set; }

		public virtual bool IsPropertyAddtlShippingChargeDescRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchShipment ()
		{
		}

        private ShipmentItemCommands _shipmentItemCommands = new ShipmentItemCommands();

        public IShipmentItemCommands ShipmentItemCommands
        {
            get
            {
                return this._shipmentItemCommands;
            }
        }


        public CreateShipmentItem NewCreateShipmentItem()
        {
            var c = new CreateShipmentItem();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        ICreateShipmentItem IMergePatchShipment.NewCreateShipmentItem()
        {
            return this.NewCreateShipmentItem();
        }

        public MergePatchShipmentItem NewMergePatchShipmentItem()
        {
            var c = new MergePatchShipmentItem();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        IMergePatchShipmentItem IMergePatchShipment.NewMergePatchShipmentItem()
        {
            return this.NewMergePatchShipmentItem();
        }


        public RemoveShipmentItem NewRemoveShipmentItem()
        {
            var c = new RemoveShipmentItem();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        IRemoveShipmentItem IMergePatchShipment.NewRemoveShipmentItem()
        {
            return this.NewRemoveShipmentItem();
        }


        private ShipmentReceiptCommands _shipmentReceiptCommands = new ShipmentReceiptCommands();

        public IShipmentReceiptCommands ShipmentReceiptCommands
        {
            get
            {
                return this._shipmentReceiptCommands;
            }
        }


        public CreateShipmentReceipt NewCreateShipmentReceipt()
        {
            var c = new CreateShipmentReceipt();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        ICreateShipmentReceipt IMergePatchShipment.NewCreateShipmentReceipt()
        {
            return this.NewCreateShipmentReceipt();
        }

        public MergePatchShipmentReceipt NewMergePatchShipmentReceipt()
        {
            var c = new MergePatchShipmentReceipt();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        IMergePatchShipmentReceipt IMergePatchShipment.NewMergePatchShipmentReceipt()
        {
            return this.NewMergePatchShipmentReceipt();
        }


        public RemoveShipmentReceipt NewRemoveShipmentReceipt()
        {
            var c = new RemoveShipmentReceipt();
            c.ShipmentId = this.ShipmentId;

            return c;
        }

        IRemoveShipmentReceipt IMergePatchShipment.NewRemoveShipmentReceipt()
        {
            return this.NewRemoveShipmentReceipt();
        }


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteShipment : ShipmentCommandBase, IDeleteShipment
	{
		public DeleteShipment ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }

	}


    public class CreateShipmentItemCommands : ICreateShipmentItemCommands
    {
        private List<ICreateShipmentItem> _innerCommands = new List<ICreateShipmentItem>();

        public void Add(ICreateShipmentItem c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreateShipmentItem c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreateShipmentItem> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class ShipmentItemCommands : IShipmentItemCommands
    {
        private List<IShipmentItemCommand> _innerCommands = new List<IShipmentItemCommand>();

        public void Add(IShipmentItemCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IShipmentItemCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IShipmentItemCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }


    public class CreateShipmentReceiptCommands : ICreateShipmentReceiptCommands
    {
        private List<ICreateShipmentReceipt> _innerCommands = new List<ICreateShipmentReceipt>();

        public void Add(ICreateShipmentReceipt c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreateShipmentReceipt c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreateShipmentReceipt> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class ShipmentReceiptCommands : IShipmentReceiptCommands
    {
        private List<IShipmentReceiptCommand> _innerCommands = new List<IShipmentReceiptCommand>();

        public void Add(IShipmentReceiptCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IShipmentReceiptCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IShipmentReceiptCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public static partial class ShipmentCommands
    {
    }

}
