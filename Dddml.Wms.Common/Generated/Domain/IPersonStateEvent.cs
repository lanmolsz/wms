// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{
	public interface IPersonStateEvent : IEvent, IStateEventDto, IGlobalIdentity<PersonStateEventId>, ICreated<string>
	{
		PersonStateEventId StateEventId { get; }

        bool ReadOnly { get; set; }

		DateTime? BirthDate { get; set; }

		PersonalName Loves { get; set; }

		Contact EmergencyContact { get; set; }

		bool? Active { get; set; }

	}

	public interface IPersonStateCreated : IPersonStateEvent//, IPersonStateProperties
	{
		IEnumerable<IYearPlanStateCreated> YearPlanEvents { get; }
		
		void AddYearPlanEvent(IYearPlanStateCreated e);

		IYearPlanStateCreated NewYearPlanStateCreated(int year);

	
	}


	public interface IPersonStateMergePatched : IPersonStateEvent//, IPersonStateProperties
	{
		bool IsPropertyBirthDateRemoved { get; set; }

		bool IsPropertyLovesRemoved { get; set; }

		bool IsPropertyEmergencyContactRemoved { get; set; }

		bool IsPropertyActiveRemoved { get; set; }

		IEnumerable<IYearPlanStateEvent> YearPlanEvents { get; }
		
		void AddYearPlanEvent(IYearPlanStateEvent e);

		IYearPlanStateCreated NewYearPlanStateCreated(int year);

		IYearPlanStateMergePatched NewYearPlanStateMergePatched(int year);

		IYearPlanStateRemoved NewYearPlanStateRemoved(int year);


	}

	public interface IPersonStateDeleted : IPersonStateEvent
	{
		IEnumerable<IYearPlanStateRemoved> YearPlanEvents { get; }
		
		void AddYearPlanEvent(IYearPlanStateRemoved e);
		
		IYearPlanStateRemoved NewYearPlanStateRemoved(int year);

	}


}

