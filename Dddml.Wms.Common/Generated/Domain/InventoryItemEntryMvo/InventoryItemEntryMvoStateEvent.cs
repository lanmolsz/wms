// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemEntryMvo;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryItemEntryMvo
{

	public abstract class InventoryItemEntryMvoStateEventBase : IInventoryItemEntryMvoStateEvent
	{

		public virtual InventoryItemEntryMvoStateEventId StateEventId { get; set; }

        public virtual InventoryItemEntryId InventoryItemEntryId
        {
            get { return StateEventId.InventoryItemEntryId; }
            set { StateEventId.InventoryItemEntryId = value; }
        }

		public virtual decimal? QuantityOnHand { get; set; }

		public virtual decimal? QuantityReserved { get; set; }

		public virtual decimal? QuantityOccupied { get; set; }

		public virtual decimal? QuantityVirtual { get; set; }

		public virtual InventoryItemSourceVO Source { get; set; }

		public virtual long? Version { get; set; }

		public virtual decimal? InventoryItemQuantityOnHand { get; set; }

		public virtual decimal? InventoryItemQuantityReserved { get; set; }

		public virtual decimal? InventoryItemQuantityOccupied { get; set; }

		public virtual decimal? InventoryItemQuantityVirtual { get; set; }

		public virtual string InventoryItemCreatedBy { get; set; }

		public virtual DateTime? InventoryItemCreatedAt { get; set; }

		public virtual string InventoryItemUpdatedBy { get; set; }

		public virtual DateTime? InventoryItemUpdatedAt { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		InventoryItemEntryMvoStateEventId IGlobalIdentity<InventoryItemEntryMvoStateEventId>.GlobalId {
			get
			{
				return this.StateEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IInventoryItemEntryMvoStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected InventoryItemEntryMvoStateEventBase()
        {
        }

        protected InventoryItemEntryMvoStateEventBase(InventoryItemEntryMvoStateEventId stateEventId)
        {
            this.StateEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class InventoryItemEntryMvoStateCreated : InventoryItemEntryMvoStateEventBase, IInventoryItemEntryMvoStateCreated
	{
		public InventoryItemEntryMvoStateCreated () : this(new InventoryItemEntryMvoStateEventId())
		{
		}

		public InventoryItemEntryMvoStateCreated (InventoryItemEntryMvoStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class InventoryItemEntryMvoStateMergePatched : InventoryItemEntryMvoStateEventBase, IInventoryItemEntryMvoStateMergePatched
	{
		public virtual bool IsPropertyQuantityOnHandRemoved { get; set; }

		public virtual bool IsPropertyQuantityReservedRemoved { get; set; }

		public virtual bool IsPropertyQuantityOccupiedRemoved { get; set; }

		public virtual bool IsPropertyQuantityVirtualRemoved { get; set; }

		public virtual bool IsPropertySourceRemoved { get; set; }

		public virtual bool IsPropertyVersionRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemQuantityOnHandRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemQuantityReservedRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemQuantityOccupiedRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemQuantityVirtualRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemCreatedByRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemCreatedAtRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemUpdatedByRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemUpdatedAtRemoved { get; set; }


		public InventoryItemEntryMvoStateMergePatched ()
		{
		}

		public InventoryItemEntryMvoStateMergePatched (InventoryItemEntryMvoStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}




}

