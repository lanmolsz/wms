// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemEntryMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItemEntryMvo;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryItemEntryMvo
{

	public abstract class InventoryItemEntryMvoEventBase : IInventoryItemEntryMvoEvent
	{

		public virtual InventoryItemEntryMvoEventId InventoryItemEntryMvoEventId { get; set; }

        public virtual InventoryItemEntryId InventoryItemEntryId
        {
            get { return InventoryItemEntryMvoEventId.InventoryItemEntryId; }
            set { InventoryItemEntryMvoEventId.InventoryItemEntryId = value; }
        }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		InventoryItemEntryMvoEventId IGlobalIdentity<InventoryItemEntryMvoEventId>.GlobalId {
			get
			{
				return this.InventoryItemEntryMvoEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IInventoryItemEntryMvoEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected InventoryItemEntryMvoEventBase()
        {
        }

        protected InventoryItemEntryMvoEventBase(InventoryItemEntryMvoEventId stateEventId)
        {
            this.InventoryItemEntryMvoEventId = stateEventId;
        }


        string IEventDto.EventType
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}

    public abstract class InventoryItemEntryMvoStateEventBase : InventoryItemEntryMvoEventBase, IInventoryItemEntryMvoStateEvent
    {

		public virtual decimal? OnHandQuantity { get; set; }

		public virtual decimal? InTransitQuantity { get; set; }

		public virtual decimal? ReservedQuantity { get; set; }

		public virtual decimal? OccupiedQuantity { get; set; }

		public virtual decimal? VirtualQuantity { get; set; }

		public virtual InventoryItemSourceInfo Source { get; set; }

		public virtual long? Version { get; set; }

		public virtual decimal? InventoryItemOnHandQuantity { get; set; }

		public virtual decimal? InventoryItemInTransitQuantity { get; set; }

		public virtual decimal? InventoryItemReservedQuantity { get; set; }

		public virtual decimal? InventoryItemOccupiedQuantity { get; set; }

		public virtual decimal? InventoryItemVirtualQuantity { get; set; }

		public virtual string InventoryItemCreatedBy { get; set; }

		public virtual DateTime? InventoryItemCreatedAt { get; set; }

		public virtual string InventoryItemUpdatedBy { get; set; }

		public virtual DateTime? InventoryItemUpdatedAt { get; set; }

        protected InventoryItemEntryMvoStateEventBase() : base()
        {
        }

        protected InventoryItemEntryMvoStateEventBase(InventoryItemEntryMvoEventId stateEventId) : base(stateEventId)
        {
        }

    }

	public class InventoryItemEntryMvoStateCreated : InventoryItemEntryMvoStateEventBase, IInventoryItemEntryMvoStateCreated
	{
		public InventoryItemEntryMvoStateCreated () : this(new InventoryItemEntryMvoEventId())
		{
		}

		public InventoryItemEntryMvoStateCreated (InventoryItemEntryMvoEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class InventoryItemEntryMvoStateMergePatched : InventoryItemEntryMvoStateEventBase, IInventoryItemEntryMvoStateMergePatched
	{
		public virtual bool IsPropertyOnHandQuantityRemoved { get; set; }

		public virtual bool IsPropertyInTransitQuantityRemoved { get; set; }

		public virtual bool IsPropertyReservedQuantityRemoved { get; set; }

		public virtual bool IsPropertyOccupiedQuantityRemoved { get; set; }

		public virtual bool IsPropertyVirtualQuantityRemoved { get; set; }

		public virtual bool IsPropertySourceRemoved { get; set; }

		public virtual bool IsPropertyVersionRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemOnHandQuantityRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemInTransitQuantityRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemReservedQuantityRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemOccupiedQuantityRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemVirtualQuantityRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemCreatedByRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemCreatedAtRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemUpdatedByRemoved { get; set; }

		public virtual bool IsPropertyInventoryItemUpdatedAtRemoved { get; set; }


		public InventoryItemEntryMvoStateMergePatched ()
		{
		}

		public InventoryItemEntryMvoStateMergePatched (InventoryItemEntryMvoEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}




}

