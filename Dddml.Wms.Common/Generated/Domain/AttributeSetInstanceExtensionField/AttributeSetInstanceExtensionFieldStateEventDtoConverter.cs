// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeSetInstanceExtensionFieldDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeSetInstanceExtensionField;

namespace Dddml.Wms.Domain.AttributeSetInstanceExtensionField
{

    public class AttributeSetInstanceExtensionFieldStateEventDtoConverter
    {
        public virtual AttributeSetInstanceExtensionFieldStateCreatedOrMergePatchedOrDeletedDto ToAttributeSetInstanceExtensionFieldStateEventDto(IAttributeSetInstanceExtensionFieldStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IAttributeSetInstanceExtensionFieldStateCreated)stateEvent;
                return ToAttributeSetInstanceExtensionFieldStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IAttributeSetInstanceExtensionFieldStateMergePatched)stateEvent;
                return ToAttributeSetInstanceExtensionFieldStateMergePatchedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.Deleted)
            {
                var e = (IAttributeSetInstanceExtensionFieldStateDeleted)stateEvent;
                return ToAttributeSetInstanceExtensionFieldStateDeletedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual AttributeSetInstanceExtensionFieldStateCreatedDto ToAttributeSetInstanceExtensionFieldStateCreatedDto(IAttributeSetInstanceExtensionFieldStateCreated e)
        {
            var dto = new AttributeSetInstanceExtensionFieldStateCreatedDto();
            dto.StateEventId = new AttributeSetInstanceExtensionFieldEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Type = e.Type;
            dto.Length = e.Length;
            dto.Alias = e.Alias;
            dto.Description = e.Description;
            dto.GroupId = e.GroupId;
            dto.Active = e.Active;
            return dto;
        }

        public virtual AttributeSetInstanceExtensionFieldStateMergePatchedDto ToAttributeSetInstanceExtensionFieldStateMergePatchedDto(IAttributeSetInstanceExtensionFieldStateMergePatched e)
        {
            var dto = new AttributeSetInstanceExtensionFieldStateMergePatchedDto();
            dto.StateEventId = new AttributeSetInstanceExtensionFieldEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Type = e.Type;
            dto.Length = e.Length;
            dto.Alias = e.Alias;
            dto.Description = e.Description;
            dto.GroupId = e.GroupId;
            dto.Active = e.Active;
            dto.IsPropertyTypeRemoved = e.IsPropertyTypeRemoved;
            dto.IsPropertyLengthRemoved = e.IsPropertyLengthRemoved;
            dto.IsPropertyAliasRemoved = e.IsPropertyAliasRemoved;
            dto.IsPropertyDescriptionRemoved = e.IsPropertyDescriptionRemoved;
            dto.IsPropertyGroupIdRemoved = e.IsPropertyGroupIdRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual AttributeSetInstanceExtensionFieldStateDeletedDto ToAttributeSetInstanceExtensionFieldStateDeletedDto(IAttributeSetInstanceExtensionFieldStateDeleted e)
        {
            var dto = new AttributeSetInstanceExtensionFieldStateDeletedDto();
            dto.StateEventId = new AttributeSetInstanceExtensionFieldEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

