// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeSetInstanceExtensionFieldDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeSetInstanceExtensionField;

namespace Dddml.Wms.Domain.AttributeSetInstanceExtensionField
{

	public static partial class AttributeSetInstanceExtensionFieldStateInterfaceExtension
	{

        public static IAttributeSetInstanceExtensionFieldCommand ToCreateOrMergePatchAttributeSetInstanceExtensionField<TCreateAttributeSetInstanceExtensionField, TMergePatchAttributeSetInstanceExtensionField>(this IAttributeSetInstanceExtensionFieldState state)
            where TCreateAttributeSetInstanceExtensionField : ICreateAttributeSetInstanceExtensionField, new()
            where TMergePatchAttributeSetInstanceExtensionField : IMergePatchAttributeSetInstanceExtensionField, new()
        {
            bool bUnsaved = ((IAttributeSetInstanceExtensionFieldState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateAttributeSetInstanceExtensionField<TCreateAttributeSetInstanceExtensionField>();
            }
            else 
            {
                return state.ToMergePatchAttributeSetInstanceExtensionField<TMergePatchAttributeSetInstanceExtensionField>();
            }
        }

        public static TDeleteAttributeSetInstanceExtensionField ToDeleteAttributeSetInstanceExtensionField<TDeleteAttributeSetInstanceExtensionField>(this IAttributeSetInstanceExtensionFieldState state)
            where TDeleteAttributeSetInstanceExtensionField : IDeleteAttributeSetInstanceExtensionField, new()
        {
            var cmd = new TDeleteAttributeSetInstanceExtensionField();
            cmd.Name = state.Name;
            cmd.Version = ((IAttributeSetInstanceExtensionFieldStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchAttributeSetInstanceExtensionField ToMergePatchAttributeSetInstanceExtensionField<TMergePatchAttributeSetInstanceExtensionField>(this IAttributeSetInstanceExtensionFieldState state)
            where TMergePatchAttributeSetInstanceExtensionField : IMergePatchAttributeSetInstanceExtensionField, new()
        {
            var cmd = new TMergePatchAttributeSetInstanceExtensionField();

            cmd.Version = ((IAttributeSetInstanceExtensionFieldStateProperties)state).Version;

            cmd.Name = state.Name;
            cmd.Type = state.Type;
            cmd.Length = state.Length;
            cmd.Alias = state.Alias;
            cmd.Description = state.Description;
            cmd.GroupId = state.GroupId;
            cmd.Active = ((IAttributeSetInstanceExtensionFieldStateProperties)state).Active;
            
            if (state.Type == null) { cmd.IsPropertyTypeRemoved = true; }
            if (state.Length == null) { cmd.IsPropertyLengthRemoved = true; }
            if (state.Alias == null) { cmd.IsPropertyAliasRemoved = true; }
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            if (state.GroupId == null) { cmd.IsPropertyGroupIdRemoved = true; }
            return cmd;
        }

        public static TCreateAttributeSetInstanceExtensionField ToCreateAttributeSetInstanceExtensionField<TCreateAttributeSetInstanceExtensionField>(this IAttributeSetInstanceExtensionFieldState state)
            where TCreateAttributeSetInstanceExtensionField : ICreateAttributeSetInstanceExtensionField, new()
        {
            var cmd = new TCreateAttributeSetInstanceExtensionField();

            cmd.Version = ((IAttributeSetInstanceExtensionFieldStateProperties)state).Version;

            cmd.Name = state.Name;
            cmd.Type = state.Type;
            cmd.Length = state.Length;
            cmd.Alias = state.Alias;
            cmd.Description = state.Description;
            cmd.GroupId = state.GroupId;
            cmd.Active = ((IAttributeSetInstanceExtensionFieldStateProperties)state).Active;
            return cmd;
        }
		

	}

}

