// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public class AttributeUseMvoStateEventId
	{

		private AttributeSetAttributeUseId _attributeSetAttributeUseId = new AttributeSetAttributeUseId();

		public virtual AttributeSetAttributeUseId AttributeSetAttributeUseId { 
			get { return this._attributeSetAttributeUseId; } 
			internal set { _attributeSetAttributeUseId = value; } 
		}

		private long _attributeSetVersion;

		public virtual long AttributeSetVersion { 
			get { return this._attributeSetVersion; } 
			internal set { _attributeSetVersion = value; } 
		}


        #region  Flattened Properties


		public virtual string AttributeSetAttributeUseIdAttributeSetId {
			get { return AttributeSetAttributeUseId.AttributeSetId; }
			internal set { AttributeSetAttributeUseId.AttributeSetId = value; }
		}

		public virtual string AttributeSetAttributeUseIdAttributeId {
			get { return AttributeSetAttributeUseId.AttributeId; }
			internal set { AttributeSetAttributeUseId.AttributeId = value; }
		}

        #endregion

		internal AttributeUseMvoStateEventId ()
		{
		}

		public AttributeUseMvoStateEventId (AttributeSetAttributeUseId attributeSetAttributeUseId, long attributeSetVersion)
		{
			this._attributeSetAttributeUseId = attributeSetAttributeUseId;
			this._attributeSetVersion = attributeSetVersion;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			AttributeUseMvoStateEventId other = obj as AttributeUseMvoStateEventId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.AttributeSetAttributeUseId, other.AttributeSetAttributeUseId)
				&& Object.Equals (this.AttributeSetVersion, other.AttributeSetVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.AttributeSetAttributeUseId != null) {
				hash += 13 * this.AttributeSetAttributeUseId.GetHashCode ();
			}
			if (this.AttributeSetVersion != null) {
				hash += 13 * this.AttributeSetVersion.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(AttributeUseMvoStateEventId obj1, AttributeUseMvoStateEventId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(AttributeUseMvoStateEventId obj1, AttributeUseMvoStateEventId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

	}

}


