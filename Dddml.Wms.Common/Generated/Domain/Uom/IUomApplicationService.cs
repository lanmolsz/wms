// <autogenerated>
//   This file was generated by T4 code generator GenerateUomDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Uom;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.Uom
{

	public partial interface IUomApplicationService : IApplicationService
	{
		void When(ICreateUom c);

		void When(IMergePatchUom c);

		void When(IDeleteUom c);

 		IUomState Get(string uomId);

        IEnumerable<IUomState> GetAll(int firstResult, int maxResults);

        IEnumerable<IUomState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IUomState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IUomState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        IUomEvent GetEvent(string uomId, long version);

        IUomState GetHistoryState(string uomId, long version);


	}

    public static partial class UomApplicationServiceExtension
    {
        public static IEnumerable<IUomState> GetByProperty(this IUomApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IUomState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IUomState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<IUomState> GetByProperty<TPropertyType>(this IUomApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IUomState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IUomState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

