// <autogenerated>
//   This file was generated by T4 code generator GenerateUomDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Uom;

namespace Dddml.Wms.Domain.Uom
{

	public static partial class UomStateInterfaceExtension
	{

        public static IUomCommand ToCreateOrMergePatchUom<TCreateUom, TMergePatchUom>(this IUomState state)
            where TCreateUom : ICreateUom, new()
            where TMergePatchUom : IMergePatchUom, new()
        {
            bool bUnsaved = ((IUomState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateUom<TCreateUom>();
            }
            else 
            {
                return state.ToMergePatchUom<TMergePatchUom>();
            }
        }

        public static TDeleteUom ToDeleteUom<TDeleteUom>(this IUomState state)
            where TDeleteUom : IDeleteUom, new()
        {
            var cmd = new TDeleteUom();
            cmd.UomId = state.UomId;
            cmd.Version = ((IUomStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchUom ToMergePatchUom<TMergePatchUom>(this IUomState state)
            where TMergePatchUom : IMergePatchUom, new()
        {
            var cmd = new TMergePatchUom();

            cmd.Version = ((IUomStateProperties)state).Version;

            cmd.UomId = state.UomId;
            cmd.UomTypeId = state.UomTypeId;
            cmd.Abbreviation = state.Abbreviation;
            cmd.Description = state.Description;
            cmd.Active = ((IUomStateProperties)state).Active;
            
            if (state.UomTypeId == null) { cmd.IsPropertyUomTypeIdRemoved = true; }
            if (state.Abbreviation == null) { cmd.IsPropertyAbbreviationRemoved = true; }
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            return cmd;
        }

        public static TCreateUom ToCreateUom<TCreateUom>(this IUomState state)
            where TCreateUom : ICreateUom, new()
        {
            var cmd = new TCreateUom();

            cmd.Version = ((IUomStateProperties)state).Version;

            cmd.UomId = state.UomId;
            cmd.UomTypeId = state.UomTypeId;
            cmd.Abbreviation = state.Abbreviation;
            cmd.Description = state.Description;
            cmd.Active = ((IUomStateProperties)state).Active;
            return cmd;
        }
		

	}

}

