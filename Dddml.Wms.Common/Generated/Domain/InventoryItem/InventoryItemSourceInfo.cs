// <autogenerated>
//   This file was generated by T4 code generator GenerateInventoryItemDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InventoryItem;

namespace Dddml.Wms.Domain.InventoryItem
{

	public class InventoryItemSourceInfo
	{

		private string _documentTypeId;

		public virtual string DocumentTypeId { 
			get { return this._documentTypeId; } 
			set { _documentTypeId = value; } 
		}

		private string _documentNumber;

		public virtual string DocumentNumber { 
			get { return this._documentNumber; } 
			set { _documentNumber = value; } 
		}

		private string _lineNumber;

		public virtual string LineNumber { 
			get { return this._lineNumber; } 
			set { _lineNumber = value; } 
		}

		private int _lineSubSeqId;

		public virtual int LineSubSeqId { 
			get { return this._lineSubSeqId; } 
			set { _lineSubSeqId = value; } 
		}


        #region  Flattened Properties


        #endregion

		public InventoryItemSourceInfo ()
		{
		}

		public InventoryItemSourceInfo (string documentTypeId, string documentNumber, string lineNumber, int lineSubSeqId)
		{
			this._documentTypeId = documentTypeId;
			this._documentNumber = documentNumber;
			this._lineNumber = lineNumber;
			this._lineSubSeqId = lineSubSeqId;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			InventoryItemSourceInfo other = obj as InventoryItemSourceInfo;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.DocumentTypeId, other.DocumentTypeId)
				&& Object.Equals (this.DocumentNumber, other.DocumentNumber)
				&& Object.Equals (this.LineNumber, other.LineNumber)
				&& Object.Equals (this.LineSubSeqId, other.LineSubSeqId)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.DocumentTypeId != null) {
				hash += 13 * this.DocumentTypeId.GetHashCode ();
			}
			if (this.DocumentNumber != null) {
				hash += 13 * this.DocumentNumber.GetHashCode ();
			}
			if (this.LineNumber != null) {
				hash += 13 * this.LineNumber.GetHashCode ();
			}
			if (this.LineSubSeqId != null) {
				hash += 13 * this.LineSubSeqId.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(InventoryItemSourceInfo obj1, InventoryItemSourceInfo obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(InventoryItemSourceInfo obj1, InventoryItemSourceInfo obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "DocumentTypeId: " + this.DocumentTypeId + ", "
                + "DocumentNumber: " + this.DocumentNumber + ", "
                + "LineNumber: " + this.LineNumber + ", "
                + "LineSubSeqId: " + this.LineSubSeqId + ", "
                ;
        }
	}

}


