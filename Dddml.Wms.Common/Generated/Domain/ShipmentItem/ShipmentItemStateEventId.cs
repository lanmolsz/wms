// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentItemDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentItem;

namespace Dddml.Wms.Domain.ShipmentItem
{

	public class ShipmentItemStateEventId
	{

		private ShipmentItemId _shipmentItemId = new ShipmentItemId();

		public virtual ShipmentItemId ShipmentItemId { 
			get { return this._shipmentItemId; } 
			internal set { _shipmentItemId = value; } 
		}

		private long _version;

		public virtual long Version { 
			get { return this._version; } 
			internal set { _version = value; } 
		}


        #region  Flattened Properties


		public virtual string ShipmentItemIdShipmentId {
			get { return ShipmentItemId.ShipmentId; }
			internal set { ShipmentItemId.ShipmentId = value; }
		}

		public virtual string ShipmentItemIdShipmentItemSeqId {
			get { return ShipmentItemId.ShipmentItemSeqId; }
			internal set { ShipmentItemId.ShipmentItemSeqId = value; }
		}

        #endregion

		internal ShipmentItemStateEventId ()
		{
		}

		public ShipmentItemStateEventId (ShipmentItemId shipmentItemId, long version)
		{
			this._shipmentItemId = shipmentItemId;
			this._version = version;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			ShipmentItemStateEventId other = obj as ShipmentItemStateEventId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.ShipmentItemId, other.ShipmentItemId)
				&& Object.Equals (this.Version, other.Version)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.ShipmentItemId != null) {
				hash += 13 * this.ShipmentItemId.GetHashCode ();
			}
			if (this.Version != null) {
				hash += 13 * this.Version.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(ShipmentItemStateEventId obj1, ShipmentItemStateEventId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(ShipmentItemStateEventId obj1, ShipmentItemStateEventId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

	}

}


