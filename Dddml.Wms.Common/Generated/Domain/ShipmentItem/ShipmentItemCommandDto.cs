// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentItemDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentItem;

namespace Dddml.Wms.Domain.ShipmentItem
{

	public abstract class ShipmentItemCommandDtoBase : ICommandDto, ICreateShipmentItem, IMergePatchShipmentItem, IDeleteShipmentItem
	{

		ShipmentItemId IAggregateCommand<ShipmentItemId, long>.AggregateId
		{
			get
			{
				return ((ICreateOrMergePatchOrDeleteShipmentItem)this).ShipmentItemId;
			}
		}


		long IAggregateCommand<ShipmentItemId, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual ShipmentItemIdDto ShipmentItemId { get; set; }

		public virtual string ProductId { get; set; }

		public virtual decimal? Quantity { get; set; }

		public virtual string ShipmentContentDescription { get; set; }

		public virtual bool? Active { get; set; }


        ShipmentItemId IShipmentItemCommand.ShipmentItemId
        {
            get 
            {
                return this.ShipmentItemId.ToShipmentItemId();
            }
            set 
            {
                this.ShipmentItemId = new ShipmentItemIdDtoWrapper(value);
            }
        }

		public virtual bool? IsPropertyProductIdRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyProductIdRemoved
        {
            get
            {
                var b = this.IsPropertyProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyQuantityRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyShipmentContentDescriptionRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyShipmentContentDescriptionRemoved
        {
            get
            {
                var b = this.IsPropertyShipmentContentDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyShipmentContentDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchShipmentItem.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrDeleteShipmentItemDto : ShipmentItemCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateShipmentItemDto : CreateOrMergePatchOrDeleteShipmentItemDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchShipmentItemDto : CreateOrMergePatchOrDeleteShipmentItemDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteShipmentItemDto : CreateOrMergePatchOrDeleteShipmentItemDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}

    public static partial class ShipmentItemCommandDtos
    {

    }

}

