// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public static partial class YearPlanMvoStateInterfaceExtensions
	{

        public static IYearPlanMvoCommand ToCreateOrMergePatchYearPlanMvo<TCreateYearPlanMvo, TMergePatchYearPlanMvo>(this IYearPlanMvoState state)
            where TCreateYearPlanMvo : ICreateYearPlanMvo, new()
            where TMergePatchYearPlanMvo : IMergePatchYearPlanMvo, new()
        {
            bool bUnsaved = ((IYearPlanMvoState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateYearPlanMvo<TCreateYearPlanMvo>();
            }
            else 
            {
                return state.ToMergePatchYearPlanMvo<TMergePatchYearPlanMvo>();
            }
        }

        public static TDeleteYearPlanMvo ToDeleteYearPlanMvo<TDeleteYearPlanMvo>(this IYearPlanMvoState state)
            where TDeleteYearPlanMvo : IDeleteYearPlanMvo, new()
        {
            var cmd = new TDeleteYearPlanMvo();
            cmd.YearPlanId = state.YearPlanId;
            cmd.PersonVersion = ((IYearPlanMvoStateProperties)state).PersonVersion;

            return cmd;
        }

        public static TMergePatchYearPlanMvo ToMergePatchYearPlanMvo<TMergePatchYearPlanMvo>(this IYearPlanMvoState state)
            where TMergePatchYearPlanMvo : IMergePatchYearPlanMvo, new()
        {
            var cmd = new TMergePatchYearPlanMvo();

            cmd.PersonVersion = ((IYearPlanMvoStateProperties)state).PersonVersion;

            cmd.YearPlanId = state.YearPlanId;
            cmd.Description = state.Description;
            cmd.Version = ((IYearPlanMvoStateProperties)state).Version;
            cmd.Active = ((IYearPlanMvoStateProperties)state).Active;
            cmd.PersonBirthDate = state.PersonBirthDate;
            cmd.PersonLoves = state.PersonLoves;
            cmd.PersonEmergencyContact = state.PersonEmergencyContact;
            cmd.PersonEmail = state.PersonEmail;
            cmd.PersonCreatedBy = state.PersonCreatedBy;
            cmd.PersonUpdatedBy = state.PersonUpdatedBy;
            cmd.PersonCreatedAt = state.PersonCreatedAt;
            cmd.PersonUpdatedAt = state.PersonUpdatedAt;
            cmd.PersonActive = state.PersonActive;
            cmd.PersonDeleted = state.PersonDeleted;
            
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            if (state.PersonLoves == null) { cmd.IsPropertyPersonLovesRemoved = true; }
            if (state.PersonEmergencyContact == null) { cmd.IsPropertyPersonEmergencyContactRemoved = true; }
            if (state.PersonEmail == null) { cmd.IsPropertyPersonEmailRemoved = true; }
            if (state.PersonCreatedBy == null) { cmd.IsPropertyPersonCreatedByRemoved = true; }
            if (state.PersonUpdatedBy == null) { cmd.IsPropertyPersonUpdatedByRemoved = true; }
            return cmd;
        }

        public static TCreateYearPlanMvo ToCreateYearPlanMvo<TCreateYearPlanMvo>(this IYearPlanMvoState state)
            where TCreateYearPlanMvo : ICreateYearPlanMvo, new()
        {
            var cmd = new TCreateYearPlanMvo();

            cmd.PersonVersion = ((IYearPlanMvoStateProperties)state).PersonVersion;

            cmd.YearPlanId = state.YearPlanId;
            cmd.Description = state.Description;
            cmd.Version = ((IYearPlanMvoStateProperties)state).Version;
            cmd.Active = ((IYearPlanMvoStateProperties)state).Active;
            cmd.PersonBirthDate = state.PersonBirthDate;
            cmd.PersonLoves = state.PersonLoves;
            cmd.PersonEmergencyContact = state.PersonEmergencyContact;
            cmd.PersonEmail = state.PersonEmail;
            cmd.PersonCreatedBy = state.PersonCreatedBy;
            cmd.PersonUpdatedBy = state.PersonUpdatedBy;
            cmd.PersonCreatedAt = state.PersonCreatedAt;
            cmd.PersonUpdatedAt = state.PersonUpdatedAt;
            cmd.PersonActive = state.PersonActive;
            cmd.PersonDeleted = state.PersonDeleted;
            return cmd;
        }
		

	}

}

