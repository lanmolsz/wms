// <autogenerated>
//   This file was generated by T4 code generator GenerateLocatorTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.LocatorType;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.LocatorType
{
	public partial interface ILocatorTypeStateQueryRepository
	{
        ILocatorTypeState Get(string id);

        IEnumerable<ILocatorTypeState> GetAll(int firstResult, int maxResults);
        
        IEnumerable<ILocatorTypeState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<ILocatorTypeState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        ILocatorTypeState GetFirst(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null);

        ILocatorTypeState GetFirst(KeyValuePair<string, object> keyValue, IList<string> orders = null);

        IEnumerable<ILocatorTypeState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

	}

}

