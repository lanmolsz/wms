// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeAliasMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeAliasMvo;
using Dddml.Wms.Domain.Attribute;

namespace Dddml.Wms.Domain.AttributeAliasMvo
{

	public static partial class AttributeAliasMvoStateInterfaceExtension
	{

        public static IAttributeAliasMvoCommand ToCreateOrMergePatchAttributeAliasMvo<TCreateAttributeAliasMvo, TMergePatchAttributeAliasMvo>(this IAttributeAliasMvoState state)
            where TCreateAttributeAliasMvo : ICreateAttributeAliasMvo, new()
            where TMergePatchAttributeAliasMvo : IMergePatchAttributeAliasMvo, new()
        {
            bool bUnsaved = ((IAttributeAliasMvoState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateAttributeAliasMvo<TCreateAttributeAliasMvo>();
            }
            else 
            {
                return state.ToMergePatchAttributeAliasMvo<TMergePatchAttributeAliasMvo>();
            }
        }

        public static TDeleteAttributeAliasMvo ToDeleteAttributeAliasMvo<TDeleteAttributeAliasMvo>(this IAttributeAliasMvoState state)
            where TDeleteAttributeAliasMvo : IDeleteAttributeAliasMvo, new()
        {
            var cmd = new TDeleteAttributeAliasMvo();
            cmd.AttributeAliasId = state.AttributeAliasId;
            cmd.AttributeVersion = ((IAttributeAliasMvoStateProperties)state).AttributeVersion;

            return cmd;
        }

        public static TMergePatchAttributeAliasMvo ToMergePatchAttributeAliasMvo<TMergePatchAttributeAliasMvo>(this IAttributeAliasMvoState state)
            where TMergePatchAttributeAliasMvo : IMergePatchAttributeAliasMvo, new()
        {
            var cmd = new TMergePatchAttributeAliasMvo();

            cmd.AttributeVersion = ((IAttributeAliasMvoStateProperties)state).AttributeVersion;

            cmd.AttributeAliasId = state.AttributeAliasId;
            cmd.Name = state.Name;
            cmd.Version = ((IAttributeAliasMvoStateProperties)state).Version;
            cmd.Active = ((IAttributeAliasMvoStateProperties)state).Active;
            cmd.AttributeAttributeName = state.AttributeAttributeName;
            cmd.AttributeOrganizationId = state.AttributeOrganizationId;
            cmd.AttributeDescription = state.AttributeDescription;
            cmd.AttributeIsMandatory = state.AttributeIsMandatory;
            cmd.AttributeAttributeValueType = state.AttributeAttributeValueType;
            cmd.AttributeAttributeValueLength = state.AttributeAttributeValueLength;
            cmd.AttributeIsList = state.AttributeIsList;
            cmd.AttributeFieldName = state.AttributeFieldName;
            cmd.AttributeReferenceId = state.AttributeReferenceId;
            cmd.AttributeCreatedBy = state.AttributeCreatedBy;
            cmd.AttributeCreatedAt = state.AttributeCreatedAt;
            cmd.AttributeUpdatedBy = state.AttributeUpdatedBy;
            cmd.AttributeUpdatedAt = state.AttributeUpdatedAt;
            cmd.AttributeActive = state.AttributeActive;
            cmd.AttributeDeleted = state.AttributeDeleted;
            
            if (state.Name == null) { cmd.IsPropertyNameRemoved = true; }
            if (state.AttributeAttributeName == null) { cmd.IsPropertyAttributeAttributeNameRemoved = true; }
            if (state.AttributeOrganizationId == null) { cmd.IsPropertyAttributeOrganizationIdRemoved = true; }
            if (state.AttributeDescription == null) { cmd.IsPropertyAttributeDescriptionRemoved = true; }
            if (state.AttributeAttributeValueType == null) { cmd.IsPropertyAttributeAttributeValueTypeRemoved = true; }
            if (state.AttributeAttributeValueLength == null) { cmd.IsPropertyAttributeAttributeValueLengthRemoved = true; }
            if (state.AttributeFieldName == null) { cmd.IsPropertyAttributeFieldNameRemoved = true; }
            if (state.AttributeReferenceId == null) { cmd.IsPropertyAttributeReferenceIdRemoved = true; }
            if (state.AttributeCreatedBy == null) { cmd.IsPropertyAttributeCreatedByRemoved = true; }
            if (state.AttributeUpdatedBy == null) { cmd.IsPropertyAttributeUpdatedByRemoved = true; }
            return cmd;
        }

        public static TCreateAttributeAliasMvo ToCreateAttributeAliasMvo<TCreateAttributeAliasMvo>(this IAttributeAliasMvoState state)
            where TCreateAttributeAliasMvo : ICreateAttributeAliasMvo, new()
        {
            var cmd = new TCreateAttributeAliasMvo();

            cmd.AttributeVersion = ((IAttributeAliasMvoStateProperties)state).AttributeVersion;

            cmd.AttributeAliasId = state.AttributeAliasId;
            cmd.Name = state.Name;
            cmd.Version = ((IAttributeAliasMvoStateProperties)state).Version;
            cmd.Active = ((IAttributeAliasMvoStateProperties)state).Active;
            cmd.AttributeAttributeName = state.AttributeAttributeName;
            cmd.AttributeOrganizationId = state.AttributeOrganizationId;
            cmd.AttributeDescription = state.AttributeDescription;
            cmd.AttributeIsMandatory = state.AttributeIsMandatory;
            cmd.AttributeAttributeValueType = state.AttributeAttributeValueType;
            cmd.AttributeAttributeValueLength = state.AttributeAttributeValueLength;
            cmd.AttributeIsList = state.AttributeIsList;
            cmd.AttributeFieldName = state.AttributeFieldName;
            cmd.AttributeReferenceId = state.AttributeReferenceId;
            cmd.AttributeCreatedBy = state.AttributeCreatedBy;
            cmd.AttributeCreatedAt = state.AttributeCreatedAt;
            cmd.AttributeUpdatedBy = state.AttributeUpdatedBy;
            cmd.AttributeUpdatedAt = state.AttributeUpdatedAt;
            cmd.AttributeActive = state.AttributeActive;
            cmd.AttributeDeleted = state.AttributeDeleted;
            return cmd;
        }
		

	}

}

