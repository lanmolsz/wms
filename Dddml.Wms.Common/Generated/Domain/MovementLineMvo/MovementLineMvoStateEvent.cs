// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementLineMvo;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.MovementLineMvo
{

	public abstract class MovementLineMvoStateEventBase : IMovementLineMvoStateEvent
	{

		public virtual MovementLineMvoStateEventId StateEventId { get; set; }

        public virtual MovementLineId MovementLineId
        {
            get { return StateEventId.MovementLineId; }
            set { StateEventId.MovementLineId = value; }
        }

		public virtual decimal? MovementQuantity { get; set; }

		public virtual long? Version { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string MovementDocumentTypeId { get; set; }

		public virtual string MovementDocumentStatusId { get; set; }

		public virtual string MovementMovementTypeId { get; set; }

		public virtual string MovementDescription { get; set; }

		public virtual string MovementCreatedBy { get; set; }

		public virtual DateTime? MovementCreatedAt { get; set; }

		public virtual string MovementUpdatedBy { get; set; }

		public virtual DateTime? MovementUpdatedAt { get; set; }

		public virtual bool? MovementActive { get; set; }

		public virtual bool? MovementDeleted { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		MovementLineMvoStateEventId IGlobalIdentity<MovementLineMvoStateEventId>.GlobalId {
			get
			{
				return this.StateEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IMovementLineMvoStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected MovementLineMvoStateEventBase()
        {
        }

        protected MovementLineMvoStateEventBase(MovementLineMvoStateEventId stateEventId)
        {
            this.StateEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class MovementLineMvoStateCreated : MovementLineMvoStateEventBase, IMovementLineMvoStateCreated
	{
		public MovementLineMvoStateCreated () : this(new MovementLineMvoStateEventId())
		{
		}

		public MovementLineMvoStateCreated (MovementLineMvoStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class MovementLineMvoStateMergePatched : MovementLineMvoStateEventBase, IMovementLineMvoStateMergePatched
	{
		public virtual bool IsPropertyMovementQuantityRemoved { get; set; }

		public virtual bool IsPropertyVersionRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }

		public virtual bool IsPropertyMovementDocumentTypeIdRemoved { get; set; }

		public virtual bool IsPropertyMovementDocumentStatusIdRemoved { get; set; }

		public virtual bool IsPropertyMovementMovementTypeIdRemoved { get; set; }

		public virtual bool IsPropertyMovementDescriptionRemoved { get; set; }

		public virtual bool IsPropertyMovementCreatedByRemoved { get; set; }

		public virtual bool IsPropertyMovementCreatedAtRemoved { get; set; }

		public virtual bool IsPropertyMovementUpdatedByRemoved { get; set; }

		public virtual bool IsPropertyMovementUpdatedAtRemoved { get; set; }

		public virtual bool IsPropertyMovementActiveRemoved { get; set; }

		public virtual bool IsPropertyMovementDeletedRemoved { get; set; }


		public MovementLineMvoStateMergePatched ()
		{
		}

		public MovementLineMvoStateMergePatched (MovementLineMvoStateEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class MovementLineMvoStateDeleted : MovementLineMvoStateEventBase, IMovementLineMvoStateDeleted
	{
		public MovementLineMvoStateDeleted ()
		{
		}

		public MovementLineMvoStateDeleted (MovementLineMvoStateEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }



	}



}

