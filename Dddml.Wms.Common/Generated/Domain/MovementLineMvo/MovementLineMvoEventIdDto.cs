// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementLineMvo;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.MovementLineMvo
{

	public class MovementLineMvoEventIdDto
	{

		public MovementLineMvoEventIdDto()
		{
		}

        public virtual MovementLineMvoEventId ToMovementLineMvoEventId()
        {
            MovementLineMvoEventId v = new MovementLineMvoEventId();
            v.MovementLineId = this.MovementLineId.ToMovementLineId();
            v.MovementVersion = this.MovementVersion;
            return v;
        }

		private MovementLineIdDto _movementLineId = new MovementLineIdDto();

		public virtual MovementLineIdDto MovementLineId { 
			get { return this._movementLineId; } 
			set { this._movementLineId = value; } 
		}

		public virtual long MovementVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			MovementLineMvoEventIdDto other = obj as MovementLineMvoEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.MovementLineId, other.MovementLineId)
				&& Object.Equals (this.MovementVersion, other.MovementVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.MovementLineId != null) {
				hash += 13 * this.MovementLineId.GetHashCode ();
			}
			if (this.MovementVersion != null) {
				hash += 13 * this.MovementVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


