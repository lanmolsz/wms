// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementLineMvo;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.MovementLineMvo
{

	public abstract class MovementLineMvoCommandDtoBase : ICommandDto, ICreateMovementLineMvo, IMergePatchMovementLineMvo, IDeleteMovementLineMvo
	{

		MovementLineId IAggregateCommand<MovementLineId, long>.AggregateId
		{
			get
			{
				return ((ICreateOrMergePatchOrDeleteMovementLineMvo)this).MovementLineId;
			}
		}


		long IAggregateCommand<MovementLineId, long>.AggregateVersion
		{
			get
			{
				return this.MovementVersion;
			}
		}

		public virtual long MovementVersion { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual MovementLineIdDto MovementLineId { get; set; }

		public virtual decimal? MovementQuantity { get; set; }

		public virtual long? Version { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string MovementDocumentTypeId { get; set; }

		public virtual string DocumentAction { get; set; }

		public virtual string MovementMovementTypeId { get; set; }

		public virtual string MovementDescription { get; set; }

		public virtual string MovementCreatedBy { get; set; }

		public virtual DateTime? MovementCreatedAt { get; set; }

		public virtual string MovementUpdatedBy { get; set; }

		public virtual DateTime? MovementUpdatedAt { get; set; }

		public virtual bool? MovementActive { get; set; }

		public virtual bool? MovementDeleted { get; set; }


        MovementLineId IMovementLineMvoCommand.MovementLineId
        {
            get 
            {
                return this.MovementLineId.ToMovementLineId();
            }
            set 
            {
                this.MovementLineId = new MovementLineIdDtoWrapper(value);
            }
        }

		public virtual bool? IsPropertyMovementQuantityRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyMovementQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyVersionRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyVersionRemoved
        {
            get
            {
                var b = this.IsPropertyVersionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyVersionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementDocumentTypeIdRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementDocumentTypeIdRemoved
        {
            get
            {
                var b = this.IsPropertyMovementDocumentTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementDocumentTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementMovementTypeIdRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementMovementTypeIdRemoved
        {
            get
            {
                var b = this.IsPropertyMovementMovementTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementMovementTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementDescriptionRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementDescriptionRemoved
        {
            get
            {
                var b = this.IsPropertyMovementDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementCreatedByRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementCreatedByRemoved
        {
            get
            {
                var b = this.IsPropertyMovementCreatedByRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementCreatedByRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementCreatedAtRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementCreatedAtRemoved
        {
            get
            {
                var b = this.IsPropertyMovementCreatedAtRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementCreatedAtRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementUpdatedByRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementUpdatedByRemoved
        {
            get
            {
                var b = this.IsPropertyMovementUpdatedByRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementUpdatedByRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementUpdatedAtRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementUpdatedAtRemoved
        {
            get
            {
                var b = this.IsPropertyMovementUpdatedAtRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementUpdatedAtRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementActiveRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementActiveRemoved
        {
            get
            {
                var b = this.IsPropertyMovementActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementActiveRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementDeletedRemoved { get; set; }

        bool IMergePatchMovementLineMvo.IsPropertyMovementDeletedRemoved
        {
            get
            {
                var b = this.IsPropertyMovementDeletedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementDeletedRemoved = value;
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrDeleteMovementLineMvoDto : MovementLineMvoCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateMovementLineMvoDto : CreateOrMergePatchOrDeleteMovementLineMvoDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchMovementLineMvoDto : CreateOrMergePatchOrDeleteMovementLineMvoDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteMovementLineMvoDto : CreateOrMergePatchOrDeleteMovementLineMvoDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}

    public static partial class MovementLineMvoCommandDtos
    {

    }

}

