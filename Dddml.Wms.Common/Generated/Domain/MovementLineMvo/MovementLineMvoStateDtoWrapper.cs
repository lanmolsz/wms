// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementLineMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementLineMvo;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.MovementLineMvo
{

	public partial class MovementLineMvoStateDtoWrapper : StateDtoWrapperBase, IMovementLineMvoStateDto, IMovementLineMvoState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IMovementLineMvoState _state;

        public MovementLineMvoStateDtoWrapper()
        {
            this._state = new MovementLineMvoState();
        }

		public MovementLineMvoStateDtoWrapper(IMovementLineMvoState state)
		{
            this._state = state;
		}

		public IMovementLineMvoState ToMovementLineMvoState()
		{
			return this._state;
		}

		public virtual MovementLineId MovementLineId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementLineId"))
                {
                    return _state.MovementLineId;
                }
                return null;
            }
            set
            {
                _state.MovementLineId = value;
            }
        }

        MovementLineId IMovementLineMvoStateProperties.MovementLineId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementLineId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementLineId = value;
            }
        }

		public virtual decimal? MovementQuantity
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementQuantity"))
                {
                    return _state.MovementQuantity;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementQuantity = value.Value;
                }
            }
        }

        decimal IMovementLineMvoStateProperties.MovementQuantity
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementQuantity;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementQuantity = value;
            }
        }

		public virtual string ProductId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ProductId"))
                {
                    return _state.ProductId;
                }
                return null;
            }
            set
            {
                _state.ProductId = value;
            }
        }

        string IMovementLineMvoStateProperties.ProductId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).ProductId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).ProductId = value;
            }
        }

		public virtual string LocatorIdFrom
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("LocatorIdFrom"))
                {
                    return _state.LocatorIdFrom;
                }
                return null;
            }
            set
            {
                _state.LocatorIdFrom = value;
            }
        }

        string IMovementLineMvoStateProperties.LocatorIdFrom
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).LocatorIdFrom;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).LocatorIdFrom = value;
            }
        }

		public virtual string LocatorIdTo
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("LocatorIdTo"))
                {
                    return _state.LocatorIdTo;
                }
                return null;
            }
            set
            {
                _state.LocatorIdTo = value;
            }
        }

        string IMovementLineMvoStateProperties.LocatorIdTo
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).LocatorIdTo;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).LocatorIdTo = value;
            }
        }

		public virtual string AttributeSetInstanceId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AttributeSetInstanceId"))
                {
                    return _state.AttributeSetInstanceId;
                }
                return null;
            }
            set
            {
                _state.AttributeSetInstanceId = value;
            }
        }

        string IMovementLineMvoStateProperties.AttributeSetInstanceId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).AttributeSetInstanceId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).AttributeSetInstanceId = value;
            }
        }

		public virtual bool? Processed
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Processed"))
                {
                    return _state.Processed;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.Processed = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.Processed
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).Processed;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).Processed = value;
            }
        }

		public virtual string ReversalLineNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ReversalLineNumber"))
                {
                    return _state.ReversalLineNumber;
                }
                return null;
            }
            set
            {
                _state.ReversalLineNumber = value;
            }
        }

        string IMovementLineMvoStateProperties.ReversalLineNumber
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).ReversalLineNumber;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).ReversalLineNumber = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IMovementLineMvoStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IMovementLineMvoStateProperties).Version = value.Value;
                }
            }
        }

        long IMovementLineMvoStateProperties.Version
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).Version;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).Version = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IMovementLineMvoStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IMovementLineMvoStateProperties).Active = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.Active
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).Active;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).Active = value;
            }
        }

		public virtual string MovementDocumentStatusId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementDocumentStatusId"))
                {
                    return _state.MovementDocumentStatusId;
                }
                return null;
            }
            set
            {
                _state.MovementDocumentStatusId = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementDocumentStatusId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementDocumentStatusId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementDocumentStatusId = value;
            }
        }

		public virtual DateTime? MovementMovementDate
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementMovementDate"))
                {
                    return _state.MovementMovementDate.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.MovementMovementDate;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementMovementDate = value.Value;
                }
            }
        }

        DateTime IMovementLineMvoStateProperties.MovementMovementDate
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementMovementDate;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementMovementDate = value;
            }
        }

		public virtual bool? MovementPosted
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementPosted"))
                {
                    return _state.MovementPosted;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementPosted = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.MovementPosted
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementPosted;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementPosted = value;
            }
        }

		public virtual bool? MovementProcessed
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementProcessed"))
                {
                    return _state.MovementProcessed;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementProcessed = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.MovementProcessed
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementProcessed;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementProcessed = value;
            }
        }

		public virtual string MovementProcessing
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementProcessing"))
                {
                    return _state.MovementProcessing;
                }
                return null;
            }
            set
            {
                _state.MovementProcessing = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementProcessing
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementProcessing;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementProcessing = value;
            }
        }

		public virtual DateTime? MovementDateReceived
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementDateReceived"))
                {
                    return _state.MovementDateReceived.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.MovementDateReceived;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementDateReceived = value.Value;
                }
            }
        }

        DateTime IMovementLineMvoStateProperties.MovementDateReceived
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementDateReceived;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementDateReceived = value;
            }
        }

		public virtual string MovementDocumentTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementDocumentTypeId"))
                {
                    return _state.MovementDocumentTypeId;
                }
                return null;
            }
            set
            {
                _state.MovementDocumentTypeId = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementDocumentTypeId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementDocumentTypeId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementDocumentTypeId = value;
            }
        }

		public virtual bool? MovementIsInTransit
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementIsInTransit"))
                {
                    return _state.MovementIsInTransit;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementIsInTransit = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.MovementIsInTransit
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementIsInTransit;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementIsInTransit = value;
            }
        }

		public virtual bool? MovementIsApproved
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementIsApproved"))
                {
                    return _state.MovementIsApproved;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementIsApproved = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.MovementIsApproved
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementIsApproved;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementIsApproved = value;
            }
        }

		public virtual decimal? MovementApprovalAmount
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementApprovalAmount"))
                {
                    return _state.MovementApprovalAmount;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementApprovalAmount = value.Value;
                }
            }
        }

        decimal IMovementLineMvoStateProperties.MovementApprovalAmount
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementApprovalAmount;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementApprovalAmount = value;
            }
        }

		public virtual string MovementShipperId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementShipperId"))
                {
                    return _state.MovementShipperId;
                }
                return null;
            }
            set
            {
                _state.MovementShipperId = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementShipperId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementShipperId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementShipperId = value;
            }
        }

		public virtual string MovementSalesRepresentativeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementSalesRepresentativeId"))
                {
                    return _state.MovementSalesRepresentativeId;
                }
                return null;
            }
            set
            {
                _state.MovementSalesRepresentativeId = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementSalesRepresentativeId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementSalesRepresentativeId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementSalesRepresentativeId = value;
            }
        }

		public virtual string MovementBusinessPartnerId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementBusinessPartnerId"))
                {
                    return _state.MovementBusinessPartnerId;
                }
                return null;
            }
            set
            {
                _state.MovementBusinessPartnerId = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementBusinessPartnerId
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementBusinessPartnerId;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementBusinessPartnerId = value;
            }
        }

		public virtual decimal? MovementChargeAmount
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementChargeAmount"))
                {
                    return _state.MovementChargeAmount;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementChargeAmount = value.Value;
                }
            }
        }

        decimal IMovementLineMvoStateProperties.MovementChargeAmount
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementChargeAmount;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementChargeAmount = value;
            }
        }

		public virtual string MovementCreateFrom
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementCreateFrom"))
                {
                    return _state.MovementCreateFrom;
                }
                return null;
            }
            set
            {
                _state.MovementCreateFrom = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementCreateFrom
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementCreateFrom;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementCreateFrom = value;
            }
        }

		public virtual decimal? MovementFreightAmount
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementFreightAmount"))
                {
                    return _state.MovementFreightAmount;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementFreightAmount = value.Value;
                }
            }
        }

        decimal IMovementLineMvoStateProperties.MovementFreightAmount
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementFreightAmount;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementFreightAmount = value;
            }
        }

		public virtual string MovementReversalDocumentNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementReversalDocumentNumber"))
                {
                    return _state.MovementReversalDocumentNumber;
                }
                return null;
            }
            set
            {
                _state.MovementReversalDocumentNumber = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementReversalDocumentNumber
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementReversalDocumentNumber;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementReversalDocumentNumber = value;
            }
        }

		public virtual string MovementWarehouseIdFrom
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementWarehouseIdFrom"))
                {
                    return _state.MovementWarehouseIdFrom;
                }
                return null;
            }
            set
            {
                _state.MovementWarehouseIdFrom = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementWarehouseIdFrom
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementWarehouseIdFrom;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementWarehouseIdFrom = value;
            }
        }

		public virtual string MovementWarehouseIdTo
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementWarehouseIdTo"))
                {
                    return _state.MovementWarehouseIdTo;
                }
                return null;
            }
            set
            {
                _state.MovementWarehouseIdTo = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementWarehouseIdTo
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementWarehouseIdTo;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementWarehouseIdTo = value;
            }
        }

		public virtual string MovementDescription
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementDescription"))
                {
                    return _state.MovementDescription;
                }
                return null;
            }
            set
            {
                _state.MovementDescription = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementDescription
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementDescription;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementDescription = value;
            }
        }

		public virtual string MovementCreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementCreatedBy"))
                {
                    return _state.MovementCreatedBy;
                }
                return null;
            }
            set
            {
                _state.MovementCreatedBy = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementCreatedBy
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementCreatedBy;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementCreatedBy = value;
            }
        }

		public virtual DateTime? MovementCreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementCreatedAt"))
                {
                    return _state.MovementCreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.MovementCreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementCreatedAt = value.Value;
                }
            }
        }

        DateTime IMovementLineMvoStateProperties.MovementCreatedAt
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementCreatedAt;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementCreatedAt = value;
            }
        }

		public virtual string MovementUpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementUpdatedBy"))
                {
                    return _state.MovementUpdatedBy;
                }
                return null;
            }
            set
            {
                _state.MovementUpdatedBy = value;
            }
        }

        string IMovementLineMvoStateProperties.MovementUpdatedBy
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementUpdatedBy;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementUpdatedBy = value;
            }
        }

		public virtual DateTime? MovementUpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementUpdatedAt"))
                {
                    return _state.MovementUpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.MovementUpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementUpdatedAt = value.Value;
                }
            }
        }

        DateTime IMovementLineMvoStateProperties.MovementUpdatedAt
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementUpdatedAt;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementUpdatedAt = value;
            }
        }

		public virtual bool? MovementActive
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementActive"))
                {
                    return _state.MovementActive;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementActive = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.MovementActive
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementActive;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementActive = value;
            }
        }

		public virtual bool? MovementDeleted
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementDeleted"))
                {
                    return _state.MovementDeleted;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementDeleted = value.Value;
                }
            }
        }

        bool IMovementLineMvoStateProperties.MovementDeleted
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementDeleted;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementDeleted = value;
            }
        }

		public virtual long? MovementVersion
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementVersion"))
                {
                    return _state.MovementVersion;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.MovementVersion = value.Value;
                }
            }
        }

        long IMovementLineMvoStateProperties.MovementVersion
        {
            get 
            {
                return (this._state as IMovementLineMvoStateProperties).MovementVersion;
            }
            set 
            {
                (this._state as IMovementLineMvoStateProperties).MovementVersion = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		MovementLineId IGlobalIdentity<MovementLineId>.GlobalId
		{
			get { return (_state as IMovementLineMvoState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IMovementLineMvoState).CreatedBy; }
            set { (_state as IMovementLineMvoState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IMovementLineMvoState).CreatedAt; }
            set { (_state as IMovementLineMvoState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IMovementLineMvoState).UpdatedBy; }
            set { (_state as IMovementLineMvoState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IMovementLineMvoState).UpdatedAt; }
            set { (_state as IMovementLineMvoState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IMovementLineMvoStateProperties).MovementVersion; }
		}

		#endregion

        bool IMovementLineMvoState.IsUnsaved
        {
            get { return this.MovementVersion == MovementLineMvoState.VersionZero; }
        }

		void IMovementLineMvoState.When(IMovementLineMvoStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IMovementLineMvoState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IMovementLineMvoState.When(IMovementLineMvoStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IMovementLineMvoState.When(IMovementLineMvoStateDeleted e)
		{
            throw new NotSupportedException();
		}

		void IMovementLineMvoState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class MovementLineMvoStateDtoWrapperCollection : StateDtoWrapperCollectionBase<MovementLineMvoStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(MovementLineMvoStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

