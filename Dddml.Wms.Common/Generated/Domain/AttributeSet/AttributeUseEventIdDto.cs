// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeSetDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeSet;

namespace Dddml.Wms.Domain.AttributeSet
{

	public class AttributeUseEventIdDto
	{

		public AttributeUseEventIdDto()
		{
		}

        public virtual AttributeUseEventId ToAttributeUseEventId()
        {
            AttributeUseEventId v = new AttributeUseEventId();
            v.AttributeSetId = this.AttributeSetId;
            v.AttributeId = this.AttributeId;
            v.AttributeSetVersion = this.AttributeSetVersion;
            return v;
        }

		public virtual string AttributeSetId { 
			get;
			set;
		}

		public virtual string AttributeId { 
			get;
			set;
		}

		public virtual long AttributeSetVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			AttributeUseEventIdDto other = obj as AttributeUseEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.AttributeSetId, other.AttributeSetId)
				&& Object.Equals (this.AttributeId, other.AttributeId)
				&& Object.Equals (this.AttributeSetVersion, other.AttributeSetVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.AttributeSetId != null) {
				hash += 13 * this.AttributeSetId.GetHashCode ();
			}
			if (this.AttributeId != null) {
				hash += 13 * this.AttributeId.GetHashCode ();
			}
			if (this.AttributeSetVersion != null) {
				hash += 13 * this.AttributeSetVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


