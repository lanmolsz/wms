// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeSetDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeSet;

namespace Dddml.Wms.Domain.AttributeSet
{

    public class AttributeUseStateEventDtoConverter
    {
        public virtual AttributeUseStateCreatedOrMergePatchedOrRemovedDto ToAttributeUseStateEventDto(IAttributeUseStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IAttributeUseStateCreated)stateEvent;
                return ToAttributeUseStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IAttributeUseStateMergePatched)stateEvent;
                return ToAttributeUseStateMergePatchedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.Removed)
            {
                var e = (IAttributeUseStateRemoved)stateEvent;
                return ToAttributeUseStateRemovedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual AttributeUseStateCreatedDto ToAttributeUseStateCreatedDto(IAttributeUseStateCreated e)
        {
            var dto = new AttributeUseStateCreatedDto();
            dto.AttributeUseEventId = new AttributeUseEventIdDtoWrapper(e.AttributeUseEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.SequenceNumber = e.SequenceNumber;
            dto.Active = e.Active;
            return dto;
        }

        public virtual AttributeUseStateMergePatchedDto ToAttributeUseStateMergePatchedDto(IAttributeUseStateMergePatched e)
        {
            var dto = new AttributeUseStateMergePatchedDto();
            dto.AttributeUseEventId = new AttributeUseEventIdDtoWrapper(e.AttributeUseEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.SequenceNumber = e.SequenceNumber;
            dto.Active = e.Active;
            dto.IsPropertySequenceNumberRemoved = e.IsPropertySequenceNumberRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual AttributeUseStateRemovedDto ToAttributeUseStateRemovedDto(IAttributeUseStateRemoved e)
        {
            var dto = new AttributeUseStateRemovedDto();
            dto.AttributeUseEventId = new AttributeUseEventIdDtoWrapper(e.AttributeUseEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

