// <autogenerated>
//   This file was generated by T4 code generator GenerateFacilityDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Facility;

namespace Dddml.Wms.Domain.Facility
{

	public abstract class FacilityStateEventBase : IFacilityStateEvent
	{

		public virtual FacilityEventId FacilityEventId { get; set; }

        public virtual string FacilityId
        {
            get { return FacilityEventId.FacilityId; }
            set { FacilityEventId.FacilityId = value; }
        }

		public virtual string FacilityTypeId { get; set; }

		public virtual string ParentFacilityId { get; set; }

		public virtual string OwnerPartyId { get; set; }

		public virtual string DefaultInventoryItemTypeId { get; set; }

		public virtual string FacilityName { get; set; }

		public virtual string PrimaryFacilityGroupId { get; set; }

		public virtual long? OldSquareFootage { get; set; }

		public virtual decimal? FacilitySize { get; set; }

		public virtual string FacilitySizeUomId { get; set; }

		public virtual string ProductStoreId { get; set; }

		public virtual long? DefaultDaysToShip { get; set; }

		public virtual DateTime? OpenedDate { get; set; }

		public virtual DateTime? ClosedDate { get; set; }

		public virtual string Description { get; set; }

		public virtual string DefaultDimensionUomId { get; set; }

		public virtual string DefaultWeightUomId { get; set; }

		public virtual string GeoPointId { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		FacilityEventId IGlobalIdentity<FacilityEventId>.GlobalId {
			get
			{
				return this.FacilityEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IFacilityStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected FacilityStateEventBase()
        {
        }

        protected FacilityStateEventBase(FacilityEventId stateEventId)
        {
            this.FacilityEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class FacilityStateCreated : FacilityStateEventBase, IFacilityStateCreated
	{
		public FacilityStateCreated () : this(new FacilityEventId())
		{
		}

		public FacilityStateCreated (FacilityEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class FacilityStateMergePatched : FacilityStateEventBase, IFacilityStateMergePatched
	{
		public virtual bool IsPropertyFacilityTypeIdRemoved { get; set; }

		public virtual bool IsPropertyParentFacilityIdRemoved { get; set; }

		public virtual bool IsPropertyOwnerPartyIdRemoved { get; set; }

		public virtual bool IsPropertyDefaultInventoryItemTypeIdRemoved { get; set; }

		public virtual bool IsPropertyFacilityNameRemoved { get; set; }

		public virtual bool IsPropertyPrimaryFacilityGroupIdRemoved { get; set; }

		public virtual bool IsPropertyOldSquareFootageRemoved { get; set; }

		public virtual bool IsPropertyFacilitySizeRemoved { get; set; }

		public virtual bool IsPropertyFacilitySizeUomIdRemoved { get; set; }

		public virtual bool IsPropertyProductStoreIdRemoved { get; set; }

		public virtual bool IsPropertyDefaultDaysToShipRemoved { get; set; }

		public virtual bool IsPropertyOpenedDateRemoved { get; set; }

		public virtual bool IsPropertyClosedDateRemoved { get; set; }

		public virtual bool IsPropertyDescriptionRemoved { get; set; }

		public virtual bool IsPropertyDefaultDimensionUomIdRemoved { get; set; }

		public virtual bool IsPropertyDefaultWeightUomIdRemoved { get; set; }

		public virtual bool IsPropertyGeoPointIdRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public FacilityStateMergePatched ()
		{
		}

		public FacilityStateMergePatched (FacilityEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class FacilityStateDeleted : FacilityStateEventBase, IFacilityStateDeleted
	{
		public FacilityStateDeleted ()
		{
		}

		public FacilityStateDeleted (FacilityEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }



	}



}

