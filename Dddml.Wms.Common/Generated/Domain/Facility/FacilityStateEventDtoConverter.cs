// <autogenerated>
//   This file was generated by T4 code generator GenerateFacilityDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Facility;

namespace Dddml.Wms.Domain.Facility
{

    public class FacilityStateEventDtoConverter
    {
        public virtual FacilityStateCreatedOrMergePatchedOrDeletedDto ToFacilityStateEventDto(IFacilityEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IFacilityStateCreated)stateEvent;
                return ToFacilityStateCreatedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.MergePatched)
            {
                var e = (IFacilityStateMergePatched)stateEvent;
                return ToFacilityStateMergePatchedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.Deleted)
            {
                var e = (IFacilityStateDeleted)stateEvent;
                return ToFacilityStateDeletedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual FacilityStateCreatedDto ToFacilityStateCreatedDto(IFacilityStateCreated e)
        {
            var dto = new FacilityStateCreatedDto();
            dto.FacilityEventId = e.FacilityEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.FacilityTypeId = e.FacilityTypeId;
            dto.ParentFacilityId = e.ParentFacilityId;
            dto.OwnerPartyId = e.OwnerPartyId;
            dto.DefaultInventoryItemTypeId = e.DefaultInventoryItemTypeId;
            dto.FacilityName = e.FacilityName;
            dto.PrimaryFacilityGroupId = e.PrimaryFacilityGroupId;
            dto.OldSquareFootage = e.OldSquareFootage;
            dto.FacilitySize = e.FacilitySize;
            dto.FacilitySizeUomId = e.FacilitySizeUomId;
            dto.ProductStoreId = e.ProductStoreId;
            dto.DefaultDaysToShip = e.DefaultDaysToShip;
            dto.OpenedDate = e.OpenedDate;
            dto.ClosedDate = e.ClosedDate;
            dto.Description = e.Description;
            dto.DefaultDimensionUomId = e.DefaultDimensionUomId;
            dto.DefaultWeightUomId = e.DefaultWeightUomId;
            dto.GeoPointId = e.GeoPointId;
            dto.Active = e.Active;
            return dto;
        }

        public virtual FacilityStateMergePatchedDto ToFacilityStateMergePatchedDto(IFacilityStateMergePatched e)
        {
            var dto = new FacilityStateMergePatchedDto();
            dto.FacilityEventId = e.FacilityEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.FacilityTypeId = e.FacilityTypeId;
            dto.ParentFacilityId = e.ParentFacilityId;
            dto.OwnerPartyId = e.OwnerPartyId;
            dto.DefaultInventoryItemTypeId = e.DefaultInventoryItemTypeId;
            dto.FacilityName = e.FacilityName;
            dto.PrimaryFacilityGroupId = e.PrimaryFacilityGroupId;
            dto.OldSquareFootage = e.OldSquareFootage;
            dto.FacilitySize = e.FacilitySize;
            dto.FacilitySizeUomId = e.FacilitySizeUomId;
            dto.ProductStoreId = e.ProductStoreId;
            dto.DefaultDaysToShip = e.DefaultDaysToShip;
            dto.OpenedDate = e.OpenedDate;
            dto.ClosedDate = e.ClosedDate;
            dto.Description = e.Description;
            dto.DefaultDimensionUomId = e.DefaultDimensionUomId;
            dto.DefaultWeightUomId = e.DefaultWeightUomId;
            dto.GeoPointId = e.GeoPointId;
            dto.Active = e.Active;
            dto.IsPropertyFacilityTypeIdRemoved = e.IsPropertyFacilityTypeIdRemoved;
            dto.IsPropertyParentFacilityIdRemoved = e.IsPropertyParentFacilityIdRemoved;
            dto.IsPropertyOwnerPartyIdRemoved = e.IsPropertyOwnerPartyIdRemoved;
            dto.IsPropertyDefaultInventoryItemTypeIdRemoved = e.IsPropertyDefaultInventoryItemTypeIdRemoved;
            dto.IsPropertyFacilityNameRemoved = e.IsPropertyFacilityNameRemoved;
            dto.IsPropertyPrimaryFacilityGroupIdRemoved = e.IsPropertyPrimaryFacilityGroupIdRemoved;
            dto.IsPropertyOldSquareFootageRemoved = e.IsPropertyOldSquareFootageRemoved;
            dto.IsPropertyFacilitySizeRemoved = e.IsPropertyFacilitySizeRemoved;
            dto.IsPropertyFacilitySizeUomIdRemoved = e.IsPropertyFacilitySizeUomIdRemoved;
            dto.IsPropertyProductStoreIdRemoved = e.IsPropertyProductStoreIdRemoved;
            dto.IsPropertyDefaultDaysToShipRemoved = e.IsPropertyDefaultDaysToShipRemoved;
            dto.IsPropertyOpenedDateRemoved = e.IsPropertyOpenedDateRemoved;
            dto.IsPropertyClosedDateRemoved = e.IsPropertyClosedDateRemoved;
            dto.IsPropertyDescriptionRemoved = e.IsPropertyDescriptionRemoved;
            dto.IsPropertyDefaultDimensionUomIdRemoved = e.IsPropertyDefaultDimensionUomIdRemoved;
            dto.IsPropertyDefaultWeightUomIdRemoved = e.IsPropertyDefaultWeightUomIdRemoved;
            dto.IsPropertyGeoPointIdRemoved = e.IsPropertyGeoPointIdRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual FacilityStateDeletedDto ToFacilityStateDeletedDto(IFacilityStateDeleted e)
        {
            var dto = new FacilityStateDeletedDto();
            dto.FacilityEventId = e.FacilityEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

