// <autogenerated>
//   This file was generated by T4 code generator GenerateFacilityDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Facility;

namespace Dddml.Wms.Domain.Facility
{

    public partial class FacilityStateDto : IFacilityStateDto
    {
        public virtual string FacilityId
        {
            get;
            set;
        }

        public virtual string FacilityTypeId
        {
            get;
            set;
        }

        public virtual string ParentFacilityId
        {
            get;
            set;
        }

        public virtual string OwnerPartyId
        {
            get;
            set;
        }

        public virtual string DefaultInventoryItemTypeId
        {
            get;
            set;
        }

        public virtual string FacilityName
        {
            get;
            set;
        }

        public virtual string PrimaryFacilityGroupId
        {
            get;
            set;
        }

        public virtual long? OldSquareFootage
        {
            get;
            set;
        }

        public virtual decimal? FacilitySize
        {
            get;
            set;
        }

        public virtual string FacilitySizeUomId
        {
            get;
            set;
        }

        public virtual string ProductStoreId
        {
            get;
            set;
        }

        public virtual long? DefaultDaysToShip
        {
            get;
            set;
        }

        public virtual DateTime? OpenedDate
        {
            get;
            set;
        }

        public virtual DateTime? ClosedDate
        {
            get;
            set;
        }

        public virtual string Description
        {
            get;
            set;
        }

        public virtual string DefaultDimensionUomId
        {
            get;
            set;
        }

        public virtual string DefaultWeightUomId
        {
            get;
            set;
        }

        public virtual string GeoPointId
        {
            get;
            set;
        }

        public virtual bool? Active
        {
            get;
            set;
        }

        public virtual long? Version
        {
            get;
            set;
        }

        public virtual string CreatedBy
        {
            get;
            set;
        }

        public virtual DateTime? CreatedAt
        {
            get;
            set;
        }

        public virtual string UpdatedBy
        {
            get;
            set;
        }

        public virtual DateTime? UpdatedAt
        {
            get;
            set;
        }

        public virtual IFacilityState ToFacilityState()
        {
            var state = new FacilityState(true);
            state.FacilityId = this.FacilityId;
            state.FacilityTypeId = this.FacilityTypeId;
            state.ParentFacilityId = this.ParentFacilityId;
            state.OwnerPartyId = this.OwnerPartyId;
            state.DefaultInventoryItemTypeId = this.DefaultInventoryItemTypeId;
            state.FacilityName = this.FacilityName;
            state.PrimaryFacilityGroupId = this.PrimaryFacilityGroupId;
            state.OldSquareFootage = this.OldSquareFootage;
            state.FacilitySize = this.FacilitySize;
            state.FacilitySizeUomId = this.FacilitySizeUomId;
            state.ProductStoreId = this.ProductStoreId;
            state.DefaultDaysToShip = this.DefaultDaysToShip;
            state.OpenedDate = this.OpenedDate;
            state.ClosedDate = this.ClosedDate;
            state.Description = this.Description;
            state.DefaultDimensionUomId = this.DefaultDimensionUomId;
            state.DefaultWeightUomId = this.DefaultWeightUomId;
            state.GeoPointId = this.GeoPointId;
            if (this.Active != null && this.Active.HasValue) { state.Active = this.Active.Value; }
            if (this.Version != null && this.Version.HasValue) { state.Version = this.Version.Value; }
            state.CreatedBy = this.CreatedBy;
            if (this.CreatedAt != null && this.CreatedAt.HasValue) { state.CreatedAt = this.CreatedAt.Value; }
            state.UpdatedBy = this.UpdatedBy;
            if (this.UpdatedAt != null && this.UpdatedAt.HasValue) { state.UpdatedAt = this.UpdatedAt.Value; }

            return state;
        }

    }

}

