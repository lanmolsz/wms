// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public abstract class PersonCommandDtoBase : ICommandDto, ICreatePerson, IMergePatchPerson, IDeletePerson
	{

		PersonalName IAggregateCommand<PersonalName, long>.AggregateId
		{
			get
			{
				return ((ICreateOrMergePatchOrDeletePerson)this).PersonalName;
			}
		}


		long IAggregateCommand<PersonalName, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual PersonalNameDto PersonalName { get; set; }

		public virtual DateTime? BirthDate { get; set; }


		public virtual PersonalNameDto Loves { get; set; }

        PersonalName ICreateOrMergePatchOrDeletePerson.Loves
        {
            get 
            {
                return this.Loves.ToPersonalName();
            }
            set 
            {
                this.Loves = new PersonalNameDto(value);
            }
        }

		public virtual bool? Active { get; set; }


        PersonalName ICreateOrMergePatchOrDeletePerson.PersonalName
        {
            get 
            {
                return this.PersonalName.ToPersonalName();
            }
            set 
            {
                this.PersonalName = new PersonalNameDto(value);
            }
        }

		public virtual bool? IsPropertyBirthDateRemoved { get; set; }

        bool IMergePatchPerson.IsPropertyBirthDateRemoved
        {
            get
            {
                var b = this.IsPropertyBirthDateRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyBirthDateRemoved = value;
            }
        }

		public virtual bool? IsPropertyLovesRemoved { get; set; }

        bool IMergePatchPerson.IsPropertyLovesRemoved
        {
            get
            {
                var b = this.IsPropertyLovesRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyLovesRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchPerson.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

        ICreateYearPlanCommands ICreatePerson.YearPlans
        {
            get
            {
                return this._yearPlans;
            }
        }

        IYearPlanCommands IMergePatchPerson.YearPlanCommands
        {
            get
            {
                return this._yearPlans;
            }
        }

        public virtual CreateYearPlanDto NewCreateYearPlan()
        {
            var c = new CreateYearPlanDto();
            c.PersonalName = this.PersonalName;

            return c;
        }

        ICreateYearPlan ICreatePerson.NewCreateYearPlan()
        {
            return this.NewCreateYearPlan();
        }

        ICreateYearPlan IMergePatchPerson.NewCreateYearPlan()
        {
            return this.NewCreateYearPlan();
        }

        public virtual MergePatchYearPlanDto NewMergePatchYearPlan()
        {
            var c = new MergePatchYearPlanDto();
            c.PersonalName = this.PersonalName;

            return c;
        }

        IMergePatchYearPlan IMergePatchPerson.NewMergePatchYearPlan()
        {
            return this.NewMergePatchYearPlan();
        }

        public virtual RemoveYearPlanDto NewRemoveYearPlan()
        {
            var c = new RemoveYearPlanDto();
            c.PersonalName = this.PersonalName;

            return c;
        }

        IRemoveYearPlan IMergePatchPerson.NewRemoveYearPlan()
        {
            return this.NewRemoveYearPlan();
        }

        private CreateOrMergePatchOrRemoveYearPlanDtos _yearPlans = new CreateOrMergePatchOrRemoveYearPlanDtos();

        public virtual CreateOrMergePatchOrRemoveYearPlanDto[] YearPlans
        {
            get
            {
                return _yearPlans.ToArray();
            }
            set
            {
                _yearPlans.Clear();
                _yearPlans.AddRange(value);
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrDeletePersonDto : PersonCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreatePersonDto : CreateOrMergePatchOrDeletePersonDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchPersonDto : CreateOrMergePatchOrDeletePersonDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeletePersonDto : CreateOrMergePatchOrDeletePersonDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}





}

