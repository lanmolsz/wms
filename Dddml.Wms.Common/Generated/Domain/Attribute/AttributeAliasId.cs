// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Attribute;

namespace Dddml.Wms.Domain.Attribute
{

	public class AttributeAliasId
	{

		private string _attributeId;

		public virtual string AttributeId { 
			get { return this._attributeId; } 
			internal set { _attributeId = value; } 
		}

		private string _code;

		public virtual string Code { 
			get { return this._code; } 
			internal set { _code = value; } 
		}


        #region  Flattened Properties


        #endregion

		internal AttributeAliasId ()
		{
		}

		public AttributeAliasId (string attributeId, string code)
		{
			this._attributeId = attributeId;
			this._code = code;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			AttributeAliasId other = obj as AttributeAliasId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.AttributeId, other.AttributeId)
				&& Object.Equals (this.Code, other.Code)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.AttributeId != null) {
				hash += 13 * this.AttributeId.GetHashCode ();
			}
			if (this.Code != null) {
				hash += 13 * this.Code.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(AttributeAliasId obj1, AttributeAliasId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(AttributeAliasId obj1, AttributeAliasId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "AttributeId: " + this.AttributeId + ", "
                + "Code: " + this.Code + ", "
                ;
        }
	}

}


