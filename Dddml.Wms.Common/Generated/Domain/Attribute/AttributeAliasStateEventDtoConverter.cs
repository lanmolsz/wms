// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Attribute;

namespace Dddml.Wms.Domain.Attribute
{

    public class AttributeAliasStateEventDtoConverter
    {
        public virtual AttributeAliasStateCreatedOrMergePatchedOrRemovedDto ToAttributeAliasStateEventDto(IAttributeAliasStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IAttributeAliasStateCreated)stateEvent;
                return ToAttributeAliasStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IAttributeAliasStateMergePatched)stateEvent;
                return ToAttributeAliasStateMergePatchedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.Removed)
            {
                var e = (IAttributeAliasStateRemoved)stateEvent;
                return ToAttributeAliasStateRemovedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual AttributeAliasStateCreatedDto ToAttributeAliasStateCreatedDto(IAttributeAliasStateCreated e)
        {
            var dto = new AttributeAliasStateCreatedDto();
            dto.StateEventId = new AttributeAliasEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Name = e.Name;
            dto.Active = e.Active;
            return dto;
        }

        public virtual AttributeAliasStateMergePatchedDto ToAttributeAliasStateMergePatchedDto(IAttributeAliasStateMergePatched e)
        {
            var dto = new AttributeAliasStateMergePatchedDto();
            dto.StateEventId = new AttributeAliasEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Name = e.Name;
            dto.Active = e.Active;
            dto.IsPropertyNameRemoved = e.IsPropertyNameRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual AttributeAliasStateRemovedDto ToAttributeAliasStateRemovedDto(IAttributeAliasStateRemoved e)
        {
            var dto = new AttributeAliasStateRemovedDto();
            dto.StateEventId = new AttributeAliasEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

