// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeSetInstanceExtensionFieldGroupDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeSetInstanceExtensionFieldGroup;

namespace Dddml.Wms.Domain.AttributeSetInstanceExtensionFieldGroup
{

	public static partial class AttributeSetInstanceExtensionFieldGroupStateInterfaceExtension
	{

        public static IAttributeSetInstanceExtensionFieldGroupCommand ToCreateOrMergePatchAttributeSetInstanceExtensionFieldGroup<TCreateAttributeSetInstanceExtensionFieldGroup, TMergePatchAttributeSetInstanceExtensionFieldGroup, TCreateAttributeSetInstanceExtensionField, TMergePatchAttributeSetInstanceExtensionField>(this IAttributeSetInstanceExtensionFieldGroupState state)
            where TCreateAttributeSetInstanceExtensionFieldGroup : ICreateAttributeSetInstanceExtensionFieldGroup, new()
            where TMergePatchAttributeSetInstanceExtensionFieldGroup : IMergePatchAttributeSetInstanceExtensionFieldGroup, new()
            where TCreateAttributeSetInstanceExtensionField : ICreateAttributeSetInstanceExtensionField, new()
            where TMergePatchAttributeSetInstanceExtensionField : IMergePatchAttributeSetInstanceExtensionField, new()
        {
            bool bUnsaved = ((IAttributeSetInstanceExtensionFieldGroupState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateAttributeSetInstanceExtensionFieldGroup<TCreateAttributeSetInstanceExtensionFieldGroup, TCreateAttributeSetInstanceExtensionField>();
            }
            else 
            {
                return state.ToMergePatchAttributeSetInstanceExtensionFieldGroup<TMergePatchAttributeSetInstanceExtensionFieldGroup, TCreateAttributeSetInstanceExtensionField, TMergePatchAttributeSetInstanceExtensionField>();
            }
        }

        public static TDeleteAttributeSetInstanceExtensionFieldGroup ToDeleteAttributeSetInstanceExtensionFieldGroup<TDeleteAttributeSetInstanceExtensionFieldGroup>(this IAttributeSetInstanceExtensionFieldGroupState state)
            where TDeleteAttributeSetInstanceExtensionFieldGroup : IDeleteAttributeSetInstanceExtensionFieldGroup, new()
        {
            var cmd = new TDeleteAttributeSetInstanceExtensionFieldGroup();
            cmd.Id = state.Id;
            cmd.Version = ((IAttributeSetInstanceExtensionFieldGroupStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchAttributeSetInstanceExtensionFieldGroup ToMergePatchAttributeSetInstanceExtensionFieldGroup<TMergePatchAttributeSetInstanceExtensionFieldGroup, TCreateAttributeSetInstanceExtensionField, TMergePatchAttributeSetInstanceExtensionField>(this IAttributeSetInstanceExtensionFieldGroupState state)
            where TMergePatchAttributeSetInstanceExtensionFieldGroup : IMergePatchAttributeSetInstanceExtensionFieldGroup, new()
            where TCreateAttributeSetInstanceExtensionField : ICreateAttributeSetInstanceExtensionField, new()
            where TMergePatchAttributeSetInstanceExtensionField : IMergePatchAttributeSetInstanceExtensionField, new()
        {
            var cmd = new TMergePatchAttributeSetInstanceExtensionFieldGroup();

            cmd.Version = ((IAttributeSetInstanceExtensionFieldGroupStateProperties)state).Version;

            cmd.Id = state.Id;
            cmd.FieldType = state.FieldType;
            cmd.FieldLength = state.FieldLength;
            cmd.FieldCount = state.FieldCount;
            cmd.NameFormat = state.NameFormat;
            cmd.Description = state.Description;
            cmd.Active = ((IAttributeSetInstanceExtensionFieldGroupStateProperties)state).Active;
            
            if (state.FieldType == null) { cmd.IsPropertyFieldTypeRemoved = true; }
            if (state.FieldLength == null) { cmd.IsPropertyFieldLengthRemoved = true; }
            if (state.NameFormat == null) { cmd.IsPropertyNameFormatRemoved = true; }
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            foreach (var d in state.Fields)
            {
                var c = d.ToCreateOrMergePatchAttributeSetInstanceExtensionField<TCreateAttributeSetInstanceExtensionField, TMergePatchAttributeSetInstanceExtensionField>();
                cmd.AttributeSetInstanceExtensionFieldCommands.Add(c);
            }
            return cmd;
        }

        public static TCreateAttributeSetInstanceExtensionFieldGroup ToCreateAttributeSetInstanceExtensionFieldGroup<TCreateAttributeSetInstanceExtensionFieldGroup, TCreateAttributeSetInstanceExtensionField>(this IAttributeSetInstanceExtensionFieldGroupState state)
            where TCreateAttributeSetInstanceExtensionFieldGroup : ICreateAttributeSetInstanceExtensionFieldGroup, new()
            where TCreateAttributeSetInstanceExtensionField : ICreateAttributeSetInstanceExtensionField, new()
        {
            var cmd = new TCreateAttributeSetInstanceExtensionFieldGroup();

            cmd.Version = ((IAttributeSetInstanceExtensionFieldGroupStateProperties)state).Version;

            cmd.Id = state.Id;
            cmd.FieldType = state.FieldType;
            cmd.FieldLength = state.FieldLength;
            cmd.FieldCount = state.FieldCount;
            cmd.NameFormat = state.NameFormat;
            cmd.Description = state.Description;
            cmd.Active = ((IAttributeSetInstanceExtensionFieldGroupStateProperties)state).Active;
            foreach (var d in state.Fields)
            {
                var c = d.ToCreateAttributeSetInstanceExtensionField<TCreateAttributeSetInstanceExtensionField>();
                cmd.Fields.Add(c);
            }
            return cmd;
        }
		

	}

}

