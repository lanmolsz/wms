// <autogenerated>
//   This file was generated by T4 code generator GenerateRoleTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.RoleType;

namespace Dddml.Wms.Domain.RoleType
{

	public abstract class RoleTypeStateEventDtoBase : IStateEventDto, IRoleTypeStateCreated, IRoleTypeStateMergePatched, IRoleTypeStateDeleted
	{

        private RoleTypeEventId _roleTypeEventId;

		protected internal virtual RoleTypeEventId RoleTypeEventId 
        {
            get 
            {
                if (_roleTypeEventId == null) { _roleTypeEventId = new RoleTypeEventId(); }
                return _roleTypeEventId;
            }
            set
            {
                _roleTypeEventId = value;
            }
        }

        public virtual string RoleTypeId
        {
            get { return RoleTypeEventId.RoleTypeId; }
            set { RoleTypeEventId.RoleTypeId = value; }
        }

        public virtual long Version
        {
            get { return RoleTypeEventId.Version; }
            set { RoleTypeEventId.Version = value; }
        }

		public virtual string ParentTypeId { get; set; }

		public virtual string HasTable { get; set; }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		RoleTypeEventId IGlobalIdentity<RoleTypeEventId>.GlobalId {
			get 
			{
				return this.RoleTypeEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IRoleTypeStateEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyParentTypeIdRemoved { get; set; }

        bool IRoleTypeStateMergePatched.IsPropertyParentTypeIdRemoved
        {
            get 
            {
                var b = this.IsPropertyParentTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyParentTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyHasTableRemoved { get; set; }

        bool IRoleTypeStateMergePatched.IsPropertyHasTableRemoved
        {
            get 
            {
                var b = this.IsPropertyHasTableRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyHasTableRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IRoleTypeStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IRoleTypeStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        RoleTypeEventId IRoleTypeStateEvent.RoleTypeEventId
        {
            get { return this.RoleTypeEventId; }
        }

        protected RoleTypeStateEventDtoBase()
        {
        }

        protected RoleTypeStateEventDtoBase(RoleTypeEventId stateEventId)
        {
            this.RoleTypeEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class RoleTypeStateCreatedOrMergePatchedOrDeletedDto : RoleTypeStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._eventType;
        }

    }



	public class RoleTypeStateCreatedDto : RoleTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public RoleTypeStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class RoleTypeStateMergePatchedDto : RoleTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public RoleTypeStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class RoleTypeStateDeletedDto : RoleTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public RoleTypeStateDeletedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class RoleTypeStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IRoleTypeStateCreated>, IEnumerable<IRoleTypeStateMergePatched>, IEnumerable<IRoleTypeStateDeleted>
    {
        private List<RoleTypeStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<RoleTypeStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual RoleTypeStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<RoleTypeStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IRoleTypeStateCreated> IEnumerable<IRoleTypeStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IRoleTypeStateMergePatched> IEnumerable<IRoleTypeStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IRoleTypeStateDeleted> IEnumerable<IRoleTypeStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddRoleTypeEvent(IRoleTypeStateCreated e)
        {
            _innerStateEvents.Add((RoleTypeStateCreatedDto)e);
        }

        public void AddRoleTypeEvent(IRoleTypeStateEvent e)
        {
            _innerStateEvents.Add((RoleTypeStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddRoleTypeEvent(IRoleTypeStateDeleted e)
        {
            _innerStateEvents.Add((RoleTypeStateDeletedDto)e);
        }

    }


}

