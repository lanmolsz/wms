// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentMethodTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentMethodType;

namespace Dddml.Wms.Domain.ShipmentMethodType
{

	public abstract class ShipmentMethodTypeStateEventDtoBase : IStateEventDto, IShipmentMethodTypeStateCreated, IShipmentMethodTypeStateMergePatched, IShipmentMethodTypeStateDeleted
	{

        private ShipmentMethodTypeEventId _shipmentMethodTypeEventId;

		protected internal virtual ShipmentMethodTypeEventId ShipmentMethodTypeEventId 
        {
            get 
            {
                if (_shipmentMethodTypeEventId == null) { _shipmentMethodTypeEventId = new ShipmentMethodTypeEventId(); }
                return _shipmentMethodTypeEventId;
            }
            set
            {
                _shipmentMethodTypeEventId = value;
            }
        }

        public virtual string ShipmentMethodTypeId
        {
            get { return ShipmentMethodTypeEventId.ShipmentMethodTypeId; }
            set { ShipmentMethodTypeEventId.ShipmentMethodTypeId = value; }
        }

        public virtual long Version
        {
            get { return ShipmentMethodTypeEventId.Version; }
            set { ShipmentMethodTypeEventId.Version = value; }
        }

		public virtual string Description { get; set; }

		public virtual long? SequenceNum { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		ShipmentMethodTypeEventId IGlobalIdentity<ShipmentMethodTypeEventId>.GlobalId {
			get 
			{
				return this.ShipmentMethodTypeEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IShipmentMethodTypeStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IShipmentMethodTypeStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertySequenceNumRemoved { get; set; }

        bool IShipmentMethodTypeStateMergePatched.IsPropertySequenceNumRemoved
        {
            get 
            {
                var b = this.IsPropertySequenceNumRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertySequenceNumRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IShipmentMethodTypeStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        ShipmentMethodTypeEventId IShipmentMethodTypeStateEvent.ShipmentMethodTypeEventId
        {
            get { return this.ShipmentMethodTypeEventId; }
        }

        protected ShipmentMethodTypeStateEventDtoBase()
        {
        }

        protected ShipmentMethodTypeStateEventDtoBase(ShipmentMethodTypeEventId stateEventId)
        {
            this.ShipmentMethodTypeEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto : ShipmentMethodTypeStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class ShipmentMethodTypeStateCreatedDto : ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public ShipmentMethodTypeStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class ShipmentMethodTypeStateMergePatchedDto : ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public ShipmentMethodTypeStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class ShipmentMethodTypeStateDeletedDto : ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public ShipmentMethodTypeStateDeletedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IShipmentMethodTypeStateCreated>, IEnumerable<IShipmentMethodTypeStateMergePatched>, IEnumerable<IShipmentMethodTypeStateDeleted>
    {
        private List<ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentMethodTypeStateCreated> IEnumerable<IShipmentMethodTypeStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentMethodTypeStateMergePatched> IEnumerable<IShipmentMethodTypeStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentMethodTypeStateDeleted> IEnumerable<IShipmentMethodTypeStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddShipmentMethodTypeEvent(IShipmentMethodTypeStateCreated e)
        {
            _innerStateEvents.Add((ShipmentMethodTypeStateCreatedDto)e);
        }

        public void AddShipmentMethodTypeEvent(IShipmentMethodTypeStateEvent e)
        {
            _innerStateEvents.Add((ShipmentMethodTypeStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddShipmentMethodTypeEvent(IShipmentMethodTypeStateDeleted e)
        {
            _innerStateEvents.Add((ShipmentMethodTypeStateDeletedDto)e);
        }

    }


}

