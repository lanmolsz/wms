// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

    public partial class AttributeStateDto : IAttributeStateDto
    {
        public virtual string AttributeId
        {
            get;
            set;
        }

        public virtual string Name
        {
            get;
            set;
        }

        public virtual string OrganizationId
        {
            get;
            set;
        }

        public virtual string Description
        {
            get;
            set;
        }

        public virtual bool? IsMandatory
        {
            get;
            set;
        }

        public virtual bool? IsInstanceAttribute
        {
            get;
            set;
        }

        public virtual string AttributeValueType
        {
            get;
            set;
        }

        public virtual int? AttributeValueLength
        {
            get;
            set;
        }

        public virtual bool? IsList
        {
            get;
            set;
        }

        public virtual string FieldName
        {
            get;
            set;
        }

        public virtual string ReferenceId
        {
            get;
            set;
        }

        public virtual bool? Active
        {
            get;
            set;
        }

        public virtual long? Version
        {
            get;
            set;
        }

        public virtual string CreatedBy
        {
            get;
            set;
        }

        public virtual DateTime? CreatedAt
        {
            get;
            set;
        }

        public virtual string UpdatedBy
        {
            get;
            set;
        }

        public virtual DateTime? UpdatedAt
        {
            get;
            set;
        }

        public virtual AttributeValueStateDto[] AttributeValues
        {
            get;
            set;
        }

        IAttributeValueStateDto[] IAttributeStateDto.AttributeValues
        {
            get { return this.AttributeValues; }
            set { this.AttributeValues = value.Select(e => ((AttributeValueStateDto)e)).ToArray(); }
        }

        public virtual IAttributeState ToAttributeState()
        {
            var state = new AttributeState(true);
            state.AttributeId = this.AttributeId;
            state.Name = this.Name;
            state.OrganizationId = this.OrganizationId;
            state.Description = this.Description;
            if (this.IsMandatory != null && this.IsMandatory.HasValue) { state.IsMandatory = this.IsMandatory.Value; }
            if (this.IsInstanceAttribute != null && this.IsInstanceAttribute.HasValue) { state.IsInstanceAttribute = this.IsInstanceAttribute.Value; }
            state.AttributeValueType = this.AttributeValueType;
            state.AttributeValueLength = this.AttributeValueLength;
            if (this.IsList != null && this.IsList.HasValue) { state.IsList = this.IsList.Value; }
            state.FieldName = this.FieldName;
            state.ReferenceId = this.ReferenceId;
            if (this.Active != null && this.Active.HasValue) { state.Active = this.Active.Value; }
            if (this.Version != null && this.Version.HasValue) { state.Version = this.Version.Value; }
            state.CreatedBy = this.CreatedBy;
            if (this.CreatedAt != null && this.CreatedAt.HasValue) { state.CreatedAt = this.CreatedAt.Value; }
            state.UpdatedBy = this.UpdatedBy;
            if (this.UpdatedAt != null && this.UpdatedAt.HasValue) { state.UpdatedAt = this.UpdatedAt.Value; }
            if (this.AttributeValues != null) { foreach (var s in this.AttributeValues) { state.AttributeValues.AddToSave(s.ToAttributeValueState()); } };

            return state;
        }

    }

}

