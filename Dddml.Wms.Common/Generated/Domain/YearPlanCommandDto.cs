// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public abstract class YearPlanCommandDtoBase : ICommandDto, ICreateYearPlan, IMergePatchYearPlan, IRemoveYearPlan
	{

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual int Year { get; set; }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }


		public virtual PersonalNameDto PersonalName { get; set; }

        PersonalName ICreateOrMergePatchOrRemoveYearPlan.PersonalName
        {
            get 
            {
                return (this.PersonalName == null) ? null : this.PersonalName.ToPersonalName();
            }
            set 
            {
                this.PersonalName = (value == null) ? null : new PersonalNameDto(value);
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IMergePatchYearPlan.IsPropertyDescriptionRemoved
        {
            get
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchYearPlan.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

        ICreateMonthPlanCommands ICreateYearPlan.MonthPlans
        {
            get
            {
                return this._monthPlans;
            }
        }

        IMonthPlanCommands IMergePatchYearPlan.MonthPlanCommands
        {
            get
            {
                return this._monthPlans;
            }
        }

        public virtual CreateMonthPlanDto NewCreateMonthPlan()
        {
            var c = new CreateMonthPlanDto();
            c.PersonalName = this.PersonalName;

            c.Year = this.Year;

            return c;
        }

        ICreateMonthPlan ICreateYearPlan.NewCreateMonthPlan()
        {
            return this.NewCreateMonthPlan();
        }

        ICreateMonthPlan IMergePatchYearPlan.NewCreateMonthPlan()
        {
            return this.NewCreateMonthPlan();
        }

        public virtual MergePatchMonthPlanDto NewMergePatchMonthPlan()
        {
            var c = new MergePatchMonthPlanDto();
            c.PersonalName = this.PersonalName;

            c.Year = this.Year;

            return c;
        }

        IMergePatchMonthPlan IMergePatchYearPlan.NewMergePatchMonthPlan()
        {
            return this.NewMergePatchMonthPlan();
        }

        public virtual RemoveMonthPlanDto NewRemoveMonthPlan()
        {
            var c = new RemoveMonthPlanDto();
            c.PersonalName = this.PersonalName;

            c.Year = this.Year;

            return c;
        }

        IRemoveMonthPlan IMergePatchYearPlan.NewRemoveMonthPlan()
        {
            return this.NewRemoveMonthPlan();
        }

        private CreateOrMergePatchOrRemoveMonthPlanDtos _monthPlans = new CreateOrMergePatchOrRemoveMonthPlanDtos();

        public virtual CreateOrMergePatchOrRemoveMonthPlanDto[] MonthPlans
        {
            get
            {
                return _monthPlans.ToArray();
            }
            set
            {
                _monthPlans.Clear();
                _monthPlans.AddRange(value);
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrRemoveYearPlanDto : YearPlanCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateYearPlanDto : CreateOrMergePatchOrRemoveYearPlanDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchYearPlanDto : CreateOrMergePatchOrRemoveYearPlanDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class RemoveYearPlanDto : CreateOrMergePatchOrRemoveYearPlanDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Remove;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}


    public partial class CreateOrMergePatchOrRemoveYearPlanDtos : IYearPlanCommands, ICreateYearPlanCommands, IEnumerable<CreateOrMergePatchOrRemoveYearPlanDto>
    {
        private List<CreateOrMergePatchOrRemoveYearPlanDto> _innerCommands = new List<CreateOrMergePatchOrRemoveYearPlanDto>();

        public virtual CreateOrMergePatchOrRemoveYearPlanDto[] ToArray()
        {
            return _innerCommands.ToArray();
        }

        public virtual void Clear()
        {
            _innerCommands.Clear();
        }

        public virtual void AddRange(IEnumerable<CreateOrMergePatchOrRemoveYearPlanDto> cs)
        {
            _innerCommands.AddRange(cs);
        }

        void IYearPlanCommands.Add(IYearPlanCommand c)
        {
            _innerCommands.Add((CreateOrMergePatchOrRemoveYearPlanDto)c);
        }

        void IYearPlanCommands.Remove(IYearPlanCommand c)
        {
            _innerCommands.Remove((CreateOrMergePatchOrRemoveYearPlanDto)c);
        }


        IEnumerator<CreateOrMergePatchOrRemoveYearPlanDto> IEnumerable<CreateOrMergePatchOrRemoveYearPlanDto>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        IEnumerator<IYearPlanCommand> IEnumerable<IYearPlanCommand>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        void ICreateYearPlanCommands.Add(ICreateYearPlan c)
        {
            _innerCommands.Add((CreateYearPlanDto)c);
        }

        void ICreateYearPlanCommands.Remove(ICreateYearPlan c)
        {
            _innerCommands.Remove((CreateYearPlanDto)c);
        }

        IEnumerator<ICreateYearPlan> IEnumerable<ICreateYearPlan>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }






}

