// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public abstract class YearPlanCommandBase : IYearPlanCommand
	{
		public virtual int Year { get; set; }


		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		// Outer Id:

		public virtual PersonalName PersonalName { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


    public abstract class YearPlanIdGeneratorBase : IIdGenerator<int, ICreateYearPlan>
    {
        public abstract int GenerateId(ICreateYearPlan command);

        public abstract int GetNextId();

        public virtual int GetOrGenerateId(ICreateYearPlan command, out bool reused)
        {
            throw new NotSupportedException();
        }

    }

	public class CreateYearPlan : YearPlanCommandBase, ICreateYearPlan
	{
		
		public CreateYearPlan ()
		{
		}


        private CreateMonthPlanCommands _monthPlans = new CreateMonthPlanCommands();

        public ICreateMonthPlanCommands MonthPlans
        {
            get
            {
                return this._monthPlans;
            }
        }

        public CreateMonthPlan NewCreateMonthPlan()
        {
            var c = new CreateMonthPlan();
            c.PersonalName = this.PersonalName;

            c.Year = this.Year;

            return c;
        }

        ICreateMonthPlan ICreateYearPlan.NewCreateMonthPlan()
        {
            return this.NewCreateMonthPlan();
        }



        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchYearPlan :YearPlanCommandBase, IMergePatchYearPlan
	{

		public virtual bool IsPropertyDescriptionRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchYearPlan ()
		{
		}

        private MonthPlanCommands _monthPlanCommands = new MonthPlanCommands();

        public IMonthPlanCommands MonthPlanCommands
        {
            get
            {
                return this._monthPlanCommands;
            }
        }


        public CreateMonthPlan NewCreateMonthPlan()
        {
            var c = new CreateMonthPlan();
            c.PersonalName = this.PersonalName;

            c.Year = this.Year;

            return c;
        }

        ICreateMonthPlan IMergePatchYearPlan.NewCreateMonthPlan()
        {
            return this.NewCreateMonthPlan();
        }

        public MergePatchMonthPlan NewMergePatchMonthPlan()
        {
            var c = new MergePatchMonthPlan();
            c.PersonalName = this.PersonalName;

            c.Year = this.Year;

            return c;
        }

        IMergePatchMonthPlan IMergePatchYearPlan.NewMergePatchMonthPlan()
        {
            return this.NewMergePatchMonthPlan();
        }


        public RemoveMonthPlan NewRemoveMonthPlan()
        {
            var c = new RemoveMonthPlan();
            c.PersonalName = this.PersonalName;

            c.Year = this.Year;

            return c;
        }

        IRemoveMonthPlan IMergePatchYearPlan.NewRemoveMonthPlan()
        {
            return this.NewRemoveMonthPlan();
        }


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class RemoveYearPlan : YearPlanCommandBase, IRemoveYearPlan
	{
		public RemoveYearPlan ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Remove;
        }
	}


    public class CreateMonthPlanCommands : ICreateMonthPlanCommands
    {
        private List<ICreateMonthPlan> _innerCommands = new List<ICreateMonthPlan>();

        public void Add(ICreateMonthPlan c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreateMonthPlan c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreateMonthPlan> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class MonthPlanCommands : IMonthPlanCommands
    {
        private List<IMonthPlanCommand> _innerCommands = new List<IMonthPlanCommand>();

        public void Add(IMonthPlanCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IMonthPlanCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IMonthPlanCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }




}

