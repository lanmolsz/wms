// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentType;

namespace Dddml.Wms.Domain.ShipmentType
{

	public static partial class ShipmentTypeStateInterfaceExtension
	{

        public static IShipmentTypeCommand ToCreateOrMergePatchShipmentType<TCreateShipmentType, TMergePatchShipmentType>(this IShipmentTypeState state)
            where TCreateShipmentType : ICreateShipmentType, new()
            where TMergePatchShipmentType : IMergePatchShipmentType, new()
        {
            bool bUnsaved = ((IShipmentTypeState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateShipmentType<TCreateShipmentType>();
            }
            else 
            {
                return state.ToMergePatchShipmentType<TMergePatchShipmentType>();
            }
        }

        public static TDeleteShipmentType ToDeleteShipmentType<TDeleteShipmentType>(this IShipmentTypeState state)
            where TDeleteShipmentType : IDeleteShipmentType, new()
        {
            var cmd = new TDeleteShipmentType();
            cmd.ShipmentTypeId = state.ShipmentTypeId;
            cmd.Version = ((IShipmentTypeStateProperties)state).Version;

            return cmd;
        }

        public static TMergePatchShipmentType ToMergePatchShipmentType<TMergePatchShipmentType>(this IShipmentTypeState state)
            where TMergePatchShipmentType : IMergePatchShipmentType, new()
        {
            var cmd = new TMergePatchShipmentType();

            cmd.Version = ((IShipmentTypeStateProperties)state).Version;

            cmd.ShipmentTypeId = state.ShipmentTypeId;
            cmd.Description = state.Description;
            cmd.Active = ((IShipmentTypeStateProperties)state).Active;
            
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            return cmd;
        }

        public static TCreateShipmentType ToCreateShipmentType<TCreateShipmentType>(this IShipmentTypeState state)
            where TCreateShipmentType : ICreateShipmentType, new()
        {
            var cmd = new TCreateShipmentType();

            cmd.Version = ((IShipmentTypeStateProperties)state).Version;

            cmd.ShipmentTypeId = state.ShipmentTypeId;
            cmd.Description = state.Description;
            cmd.Active = ((IShipmentTypeStateProperties)state).Active;
            return cmd;
        }
		

	}

}

