// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderRoleMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.OrderRoleMvo;
using Dddml.Wms.Domain.Order;

namespace Dddml.Wms.Domain.OrderRoleMvo
{

    public class OrderRoleMvoStateEventDtoConverter
    {
        public virtual OrderRoleMvoStateCreatedOrMergePatchedOrDeletedDto ToOrderRoleMvoStateEventDto(IOrderRoleMvoEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IOrderRoleMvoStateCreated)stateEvent;
                return ToOrderRoleMvoStateCreatedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.MergePatched)
            {
                var e = (IOrderRoleMvoStateMergePatched)stateEvent;
                return ToOrderRoleMvoStateMergePatchedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.Deleted)
            {
                var e = (IOrderRoleMvoStateDeleted)stateEvent;
                return ToOrderRoleMvoStateDeletedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual OrderRoleMvoStateCreatedDto ToOrderRoleMvoStateCreatedDto(IOrderRoleMvoStateCreated e)
        {
            var dto = new OrderRoleMvoStateCreatedDto();
            dto.OrderRoleMvoEventId = e.OrderRoleMvoEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Version = e.Version;
            dto.Active = e.Active;
            dto.OrderOrderTypeId = e.OrderOrderTypeId;
            dto.OrderOrderName = e.OrderOrderName;
            dto.OrderExternalId = e.OrderExternalId;
            dto.OrderSalesChannelEnumId = e.OrderSalesChannelEnumId;
            dto.OrderOrderDate = e.OrderOrderDate;
            dto.OrderPriority = e.OrderPriority;
            dto.OrderEntryDate = e.OrderEntryDate;
            dto.OrderPickSheetPrintedDate = e.OrderPickSheetPrintedDate;
            dto.OrderStatusId = e.OrderStatusId;
            dto.OrderCurrencyUom = e.OrderCurrencyUom;
            dto.OrderSyncStatusId = e.OrderSyncStatusId;
            dto.OrderBillingAccountId = e.OrderBillingAccountId;
            dto.OrderOriginFacilityId = e.OrderOriginFacilityId;
            dto.OrderWebSiteId = e.OrderWebSiteId;
            dto.OrderProductStoreId = e.OrderProductStoreId;
            dto.OrderTerminalId = e.OrderTerminalId;
            dto.OrderTransactionId = e.OrderTransactionId;
            dto.OrderAutoOrderShoppingListId = e.OrderAutoOrderShoppingListId;
            dto.OrderNeedsInventoryIssuance = e.OrderNeedsInventoryIssuance;
            dto.OrderIsRushOrder = e.OrderIsRushOrder;
            dto.OrderInternalCode = e.OrderInternalCode;
            dto.OrderRemainingSubTotal = e.OrderRemainingSubTotal;
            dto.OrderGrandTotal = e.OrderGrandTotal;
            dto.OrderInvoicePerShipment = e.OrderInvoicePerShipment;
            dto.OrderCreatedBy = e.OrderCreatedBy;
            dto.OrderCreatedAt = e.OrderCreatedAt;
            dto.OrderUpdatedBy = e.OrderUpdatedBy;
            dto.OrderUpdatedAt = e.OrderUpdatedAt;
            dto.OrderActive = e.OrderActive;
            return dto;
        }

        public virtual OrderRoleMvoStateMergePatchedDto ToOrderRoleMvoStateMergePatchedDto(IOrderRoleMvoStateMergePatched e)
        {
            var dto = new OrderRoleMvoStateMergePatchedDto();
            dto.OrderRoleMvoEventId = e.OrderRoleMvoEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Version = e.Version;
            dto.Active = e.Active;
            dto.OrderOrderTypeId = e.OrderOrderTypeId;
            dto.OrderOrderName = e.OrderOrderName;
            dto.OrderExternalId = e.OrderExternalId;
            dto.OrderSalesChannelEnumId = e.OrderSalesChannelEnumId;
            dto.OrderOrderDate = e.OrderOrderDate;
            dto.OrderPriority = e.OrderPriority;
            dto.OrderEntryDate = e.OrderEntryDate;
            dto.OrderPickSheetPrintedDate = e.OrderPickSheetPrintedDate;
            dto.OrderStatusId = e.OrderStatusId;
            dto.OrderCurrencyUom = e.OrderCurrencyUom;
            dto.OrderSyncStatusId = e.OrderSyncStatusId;
            dto.OrderBillingAccountId = e.OrderBillingAccountId;
            dto.OrderOriginFacilityId = e.OrderOriginFacilityId;
            dto.OrderWebSiteId = e.OrderWebSiteId;
            dto.OrderProductStoreId = e.OrderProductStoreId;
            dto.OrderTerminalId = e.OrderTerminalId;
            dto.OrderTransactionId = e.OrderTransactionId;
            dto.OrderAutoOrderShoppingListId = e.OrderAutoOrderShoppingListId;
            dto.OrderNeedsInventoryIssuance = e.OrderNeedsInventoryIssuance;
            dto.OrderIsRushOrder = e.OrderIsRushOrder;
            dto.OrderInternalCode = e.OrderInternalCode;
            dto.OrderRemainingSubTotal = e.OrderRemainingSubTotal;
            dto.OrderGrandTotal = e.OrderGrandTotal;
            dto.OrderInvoicePerShipment = e.OrderInvoicePerShipment;
            dto.OrderCreatedBy = e.OrderCreatedBy;
            dto.OrderCreatedAt = e.OrderCreatedAt;
            dto.OrderUpdatedBy = e.OrderUpdatedBy;
            dto.OrderUpdatedAt = e.OrderUpdatedAt;
            dto.OrderActive = e.OrderActive;
            dto.IsPropertyVersionRemoved = e.IsPropertyVersionRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;
            dto.IsPropertyOrderOrderTypeIdRemoved = e.IsPropertyOrderOrderTypeIdRemoved;
            dto.IsPropertyOrderOrderNameRemoved = e.IsPropertyOrderOrderNameRemoved;
            dto.IsPropertyOrderExternalIdRemoved = e.IsPropertyOrderExternalIdRemoved;
            dto.IsPropertyOrderSalesChannelEnumIdRemoved = e.IsPropertyOrderSalesChannelEnumIdRemoved;
            dto.IsPropertyOrderOrderDateRemoved = e.IsPropertyOrderOrderDateRemoved;
            dto.IsPropertyOrderPriorityRemoved = e.IsPropertyOrderPriorityRemoved;
            dto.IsPropertyOrderEntryDateRemoved = e.IsPropertyOrderEntryDateRemoved;
            dto.IsPropertyOrderPickSheetPrintedDateRemoved = e.IsPropertyOrderPickSheetPrintedDateRemoved;
            dto.IsPropertyOrderStatusIdRemoved = e.IsPropertyOrderStatusIdRemoved;
            dto.IsPropertyOrderCurrencyUomRemoved = e.IsPropertyOrderCurrencyUomRemoved;
            dto.IsPropertyOrderSyncStatusIdRemoved = e.IsPropertyOrderSyncStatusIdRemoved;
            dto.IsPropertyOrderBillingAccountIdRemoved = e.IsPropertyOrderBillingAccountIdRemoved;
            dto.IsPropertyOrderOriginFacilityIdRemoved = e.IsPropertyOrderOriginFacilityIdRemoved;
            dto.IsPropertyOrderWebSiteIdRemoved = e.IsPropertyOrderWebSiteIdRemoved;
            dto.IsPropertyOrderProductStoreIdRemoved = e.IsPropertyOrderProductStoreIdRemoved;
            dto.IsPropertyOrderTerminalIdRemoved = e.IsPropertyOrderTerminalIdRemoved;
            dto.IsPropertyOrderTransactionIdRemoved = e.IsPropertyOrderTransactionIdRemoved;
            dto.IsPropertyOrderAutoOrderShoppingListIdRemoved = e.IsPropertyOrderAutoOrderShoppingListIdRemoved;
            dto.IsPropertyOrderNeedsInventoryIssuanceRemoved = e.IsPropertyOrderNeedsInventoryIssuanceRemoved;
            dto.IsPropertyOrderIsRushOrderRemoved = e.IsPropertyOrderIsRushOrderRemoved;
            dto.IsPropertyOrderInternalCodeRemoved = e.IsPropertyOrderInternalCodeRemoved;
            dto.IsPropertyOrderRemainingSubTotalRemoved = e.IsPropertyOrderRemainingSubTotalRemoved;
            dto.IsPropertyOrderGrandTotalRemoved = e.IsPropertyOrderGrandTotalRemoved;
            dto.IsPropertyOrderInvoicePerShipmentRemoved = e.IsPropertyOrderInvoicePerShipmentRemoved;
            dto.IsPropertyOrderCreatedByRemoved = e.IsPropertyOrderCreatedByRemoved;
            dto.IsPropertyOrderCreatedAtRemoved = e.IsPropertyOrderCreatedAtRemoved;
            dto.IsPropertyOrderUpdatedByRemoved = e.IsPropertyOrderUpdatedByRemoved;
            dto.IsPropertyOrderUpdatedAtRemoved = e.IsPropertyOrderUpdatedAtRemoved;
            dto.IsPropertyOrderActiveRemoved = e.IsPropertyOrderActiveRemoved;

            return dto;
        }


        public virtual OrderRoleMvoStateDeletedDto ToOrderRoleMvoStateDeletedDto(IOrderRoleMvoStateDeleted e)
        {
            var dto = new OrderRoleMvoStateDeletedDto();
            dto.OrderRoleMvoEventId = e.OrderRoleMvoEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

