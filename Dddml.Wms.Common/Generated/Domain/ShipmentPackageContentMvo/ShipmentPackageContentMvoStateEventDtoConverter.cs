// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentPackageContentMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentPackageContentMvo;
using Dddml.Wms.Domain.ShipmentPackage;

namespace Dddml.Wms.Domain.ShipmentPackageContentMvo
{

    public class ShipmentPackageContentMvoStateEventDtoConverter
    {
        public virtual ShipmentPackageContentMvoStateCreatedOrMergePatchedOrDeletedDto ToShipmentPackageContentMvoStateEventDto(IShipmentPackageContentMvoStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IShipmentPackageContentMvoStateCreated)stateEvent;
                return ToShipmentPackageContentMvoStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IShipmentPackageContentMvoStateMergePatched)stateEvent;
                return ToShipmentPackageContentMvoStateMergePatchedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.Deleted)
            {
                var e = (IShipmentPackageContentMvoStateDeleted)stateEvent;
                return ToShipmentPackageContentMvoStateDeletedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual ShipmentPackageContentMvoStateCreatedDto ToShipmentPackageContentMvoStateCreatedDto(IShipmentPackageContentMvoStateCreated e)
        {
            var dto = new ShipmentPackageContentMvoStateCreatedDto();
            dto.ShipmentPackageContentMvoEventId = e.ShipmentPackageContentMvoEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Quantity = e.Quantity;
            dto.SubProductId = e.SubProductId;
            dto.SubProductQuantity = e.SubProductQuantity;
            dto.Version = e.Version;
            dto.Active = e.Active;
            dto.ShipmentPackageShipmentBoxTypeId = e.ShipmentPackageShipmentBoxTypeId;
            dto.ShipmentPackageDateCreated = e.ShipmentPackageDateCreated;
            dto.ShipmentPackageBoxLength = e.ShipmentPackageBoxLength;
            dto.ShipmentPackageBoxHeight = e.ShipmentPackageBoxHeight;
            dto.ShipmentPackageBoxWidth = e.ShipmentPackageBoxWidth;
            dto.ShipmentPackageDimensionUomId = e.ShipmentPackageDimensionUomId;
            dto.ShipmentPackageWeight = e.ShipmentPackageWeight;
            dto.ShipmentPackageWeightUomId = e.ShipmentPackageWeightUomId;
            dto.ShipmentPackageInsuredValue = e.ShipmentPackageInsuredValue;
            dto.ShipmentPackageCreatedBy = e.ShipmentPackageCreatedBy;
            dto.ShipmentPackageCreatedAt = e.ShipmentPackageCreatedAt;
            dto.ShipmentPackageUpdatedBy = e.ShipmentPackageUpdatedBy;
            dto.ShipmentPackageUpdatedAt = e.ShipmentPackageUpdatedAt;
            dto.ShipmentPackageActive = e.ShipmentPackageActive;
            dto.ShipmentPackageDeleted = e.ShipmentPackageDeleted;
            return dto;
        }

        public virtual ShipmentPackageContentMvoStateMergePatchedDto ToShipmentPackageContentMvoStateMergePatchedDto(IShipmentPackageContentMvoStateMergePatched e)
        {
            var dto = new ShipmentPackageContentMvoStateMergePatchedDto();
            dto.ShipmentPackageContentMvoEventId = e.ShipmentPackageContentMvoEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Quantity = e.Quantity;
            dto.SubProductId = e.SubProductId;
            dto.SubProductQuantity = e.SubProductQuantity;
            dto.Version = e.Version;
            dto.Active = e.Active;
            dto.ShipmentPackageShipmentBoxTypeId = e.ShipmentPackageShipmentBoxTypeId;
            dto.ShipmentPackageDateCreated = e.ShipmentPackageDateCreated;
            dto.ShipmentPackageBoxLength = e.ShipmentPackageBoxLength;
            dto.ShipmentPackageBoxHeight = e.ShipmentPackageBoxHeight;
            dto.ShipmentPackageBoxWidth = e.ShipmentPackageBoxWidth;
            dto.ShipmentPackageDimensionUomId = e.ShipmentPackageDimensionUomId;
            dto.ShipmentPackageWeight = e.ShipmentPackageWeight;
            dto.ShipmentPackageWeightUomId = e.ShipmentPackageWeightUomId;
            dto.ShipmentPackageInsuredValue = e.ShipmentPackageInsuredValue;
            dto.ShipmentPackageCreatedBy = e.ShipmentPackageCreatedBy;
            dto.ShipmentPackageCreatedAt = e.ShipmentPackageCreatedAt;
            dto.ShipmentPackageUpdatedBy = e.ShipmentPackageUpdatedBy;
            dto.ShipmentPackageUpdatedAt = e.ShipmentPackageUpdatedAt;
            dto.ShipmentPackageActive = e.ShipmentPackageActive;
            dto.ShipmentPackageDeleted = e.ShipmentPackageDeleted;
            dto.IsPropertyQuantityRemoved = e.IsPropertyQuantityRemoved;
            dto.IsPropertySubProductIdRemoved = e.IsPropertySubProductIdRemoved;
            dto.IsPropertySubProductQuantityRemoved = e.IsPropertySubProductQuantityRemoved;
            dto.IsPropertyVersionRemoved = e.IsPropertyVersionRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;
            dto.IsPropertyShipmentPackageShipmentBoxTypeIdRemoved = e.IsPropertyShipmentPackageShipmentBoxTypeIdRemoved;
            dto.IsPropertyShipmentPackageDateCreatedRemoved = e.IsPropertyShipmentPackageDateCreatedRemoved;
            dto.IsPropertyShipmentPackageBoxLengthRemoved = e.IsPropertyShipmentPackageBoxLengthRemoved;
            dto.IsPropertyShipmentPackageBoxHeightRemoved = e.IsPropertyShipmentPackageBoxHeightRemoved;
            dto.IsPropertyShipmentPackageBoxWidthRemoved = e.IsPropertyShipmentPackageBoxWidthRemoved;
            dto.IsPropertyShipmentPackageDimensionUomIdRemoved = e.IsPropertyShipmentPackageDimensionUomIdRemoved;
            dto.IsPropertyShipmentPackageWeightRemoved = e.IsPropertyShipmentPackageWeightRemoved;
            dto.IsPropertyShipmentPackageWeightUomIdRemoved = e.IsPropertyShipmentPackageWeightUomIdRemoved;
            dto.IsPropertyShipmentPackageInsuredValueRemoved = e.IsPropertyShipmentPackageInsuredValueRemoved;
            dto.IsPropertyShipmentPackageCreatedByRemoved = e.IsPropertyShipmentPackageCreatedByRemoved;
            dto.IsPropertyShipmentPackageCreatedAtRemoved = e.IsPropertyShipmentPackageCreatedAtRemoved;
            dto.IsPropertyShipmentPackageUpdatedByRemoved = e.IsPropertyShipmentPackageUpdatedByRemoved;
            dto.IsPropertyShipmentPackageUpdatedAtRemoved = e.IsPropertyShipmentPackageUpdatedAtRemoved;
            dto.IsPropertyShipmentPackageActiveRemoved = e.IsPropertyShipmentPackageActiveRemoved;
            dto.IsPropertyShipmentPackageDeletedRemoved = e.IsPropertyShipmentPackageDeletedRemoved;

            return dto;
        }


        public virtual ShipmentPackageContentMvoStateDeletedDto ToShipmentPackageContentMvoStateDeletedDto(IShipmentPackageContentMvoStateDeleted e)
        {
            var dto = new ShipmentPackageContentMvoStateDeletedDto();
            dto.ShipmentPackageContentMvoEventId = e.ShipmentPackageContentMvoEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

