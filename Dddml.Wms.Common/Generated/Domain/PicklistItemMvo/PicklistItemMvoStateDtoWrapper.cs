// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistItemMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PicklistItemMvo;
using Dddml.Wms.Domain.PicklistBin;

namespace Dddml.Wms.Domain.PicklistItemMvo
{

	public partial class PicklistItemMvoStateDtoWrapper : StateDtoWrapperBase, IPicklistItemMvoStateDto, IPicklistItemMvoState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IPicklistItemMvoState _state;

        public PicklistItemMvoStateDtoWrapper()
        {
            this._state = new PicklistItemMvoState();
        }

		public PicklistItemMvoStateDtoWrapper(IPicklistItemMvoState state)
		{
            this._state = state;
		}

		public IPicklistItemMvoState ToPicklistItemMvoState()
		{
			return this._state;
		}

		public virtual PicklistBinPicklistItemId PicklistBinPicklistItemId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinPicklistItemId"))
                {
                    return _state.PicklistBinPicklistItemId;
                }
                return null;
            }
            set
            {
                _state.PicklistBinPicklistItemId = value;
            }
        }

        PicklistBinPicklistItemId IPicklistItemMvoStateProperties.PicklistBinPicklistItemId
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinPicklistItemId;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinPicklistItemId = value;
            }
        }

		public virtual string ItemStatusId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ItemStatusId"))
                {
                    return _state.ItemStatusId;
                }
                return null;
            }
            set
            {
                _state.ItemStatusId = value;
            }
        }

        string IPicklistItemMvoStateProperties.ItemStatusId
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).ItemStatusId;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).ItemStatusId = value;
            }
        }

		public virtual decimal? Quantity
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Quantity"))
                {
                    return _state.Quantity;
                }
                return null;
            }
            set
            {
                _state.Quantity = value;
            }
        }

        decimal? IPicklistItemMvoStateProperties.Quantity
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).Quantity;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).Quantity = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IPicklistItemMvoStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IPicklistItemMvoStateProperties).Version = value.Value;
                }
            }
        }

        long IPicklistItemMvoStateProperties.Version
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).Version;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).Version = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IPicklistItemMvoStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IPicklistItemMvoStateProperties).Active = value.Value;
                }
            }
        }

        bool IPicklistItemMvoStateProperties.Active
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).Active;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).Active = value;
            }
        }

		public virtual string PicklistBinPicklistId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinPicklistId"))
                {
                    return _state.PicklistBinPicklistId;
                }
                return null;
            }
            set
            {
                _state.PicklistBinPicklistId = value;
            }
        }

        string IPicklistItemMvoStateProperties.PicklistBinPicklistId
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinPicklistId;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinPicklistId = value;
            }
        }

		public virtual long? PicklistBinBinLocationNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinBinLocationNumber"))
                {
                    return _state.PicklistBinBinLocationNumber;
                }
                return null;
            }
            set
            {
                _state.PicklistBinBinLocationNumber = value;
            }
        }

        long? IPicklistItemMvoStateProperties.PicklistBinBinLocationNumber
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinBinLocationNumber;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinBinLocationNumber = value;
            }
        }

		public virtual string PicklistBinPrimaryOrderId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinPrimaryOrderId"))
                {
                    return _state.PicklistBinPrimaryOrderId;
                }
                return null;
            }
            set
            {
                _state.PicklistBinPrimaryOrderId = value;
            }
        }

        string IPicklistItemMvoStateProperties.PicklistBinPrimaryOrderId
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinPrimaryOrderId;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinPrimaryOrderId = value;
            }
        }

		public virtual long? PicklistBinPrimaryShipGroupSeqId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinPrimaryShipGroupSeqId"))
                {
                    return _state.PicklistBinPrimaryShipGroupSeqId;
                }
                return null;
            }
            set
            {
                _state.PicklistBinPrimaryShipGroupSeqId = value;
            }
        }

        long? IPicklistItemMvoStateProperties.PicklistBinPrimaryShipGroupSeqId
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinPrimaryShipGroupSeqId;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinPrimaryShipGroupSeqId = value;
            }
        }

		public virtual string PicklistBinCreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinCreatedBy"))
                {
                    return _state.PicklistBinCreatedBy;
                }
                return null;
            }
            set
            {
                _state.PicklistBinCreatedBy = value;
            }
        }

        string IPicklistItemMvoStateProperties.PicklistBinCreatedBy
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinCreatedBy;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinCreatedBy = value;
            }
        }

		public virtual DateTime? PicklistBinCreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinCreatedAt"))
                {
                    return _state.PicklistBinCreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.PicklistBinCreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.PicklistBinCreatedAt = value.Value;
                }
            }
        }

        DateTime IPicklistItemMvoStateProperties.PicklistBinCreatedAt
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinCreatedAt;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinCreatedAt = value;
            }
        }

		public virtual string PicklistBinUpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinUpdatedBy"))
                {
                    return _state.PicklistBinUpdatedBy;
                }
                return null;
            }
            set
            {
                _state.PicklistBinUpdatedBy = value;
            }
        }

        string IPicklistItemMvoStateProperties.PicklistBinUpdatedBy
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinUpdatedBy;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinUpdatedBy = value;
            }
        }

		public virtual DateTime? PicklistBinUpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinUpdatedAt"))
                {
                    return _state.PicklistBinUpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.PicklistBinUpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.PicklistBinUpdatedAt = value.Value;
                }
            }
        }

        DateTime IPicklistItemMvoStateProperties.PicklistBinUpdatedAt
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinUpdatedAt;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinUpdatedAt = value;
            }
        }

		public virtual bool? PicklistBinActive
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinActive"))
                {
                    return _state.PicklistBinActive;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.PicklistBinActive = value.Value;
                }
            }
        }

        bool IPicklistItemMvoStateProperties.PicklistBinActive
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinActive;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinActive = value;
            }
        }

		public virtual bool? PicklistBinDeleted
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinDeleted"))
                {
                    return _state.PicklistBinDeleted;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.PicklistBinDeleted = value.Value;
                }
            }
        }

        bool IPicklistItemMvoStateProperties.PicklistBinDeleted
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinDeleted;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinDeleted = value;
            }
        }

		public virtual long? PicklistBinVersion
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinVersion"))
                {
                    return _state.PicklistBinVersion;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.PicklistBinVersion = value.Value;
                }
            }
        }

        long IPicklistItemMvoStateProperties.PicklistBinVersion
        {
            get 
            {
                return (this._state as IPicklistItemMvoStateProperties).PicklistBinVersion;
            }
            set 
            {
                (this._state as IPicklistItemMvoStateProperties).PicklistBinVersion = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		PicklistBinPicklistItemId IGlobalIdentity<PicklistBinPicklistItemId>.GlobalId
		{
			get { return (_state as IPicklistItemMvoState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IPicklistItemMvoState).CreatedBy; }
            set { (_state as IPicklistItemMvoState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IPicklistItemMvoState).CreatedAt; }
            set { (_state as IPicklistItemMvoState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IPicklistItemMvoState).UpdatedBy; }
            set { (_state as IPicklistItemMvoState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IPicklistItemMvoState).UpdatedAt; }
            set { (_state as IPicklistItemMvoState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IPicklistItemMvoStateProperties).PicklistBinVersion; }
		}

		#endregion

        bool IPicklistItemMvoState.IsUnsaved
        {
            get { return this.PicklistBinVersion == PicklistItemMvoState.VersionZero; }
        }

		void IPicklistItemMvoState.When(IPicklistItemMvoStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IPicklistItemMvoState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IPicklistItemMvoState.When(IPicklistItemMvoStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IPicklistItemMvoState.When(IPicklistItemMvoStateDeleted e)
		{
            throw new NotSupportedException();
		}

		void IPicklistItemMvoState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class PicklistItemMvoStateDtoWrapperCollection : StateDtoWrapperCollectionBase<PicklistItemMvoStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(PicklistItemMvoStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

