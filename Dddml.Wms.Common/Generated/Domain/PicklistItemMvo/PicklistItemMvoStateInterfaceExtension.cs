// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistItemMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PicklistItemMvo;
using Dddml.Wms.Domain.PicklistBin;

namespace Dddml.Wms.Domain.PicklistItemMvo
{

	public static partial class PicklistItemMvoStateInterfaceExtension
	{

        public static IPicklistItemMvoCommand ToCreateOrMergePatchPicklistItemMvo<TCreatePicklistItemMvo, TMergePatchPicklistItemMvo>(this IPicklistItemMvoState state)
            where TCreatePicklistItemMvo : ICreatePicklistItemMvo, new()
            where TMergePatchPicklistItemMvo : IMergePatchPicklistItemMvo, new()
        {
            bool bUnsaved = ((IPicklistItemMvoState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreatePicklistItemMvo<TCreatePicklistItemMvo>();
            }
            else 
            {
                return state.ToMergePatchPicklistItemMvo<TMergePatchPicklistItemMvo>();
            }
        }

        public static TDeletePicklistItemMvo ToDeletePicklistItemMvo<TDeletePicklistItemMvo>(this IPicklistItemMvoState state)
            where TDeletePicklistItemMvo : IDeletePicklistItemMvo, new()
        {
            var cmd = new TDeletePicklistItemMvo();
            cmd.PicklistBinPicklistItemId = state.PicklistBinPicklistItemId;
            cmd.PicklistBinVersion = ((IPicklistItemMvoStateProperties)state).PicklistBinVersion;

            return cmd;
        }

        public static TMergePatchPicklistItemMvo ToMergePatchPicklistItemMvo<TMergePatchPicklistItemMvo>(this IPicklistItemMvoState state)
            where TMergePatchPicklistItemMvo : IMergePatchPicklistItemMvo, new()
        {
            var cmd = new TMergePatchPicklistItemMvo();

            cmd.PicklistBinVersion = ((IPicklistItemMvoStateProperties)state).PicklistBinVersion;

            cmd.PicklistBinPicklistItemId = state.PicklistBinPicklistItemId;
            cmd.ItemStatusId = state.ItemStatusId;
            cmd.Quantity = state.Quantity;
            cmd.Version = ((IPicklistItemMvoStateProperties)state).Version;
            cmd.Active = ((IPicklistItemMvoStateProperties)state).Active;
            cmd.PicklistBinPicklistId = state.PicklistBinPicklistId;
            cmd.PicklistBinBinLocationNumber = state.PicklistBinBinLocationNumber;
            cmd.PicklistBinPrimaryOrderId = state.PicklistBinPrimaryOrderId;
            cmd.PicklistBinPrimaryShipGroupSeqId = state.PicklistBinPrimaryShipGroupSeqId;
            cmd.PicklistBinCreatedBy = state.PicklistBinCreatedBy;
            cmd.PicklistBinCreatedAt = state.PicklistBinCreatedAt;
            cmd.PicklistBinUpdatedBy = state.PicklistBinUpdatedBy;
            cmd.PicklistBinUpdatedAt = state.PicklistBinUpdatedAt;
            cmd.PicklistBinActive = state.PicklistBinActive;
            cmd.PicklistBinDeleted = state.PicklistBinDeleted;
            
            if (state.ItemStatusId == null) { cmd.IsPropertyItemStatusIdRemoved = true; }
            if (state.Quantity == null) { cmd.IsPropertyQuantityRemoved = true; }
            if (state.PicklistBinPicklistId == null) { cmd.IsPropertyPicklistBinPicklistIdRemoved = true; }
            if (state.PicklistBinBinLocationNumber == null) { cmd.IsPropertyPicklistBinBinLocationNumberRemoved = true; }
            if (state.PicklistBinPrimaryOrderId == null) { cmd.IsPropertyPicklistBinPrimaryOrderIdRemoved = true; }
            if (state.PicklistBinPrimaryShipGroupSeqId == null) { cmd.IsPropertyPicklistBinPrimaryShipGroupSeqIdRemoved = true; }
            if (state.PicklistBinCreatedBy == null) { cmd.IsPropertyPicklistBinCreatedByRemoved = true; }
            if (state.PicklistBinUpdatedBy == null) { cmd.IsPropertyPicklistBinUpdatedByRemoved = true; }
            return cmd;
        }

        public static TCreatePicklistItemMvo ToCreatePicklistItemMvo<TCreatePicklistItemMvo>(this IPicklistItemMvoState state)
            where TCreatePicklistItemMvo : ICreatePicklistItemMvo, new()
        {
            var cmd = new TCreatePicklistItemMvo();

            cmd.PicklistBinVersion = ((IPicklistItemMvoStateProperties)state).PicklistBinVersion;

            cmd.PicklistBinPicklistItemId = state.PicklistBinPicklistItemId;
            cmd.ItemStatusId = state.ItemStatusId;
            cmd.Quantity = state.Quantity;
            cmd.Version = ((IPicklistItemMvoStateProperties)state).Version;
            cmd.Active = ((IPicklistItemMvoStateProperties)state).Active;
            cmd.PicklistBinPicklistId = state.PicklistBinPicklistId;
            cmd.PicklistBinBinLocationNumber = state.PicklistBinBinLocationNumber;
            cmd.PicklistBinPrimaryOrderId = state.PicklistBinPrimaryOrderId;
            cmd.PicklistBinPrimaryShipGroupSeqId = state.PicklistBinPrimaryShipGroupSeqId;
            cmd.PicklistBinCreatedBy = state.PicklistBinCreatedBy;
            cmd.PicklistBinCreatedAt = state.PicklistBinCreatedAt;
            cmd.PicklistBinUpdatedBy = state.PicklistBinUpdatedBy;
            cmd.PicklistBinUpdatedAt = state.PicklistBinUpdatedAt;
            cmd.PicklistBinActive = state.PicklistBinActive;
            cmd.PicklistBinDeleted = state.PicklistBinDeleted;
            return cmd;
        }
		

	}

}

