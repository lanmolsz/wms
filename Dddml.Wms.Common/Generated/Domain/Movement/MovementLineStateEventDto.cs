// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.Movement
{

	public abstract class MovementLineStateEventDtoBase : IEventDto, IMovementLineStateCreated, IMovementLineStateMergePatched, IMovementLineStateRemoved
	{

        private MovementLineEventId _movementLineEventId;

		protected internal virtual MovementLineEventId MovementLineEventId 
        {
            get 
            {
                if (_movementLineEventId == null) { _movementLineEventId = new MovementLineEventId(); }
                return _movementLineEventId;
            }
            set
            {
                _movementLineEventId = value;
            }
        }

        public virtual string LineNumber
        {
            get { return MovementLineEventId.LineNumber; }
            set { MovementLineEventId.LineNumber = value; }
        }

		public virtual decimal? MovementQuantity { get; set; }

		public virtual string ProductId { get; set; }

		public virtual string LocatorIdFrom { get; set; }

		public virtual string LocatorIdTo { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual bool? Processed { get; set; }

		public virtual string ReversalLineNumber { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		MovementLineEventId IGlobalIdentity<MovementLineEventId>.GlobalId {
			get 
			{
				return this.MovementLineEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IMovementLineEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }

		public virtual bool? IsPropertyMovementQuantityRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyMovementQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyMovementQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyMovementQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyProductIdRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyProductIdRemoved
        {
            get 
            {
                var b = this.IsPropertyProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyLocatorIdFromRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyLocatorIdFromRemoved
        {
            get 
            {
                var b = this.IsPropertyLocatorIdFromRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyLocatorIdFromRemoved = value;
            }
        }

		public virtual bool? IsPropertyLocatorIdToRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyLocatorIdToRemoved
        {
            get 
            {
                var b = this.IsPropertyLocatorIdToRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyLocatorIdToRemoved = value;
            }
        }

		public virtual bool? IsPropertyAttributeSetInstanceIdRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyAttributeSetInstanceIdRemoved
        {
            get 
            {
                var b = this.IsPropertyAttributeSetInstanceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyAttributeSetInstanceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyProcessedRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyProcessedRemoved
        {
            get 
            {
                var b = this.IsPropertyProcessedRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProcessedRemoved = value;
            }
        }

		public virtual bool? IsPropertyReversalLineNumberRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyReversalLineNumberRemoved
        {
            get 
            {
                var b = this.IsPropertyReversalLineNumberRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyReversalLineNumberRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMovementLineStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        MovementLineEventId IMovementLineEvent.MovementLineEventId
        {
            get { return this.MovementLineEventId; }
        }

        protected MovementLineStateEventDtoBase()
        {
        }

        protected MovementLineStateEventDtoBase(MovementLineEventId stateEventId)
        {
            this.MovementLineEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IEventDto.EventType 
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}


    public class MovementLineStateCreatedOrMergePatchedOrRemovedDto : MovementLineStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetEventType()
        {
            return this._eventType;
        }

    }



	public class MovementLineStateCreatedDto : MovementLineStateCreatedOrMergePatchedOrRemovedDto
	{
		public MovementLineStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class MovementLineStateMergePatchedDto : MovementLineStateCreatedOrMergePatchedOrRemovedDto
	{
		public MovementLineStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class MovementLineStateRemovedDto : MovementLineStateCreatedOrMergePatchedOrRemovedDto
	{
		public MovementLineStateRemovedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }

	}


    public partial class MovementLineStateCreatedOrMergePatchedOrRemovedDtos : IEnumerable<IMovementLineStateCreated>, IEnumerable<IMovementLineStateMergePatched>, IEnumerable<IMovementLineStateRemoved>
    {
        private List<MovementLineStateCreatedOrMergePatchedOrRemovedDto> _innerStateEvents = new List<MovementLineStateCreatedOrMergePatchedOrRemovedDto>();

        public virtual MovementLineStateCreatedOrMergePatchedOrRemovedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<MovementLineStateCreatedOrMergePatchedOrRemovedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMovementLineStateCreated> IEnumerable<IMovementLineStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMovementLineStateMergePatched> IEnumerable<IMovementLineStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMovementLineStateRemoved> IEnumerable<IMovementLineStateRemoved>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddMovementLineEvent(IMovementLineStateCreated e)
        {
            _innerStateEvents.Add((MovementLineStateCreatedDto)e);
        }

        public void AddMovementLineEvent(IMovementLineEvent e)
        {
            _innerStateEvents.Add((MovementLineStateCreatedOrMergePatchedOrRemovedDto)e);
        }

        public void AddMovementLineEvent(IMovementLineStateRemoved e)
        {
            _innerStateEvents.Add((MovementLineStateRemovedDto)e);
        }

    }


}

