// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.Movement
{
	public interface IMovementStateEvent : IEvent, IStateEventDto, IGlobalIdentity<MovementStateEventId>, ICreated<string>
	{
		MovementStateEventId StateEventId { get; }

        bool ReadOnly { get; set; }

		string DocumentTypeId { get; set; }

		string DocumentStatusId { get; set; }

		string MovementTypeId { get; set; }

		string Description { get; set; }

		bool? Active { get; set; }

	}

	public interface IMovementStateCreated : IMovementStateEvent//, IMovementStateProperties
	{
		IEnumerable<IMovementLineStateCreated> MovementLineEvents { get; }
		
		void AddMovementLineEvent(IMovementLineStateCreated e);

		IMovementLineStateCreated NewMovementLineStateCreated(string lineNumber);

		IEnumerable<IMovementConfirmationLineStateCreated> MovementConfirmationLineEvents { get; }
		
		void AddMovementConfirmationLineEvent(IMovementConfirmationLineStateCreated e);

		IMovementConfirmationLineStateCreated NewMovementConfirmationLineStateCreated(string lineNumber);

	
	}


	public interface IMovementStateMergePatched : IMovementStateEvent//, IMovementStateProperties
	{
		bool IsPropertyDocumentTypeIdRemoved { get; set; }

		bool IsPropertyDocumentStatusIdRemoved { get; set; }

		bool IsPropertyMovementTypeIdRemoved { get; set; }

		bool IsPropertyDescriptionRemoved { get; set; }

		bool IsPropertyActiveRemoved { get; set; }

		IEnumerable<IMovementLineStateEvent> MovementLineEvents { get; }
		
		void AddMovementLineEvent(IMovementLineStateEvent e);

		IMovementLineStateCreated NewMovementLineStateCreated(string lineNumber);

		IMovementLineStateMergePatched NewMovementLineStateMergePatched(string lineNumber);

		IMovementLineStateRemoved NewMovementLineStateRemoved(string lineNumber);

		IEnumerable<IMovementConfirmationLineStateEvent> MovementConfirmationLineEvents { get; }
		
		void AddMovementConfirmationLineEvent(IMovementConfirmationLineStateEvent e);

		IMovementConfirmationLineStateCreated NewMovementConfirmationLineStateCreated(string lineNumber);

		IMovementConfirmationLineStateMergePatched NewMovementConfirmationLineStateMergePatched(string lineNumber);

		IMovementConfirmationLineStateRemoved NewMovementConfirmationLineStateRemoved(string lineNumber);


	}

	public interface IMovementStateDeleted : IMovementStateEvent
	{
		IEnumerable<IMovementLineStateRemoved> MovementLineEvents { get; }
		
		void AddMovementLineEvent(IMovementLineStateRemoved e);
		
		IMovementLineStateRemoved NewMovementLineStateRemoved(string lineNumber);

		IEnumerable<IMovementConfirmationLineStateRemoved> MovementConfirmationLineEvents { get; }
		
		void AddMovementConfirmationLineEvent(IMovementConfirmationLineStateRemoved e);
		
		IMovementConfirmationLineStateRemoved NewMovementConfirmationLineStateRemoved(string lineNumber);

	}


}

