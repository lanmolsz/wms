// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.Movement
{

	public abstract class MovementConfirmationLineCommandDtoBase : ICommandDto, ICreateMovementConfirmationLine, IMergePatchMovementConfirmationLine, IRemoveMovementConfirmationLine
	{

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string LineNumber { get; set; }

		public virtual decimal? TargetQuantity { get; set; }

		public virtual decimal? ConfirmedQuantity { get; set; }

		public virtual decimal? DifferenceQuantity { get; set; }

		public virtual decimal? ScrappedQuantity { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string MovementDocumentNumber { get; set; }

		public virtual bool? IsPropertyTargetQuantityRemoved { get; set; }

        bool IMergePatchMovementConfirmationLine.IsPropertyTargetQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyTargetQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyTargetQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyConfirmedQuantityRemoved { get; set; }

        bool IMergePatchMovementConfirmationLine.IsPropertyConfirmedQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyConfirmedQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyConfirmedQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyDifferenceQuantityRemoved { get; set; }

        bool IMergePatchMovementConfirmationLine.IsPropertyDifferenceQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyDifferenceQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyDifferenceQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyScrappedQuantityRemoved { get; set; }

        bool IMergePatchMovementConfirmationLine.IsPropertyScrappedQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyScrappedQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyScrappedQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchMovementConfirmationLine.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrRemoveMovementConfirmationLineDto : MovementConfirmationLineCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateMovementConfirmationLineDto : CreateOrMergePatchOrRemoveMovementConfirmationLineDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchMovementConfirmationLineDto : CreateOrMergePatchOrRemoveMovementConfirmationLineDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class RemoveMovementConfirmationLineDto : CreateOrMergePatchOrRemoveMovementConfirmationLineDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Remove;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}


    public partial class CreateOrMergePatchOrRemoveMovementConfirmationLineDtos : IMovementConfirmationLineCommands, ICreateMovementConfirmationLineCommands, IEnumerable<CreateOrMergePatchOrRemoveMovementConfirmationLineDto>
    {
        private List<CreateOrMergePatchOrRemoveMovementConfirmationLineDto> _innerCommands = new List<CreateOrMergePatchOrRemoveMovementConfirmationLineDto>();

        public virtual CreateOrMergePatchOrRemoveMovementConfirmationLineDto[] ToArray()
        {
            return _innerCommands.ToArray();
        }

        public virtual void Clear()
        {
            _innerCommands.Clear();
        }

        public virtual void AddRange(IEnumerable<CreateOrMergePatchOrRemoveMovementConfirmationLineDto> cs)
        {
            _innerCommands.AddRange(cs);
        }

        void IMovementConfirmationLineCommands.Add(IMovementConfirmationLineCommand c)
        {
            _innerCommands.Add((CreateOrMergePatchOrRemoveMovementConfirmationLineDto)c);
        }

        void IMovementConfirmationLineCommands.Remove(IMovementConfirmationLineCommand c)
        {
            _innerCommands.Remove((CreateOrMergePatchOrRemoveMovementConfirmationLineDto)c);
        }


        IEnumerator<CreateOrMergePatchOrRemoveMovementConfirmationLineDto> IEnumerable<CreateOrMergePatchOrRemoveMovementConfirmationLineDto>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        IEnumerator<IMovementConfirmationLineCommand> IEnumerable<IMovementConfirmationLineCommand>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        void ICreateMovementConfirmationLineCommands.Add(ICreateMovementConfirmationLine c)
        {
            _innerCommands.Add((CreateMovementConfirmationLineDto)c);
        }

        void ICreateMovementConfirmationLineCommands.Remove(ICreateMovementConfirmationLine c)
        {
            _innerCommands.Remove((CreateMovementConfirmationLineDto)c);
        }

        IEnumerator<ICreateMovementConfirmationLine> IEnumerable<ICreateMovementConfirmationLine>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

}

