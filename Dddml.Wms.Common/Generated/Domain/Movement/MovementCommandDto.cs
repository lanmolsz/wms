// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Movement;

namespace Dddml.Wms.Domain.Movement
{

	public abstract class MovementCommandDtoBase : ICommandDto, ICreateMovement, IMergePatchMovement, IDeleteMovement
	{

		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return ((ICreateOrMergePatchOrDeleteMovement)this).DocumentNumber;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string DocumentNumber { get; set; }

		public virtual string DocumentTypeId { get; set; }

		public virtual string DocumentAction { get; set; }

		public virtual string MovementTypeId { get; set; }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual bool? IsPropertyDocumentTypeIdRemoved { get; set; }

        bool IMergePatchMovement.IsPropertyDocumentTypeIdRemoved
        {
            get
            {
                var b = this.IsPropertyDocumentTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyDocumentTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyMovementTypeIdRemoved { get; set; }

        bool IMergePatchMovement.IsPropertyMovementTypeIdRemoved
        {
            get
            {
                var b = this.IsPropertyMovementTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMovementTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IMergePatchMovement.IsPropertyDescriptionRemoved
        {
            get
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchMovement.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

        ICreateMovementLineCommands ICreateMovement.MovementLines
        {
            get
            {
                return this._movementLines;
            }
        }

        IMovementLineCommands IMergePatchMovement.MovementLineCommands
        {
            get
            {
                return this._movementLines;
            }
        }

        public virtual CreateMovementLineDto NewCreateMovementLine()
        {
            var c = new CreateMovementLineDto();
            c.MovementDocumentNumber = this.DocumentNumber;

            return c;
        }

        ICreateMovementLine ICreateMovement.NewCreateMovementLine()
        {
            return this.NewCreateMovementLine();
        }

        ICreateMovementLine IMergePatchMovement.NewCreateMovementLine()
        {
            return this.NewCreateMovementLine();
        }

        public virtual MergePatchMovementLineDto NewMergePatchMovementLine()
        {
            var c = new MergePatchMovementLineDto();
            c.MovementDocumentNumber = this.DocumentNumber;

            return c;
        }

        IMergePatchMovementLine IMergePatchMovement.NewMergePatchMovementLine()
        {
            return this.NewMergePatchMovementLine();
        }

        public virtual RemoveMovementLineDto NewRemoveMovementLine()
        {
            var c = new RemoveMovementLineDto();
            c.MovementDocumentNumber = this.DocumentNumber;

            return c;
        }

        IRemoveMovementLine IMergePatchMovement.NewRemoveMovementLine()
        {
            return this.NewRemoveMovementLine();
        }

        private CreateOrMergePatchOrRemoveMovementLineDtos _movementLines = new CreateOrMergePatchOrRemoveMovementLineDtos();

        public virtual CreateOrMergePatchOrRemoveMovementLineDto[] MovementLines
        {
            get
            {
                return _movementLines.ToArray();
            }
            set
            {
                _movementLines.Clear();
                _movementLines.AddRange(value);
            }
        }

        ICreateMovementConfirmationLineCommands ICreateMovement.MovementConfirmationLines
        {
            get
            {
                return this._movementConfirmationLines;
            }
        }

        IMovementConfirmationLineCommands IMergePatchMovement.MovementConfirmationLineCommands
        {
            get
            {
                return this._movementConfirmationLines;
            }
        }

        public virtual CreateMovementConfirmationLineDto NewCreateMovementConfirmationLine()
        {
            var c = new CreateMovementConfirmationLineDto();
            c.MovementDocumentNumber = this.DocumentNumber;

            return c;
        }

        ICreateMovementConfirmationLine ICreateMovement.NewCreateMovementConfirmationLine()
        {
            return this.NewCreateMovementConfirmationLine();
        }

        ICreateMovementConfirmationLine IMergePatchMovement.NewCreateMovementConfirmationLine()
        {
            return this.NewCreateMovementConfirmationLine();
        }

        public virtual MergePatchMovementConfirmationLineDto NewMergePatchMovementConfirmationLine()
        {
            var c = new MergePatchMovementConfirmationLineDto();
            c.MovementDocumentNumber = this.DocumentNumber;

            return c;
        }

        IMergePatchMovementConfirmationLine IMergePatchMovement.NewMergePatchMovementConfirmationLine()
        {
            return this.NewMergePatchMovementConfirmationLine();
        }

        public virtual RemoveMovementConfirmationLineDto NewRemoveMovementConfirmationLine()
        {
            var c = new RemoveMovementConfirmationLineDto();
            c.MovementDocumentNumber = this.DocumentNumber;

            return c;
        }

        IRemoveMovementConfirmationLine IMergePatchMovement.NewRemoveMovementConfirmationLine()
        {
            return this.NewRemoveMovementConfirmationLine();
        }

        private CreateOrMergePatchOrRemoveMovementConfirmationLineDtos _movementConfirmationLines = new CreateOrMergePatchOrRemoveMovementConfirmationLineDtos();

        public virtual CreateOrMergePatchOrRemoveMovementConfirmationLineDto[] MovementConfirmationLines
        {
            get
            {
                return _movementConfirmationLines.ToArray();
            }
            set
            {
                _movementConfirmationLines.Clear();
                _movementConfirmationLines.AddRange(value);
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrDeleteMovementDto : MovementCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateMovementDto : CreateOrMergePatchOrDeleteMovementDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchMovementDto : CreateOrMergePatchOrDeleteMovementDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteMovementDto : CreateOrMergePatchOrDeleteMovementDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}

    public static partial class MovementCommandDtos
    {

    }

}

