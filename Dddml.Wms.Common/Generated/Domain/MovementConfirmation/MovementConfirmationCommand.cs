// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementConfirmationDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementConfirmation;

namespace Dddml.Wms.Domain.MovementConfirmation
{

	public abstract class MovementConfirmationCommandBase : IMovementConfirmationCommand
	{
		public virtual string DocumentNumber { get; set; }


		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return this.DocumentNumber;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string MovementDocumentNumber { get; set; }

		public virtual bool? IsApproved { get; set; }

		public virtual decimal? ApprovalAmount { get; set; }

		public virtual bool? Processed { get; set; }

		public virtual string Processing { get; set; }

		public virtual string DocumentTypeId { get; set; }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreateMovementConfirmation : MovementConfirmationCommandBase, ICreateMovementConfirmation
	{
		
		public CreateMovementConfirmation ()
		{
		}


        private CreateMovementConfirmationLineCommands _movementConfirmationLines = new CreateMovementConfirmationLineCommands();

        public ICreateMovementConfirmationLineCommands MovementConfirmationLines
        {
            get
            {
                return this._movementConfirmationLines;
            }
        }

        public CreateMovementConfirmationLine NewCreateMovementConfirmationLine()
        {
            var c = new CreateMovementConfirmationLine();
            c.MovementConfirmationDocumentNumber = this.DocumentNumber;

            return c;
        }

        ICreateMovementConfirmationLine ICreateMovementConfirmation.NewCreateMovementConfirmationLine()
        {
            return this.NewCreateMovementConfirmationLine();
        }



        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchMovementConfirmation :MovementConfirmationCommandBase, IMergePatchMovementConfirmation
	{

		public virtual bool IsPropertyMovementDocumentNumberRemoved { get; set; }

		public virtual bool IsPropertyIsApprovedRemoved { get; set; }

		public virtual bool IsPropertyApprovalAmountRemoved { get; set; }

		public virtual bool IsPropertyProcessedRemoved { get; set; }

		public virtual bool IsPropertyProcessingRemoved { get; set; }

		public virtual bool IsPropertyDocumentTypeIdRemoved { get; set; }

		public virtual bool IsPropertyDescriptionRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchMovementConfirmation ()
		{
		}

        private MovementConfirmationLineCommands _movementConfirmationLineCommands = new MovementConfirmationLineCommands();

        public IMovementConfirmationLineCommands MovementConfirmationLineCommands
        {
            get
            {
                return this._movementConfirmationLineCommands;
            }
        }


        public CreateMovementConfirmationLine NewCreateMovementConfirmationLine()
        {
            var c = new CreateMovementConfirmationLine();
            c.MovementConfirmationDocumentNumber = this.DocumentNumber;

            return c;
        }

        ICreateMovementConfirmationLine IMergePatchMovementConfirmation.NewCreateMovementConfirmationLine()
        {
            return this.NewCreateMovementConfirmationLine();
        }

        public MergePatchMovementConfirmationLine NewMergePatchMovementConfirmationLine()
        {
            var c = new MergePatchMovementConfirmationLine();
            c.MovementConfirmationDocumentNumber = this.DocumentNumber;

            return c;
        }

        IMergePatchMovementConfirmationLine IMergePatchMovementConfirmation.NewMergePatchMovementConfirmationLine()
        {
            return this.NewMergePatchMovementConfirmationLine();
        }


        public RemoveMovementConfirmationLine NewRemoveMovementConfirmationLine()
        {
            var c = new RemoveMovementConfirmationLine();
            c.MovementConfirmationDocumentNumber = this.DocumentNumber;

            return c;
        }

        IRemoveMovementConfirmationLine IMergePatchMovementConfirmation.NewRemoveMovementConfirmationLine()
        {
            return this.NewRemoveMovementConfirmationLine();
        }


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteMovementConfirmation : MovementConfirmationCommandBase, IDeleteMovementConfirmation
	{
		public DeleteMovementConfirmation ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }

	}


    public class CreateMovementConfirmationLineCommands : ICreateMovementConfirmationLineCommands
    {
        private List<ICreateMovementConfirmationLine> _innerCommands = new List<ICreateMovementConfirmationLine>();

        public void Add(ICreateMovementConfirmationLine c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreateMovementConfirmationLine c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreateMovementConfirmationLine> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class MovementConfirmationLineCommands : IMovementConfirmationLineCommands
    {
        private List<IMovementConfirmationLineCommand> _innerCommands = new List<IMovementConfirmationLineCommand>();

        public void Add(IMovementConfirmationLineCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IMovementConfirmationLineCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IMovementConfirmationLineCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public static partial class MovementConfirmationCommands
    {
        public class DocumentAction : IMovementConfirmationCommand
        {

            public string CommandType
            {
                get { return "DocumentAction"; }
            }

            public string Value { get; set; }

            public string DocumentNumber { get; set; }

            public long Version { get; set; }

            public string CommandId { get; set; }

            public string RequesterId { get; set; }


            string ICommand.CommandId
            {
                get
                {
                    return this.CommandId;
                }
                set
                {
                    this.CommandId = value;
                }
            }

            object ICommand.RequesterId
            {
                get { return this.RequesterId; }
                set { this.RequesterId = (string)value; }
            }

            string ICommandDto.CommandType
            {
                get { return this.CommandType; }
            }

            string IAggregateCommand<string, long>.AggregateId
            {
                get { return this.DocumentNumber; }
            }

            string IMovementConfirmationCommand.DocumentNumber
            {
                get { return this.DocumentNumber; }
                set { this.DocumentNumber = value; }
            }

            long IAggregateCommand<string, long>.AggregateVersion
            {
                get { return this.Version; }
            }

            long IMovementConfirmationCommand.Version
            {
                get
                {
                    return this.Version;
                }
                set
                {
                    this.Version = value;
                }
            }

        }

    }

}
