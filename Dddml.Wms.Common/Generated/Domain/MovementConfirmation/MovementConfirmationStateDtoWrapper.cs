// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementConfirmationDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementConfirmation;

namespace Dddml.Wms.Domain.MovementConfirmation
{

	public partial class MovementConfirmationStateDtoWrapper : StateDtoWrapperBase, IMovementConfirmationStateDto, IMovementConfirmationState
	{

        internal static IList<string> _collectionFieldNames = new string[] { "MovementConfirmationLines" };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IMovementConfirmationState _state;

        public MovementConfirmationStateDtoWrapper()
        {
            this._state = new MovementConfirmationState();
        }

		public MovementConfirmationStateDtoWrapper(IMovementConfirmationState state)
		{
            this._state = state;
		}

		public IMovementConfirmationState ToMovementConfirmationState()
		{
			return this._state;
		}

		public virtual string DocumentNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DocumentNumber"))
                {
                    return _state.DocumentNumber;
                }
                return null;
            }
            set
            {
                _state.DocumentNumber = value;
            }
        }

        string IMovementConfirmationStateProperties.DocumentNumber
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).DocumentNumber;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).DocumentNumber = value;
            }
        }

		public virtual string DocumentStatusId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DocumentStatusId"))
                {
                    return _state.DocumentStatusId;
                }
                return null;
            }
            set
            {
                _state.DocumentStatusId = value;
            }
        }

        string IMovementConfirmationStateProperties.DocumentStatusId
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).DocumentStatusId;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).DocumentStatusId = value;
            }
        }

		public virtual string MovementDocumentNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("MovementDocumentNumber"))
                {
                    return _state.MovementDocumentNumber;
                }
                return null;
            }
            set
            {
                _state.MovementDocumentNumber = value;
            }
        }

        string IMovementConfirmationStateProperties.MovementDocumentNumber
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).MovementDocumentNumber;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).MovementDocumentNumber = value;
            }
        }

		public virtual bool? IsApproved
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("IsApproved"))
                {
                    return _state.IsApproved;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.IsApproved = value.Value;
                }
            }
        }

        bool IMovementConfirmationStateProperties.IsApproved
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).IsApproved;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).IsApproved = value;
            }
        }

		public virtual decimal? ApprovalAmount
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ApprovalAmount"))
                {
                    return _state.ApprovalAmount;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.ApprovalAmount = value.Value;
                }
            }
        }

        decimal IMovementConfirmationStateProperties.ApprovalAmount
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).ApprovalAmount;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).ApprovalAmount = value;
            }
        }

		public virtual bool? Processed
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Processed"))
                {
                    return _state.Processed;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.Processed = value.Value;
                }
            }
        }

        bool IMovementConfirmationStateProperties.Processed
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).Processed;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).Processed = value;
            }
        }

		public virtual string Processing
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Processing"))
                {
                    return _state.Processing;
                }
                return null;
            }
            set
            {
                _state.Processing = value;
            }
        }

        string IMovementConfirmationStateProperties.Processing
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).Processing;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).Processing = value;
            }
        }

		public virtual string DocumentTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DocumentTypeId"))
                {
                    return _state.DocumentTypeId;
                }
                return null;
            }
            set
            {
                _state.DocumentTypeId = value;
            }
        }

        string IMovementConfirmationStateProperties.DocumentTypeId
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).DocumentTypeId;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).DocumentTypeId = value;
            }
        }

		public virtual string Description
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Description"))
                {
                    return _state.Description;
                }
                return null;
            }
            set
            {
                _state.Description = value;
            }
        }

        string IMovementConfirmationStateProperties.Description
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).Description;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).Description = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IMovementConfirmationStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IMovementConfirmationStateProperties).Active = value.Value;
                }
            }
        }

        bool IMovementConfirmationStateProperties.Active
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).Active;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IMovementConfirmationStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IMovementConfirmationStateProperties).Version = value.Value;
                }
            }
        }

        long IMovementConfirmationStateProperties.Version
        {
            get 
            {
                return (this._state as IMovementConfirmationStateProperties).Version;
            }
            set 
            {
                (this._state as IMovementConfirmationStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		string IGlobalIdentity<string>.GlobalId
		{
			get { return (_state as IMovementConfirmationState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IMovementConfirmationState).CreatedBy; }
            set { (_state as IMovementConfirmationState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IMovementConfirmationState).CreatedAt; }
            set { (_state as IMovementConfirmationState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IMovementConfirmationState).UpdatedBy; }
            set { (_state as IMovementConfirmationState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IMovementConfirmationState).UpdatedAt; }
            set { (_state as IMovementConfirmationState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IMovementConfirmationStateProperties).Version; }
		}

		#endregion

        bool IMovementConfirmationState.IsUnsaved
        {
            get { return this.Version == MovementConfirmationState.VersionZero; }
        }

        public virtual IMovementConfirmationLineStateDto[] MovementConfirmationLines
        {
            get 
            {
                if (!(this as IStateDtoWrapper).ReturnedFieldsContains("MovementConfirmationLines"))
                {
                    return null;
                }
                var dtos = new List<IMovementConfirmationLineStateDto>();
                if (this._state.MovementConfirmationLines != null)
                {
                    foreach (var s in this._state.MovementConfirmationLines)
                    {
                        var dto = new MovementConfirmationLineStateDtoWrapper((MovementConfirmationLineState)s);
                        var returnFS = CollectionUtils.DictionaryGetValueIgnoringCase(ReturnedFields, "MovementConfirmationLines");
                        if (!String.IsNullOrWhiteSpace(returnFS))
                        {
                            (dto as IStateDtoWrapper).ReturnedFieldsString = returnFS;
                        }
                        else
                        {
                            (dto as IStateDtoWrapper).AllFieldsReturned = this.AllFieldsReturned;
                        }
                        dtos.Add(dto);
                    }
                }
                return dtos.ToArray();
            }
            set 
            {
                if (value == null) { value = new MovementConfirmationLineStateDtoWrapper[0]; }
                var states = new List<IMovementConfirmationLineState>();
                foreach (var s in value)
                {
                    states.Add(s.ToMovementConfirmationLineState());
                }
                this._state.MovementConfirmationLines = new DtoMovementConfirmationLineStates(this._state, states);
            }
        }

        IMovementConfirmationLineStates IMovementConfirmationState.MovementConfirmationLines
        {
            get { return _state.MovementConfirmationLines; }
            set { _state.MovementConfirmationLines = value; }
        }

		void IMovementConfirmationState.When(IMovementConfirmationStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IMovementConfirmationState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IMovementConfirmationState.When(IMovementConfirmationStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IMovementConfirmationState.When(IMovementConfirmationStateDeleted e)
		{
            throw new NotSupportedException();
		}

		void IMovementConfirmationState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

        public class DtoMovementConfirmationLineStates : IMovementConfirmationLineStates
        {

            private IMovementConfirmationState _outerState;

            private IEnumerable<IMovementConfirmationLineState> _innerStates;

            public DtoMovementConfirmationLineStates(IMovementConfirmationState outerState, IEnumerable<IMovementConfirmationLineState> innerStates)
            {
                this._outerState = outerState;
                if (innerStates == null)
                {
                    this._innerStates = new IMovementConfirmationLineState[] { };
                }
                else
                {
                    this._innerStates = innerStates;
                }
            }

            public IEnumerator<IMovementConfirmationLineState> GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            public IMovementConfirmationLineState Get(string lineNumber)
            {
                throw new NotSupportedException();
            }

            public IMovementConfirmationLineState Get(string lineNumber, bool forCreation)
            {
                throw new NotSupportedException();
            }

            public IMovementConfirmationLineState Get(string lineNumber, bool forCreation, bool nullAllowed)
            {
                throw new NotSupportedException();
            }

            public void Remove(IMovementConfirmationLineState state)
            {
                throw new NotSupportedException();
            }

            public void AddToSave(IMovementConfirmationLineState state)
            {
                throw new NotSupportedException();
            }

            public void Save()
            {
                throw new NotSupportedException();
            }
        }

	}

    partial class MovementConfirmationStateDtoWrapperCollection : StateDtoWrapperCollectionBase<MovementConfirmationStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(MovementConfirmationStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

