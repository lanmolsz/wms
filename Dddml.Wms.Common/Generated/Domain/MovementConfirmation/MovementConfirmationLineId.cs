// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementConfirmationDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementConfirmation;

namespace Dddml.Wms.Domain.MovementConfirmation
{

	public class MovementConfirmationLineId
	{

		private string _movementConfirmationDocumentNumber;

		public virtual string MovementConfirmationDocumentNumber { 
			get { return this._movementConfirmationDocumentNumber; } 
			set { _movementConfirmationDocumentNumber = value; } 
		}

		private string _lineNumber;

		public virtual string LineNumber { 
			get { return this._lineNumber; } 
			set { _lineNumber = value; } 
		}


        #region  Flattened Properties


        #endregion

		public MovementConfirmationLineId ()
		{
		}

		public MovementConfirmationLineId (string movementConfirmationDocumentNumber, string lineNumber)
		{
			this._movementConfirmationDocumentNumber = movementConfirmationDocumentNumber;
			this._lineNumber = lineNumber;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			MovementConfirmationLineId other = obj as MovementConfirmationLineId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.MovementConfirmationDocumentNumber, other.MovementConfirmationDocumentNumber)
				&& Object.Equals (this.LineNumber, other.LineNumber)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.MovementConfirmationDocumentNumber != null) {
				hash += 13 * this.MovementConfirmationDocumentNumber.GetHashCode ();
			}
			if (this.LineNumber != null) {
				hash += 13 * this.LineNumber.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(MovementConfirmationLineId obj1, MovementConfirmationLineId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(MovementConfirmationLineId obj1, MovementConfirmationLineId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "MovementConfirmationDocumentNumber: " + this.MovementConfirmationDocumentNumber + ", "
                + "LineNumber: " + this.LineNumber + ", "
                ;
        }
	}

}


