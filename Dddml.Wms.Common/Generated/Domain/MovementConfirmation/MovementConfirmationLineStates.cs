// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementConfirmationDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementConfirmation;

namespace Dddml.Wms.Domain.MovementConfirmation
{

    public class MovementConfirmationLineStates : IMovementConfirmationLineStates
    {
        
		protected IMovementConfirmationLineStateDao MovementConfirmationLineStateDao
		{
			get
			{
				return ApplicationContext.Current["MovementConfirmationLineStateDao"] as IMovementConfirmationLineStateDao;
			}
		}

		private Dictionary<MovementConfirmationLineId, IMovementConfirmationLineState> _loadedMovementConfirmationLineStates = new Dictionary<MovementConfirmationLineId, IMovementConfirmationLineState>();

		private Dictionary<MovementConfirmationLineId, IMovementConfirmationLineState> _removedMovementConfirmationLineStates = new Dictionary<MovementConfirmationLineId, IMovementConfirmationLineState>();

		protected virtual IEnumerable<IMovementConfirmationLineState> LoadedMovementConfirmationLineStates {
			get {
				return this._loadedMovementConfirmationLineStates.Values;
			}
		}

        private IMovementConfirmationState _movementConfirmationState;

        private IEnumerable<IMovementConfirmationLineState> InnerEnumeralbe
        {
            get
            {
                if (!ForReapplying)
                {
                    return MovementConfirmationLineStateDao.FindByMovementConfirmationDocumentNumber(_movementConfirmationState.DocumentNumber);
                }
                else
                {
                    return _loadedMovementConfirmationLineStates.Values.Where(s => !(_removedMovementConfirmationLineStates.ContainsKey(s.GlobalId) && s.Deleted));
                }
            }
        }

        private bool _forReapplying;

        public virtual bool ForReapplying
        {
            get { return _forReapplying; }
            set { _forReapplying = value; } 
        }

        public MovementConfirmationLineStates(IMovementConfirmationState outerState)
        {
            this._movementConfirmationState = outerState;
            this._forReapplying = outerState.ForReapplying;
        }

        public IEnumerator<IMovementConfirmationLineState> GetEnumerator()
        {
            return InnerEnumeralbe.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return InnerEnumeralbe.GetEnumerator();
        }

        public virtual void Remove(IMovementConfirmationLineState state)
        {
            this._removedMovementConfirmationLineStates.Add(state.GlobalId, state);
        }

        public virtual IMovementConfirmationLineState Get(string lineNumber)
		{
			return Get(lineNumber, false, false);
		}

        public virtual IMovementConfirmationLineState Get(string lineNumber, bool forCreation)
        {
			return Get(lineNumber, forCreation, false);
        }

        public virtual IMovementConfirmationLineState Get(string lineNumber, bool forCreation, bool nullAllowed)
        {
            MovementConfirmationLineId globalId = new MovementConfirmationLineId(_movementConfirmationState.DocumentNumber, lineNumber);
            if (_loadedMovementConfirmationLineStates.ContainsKey(globalId)) {
                return _loadedMovementConfirmationLineStates[globalId];
            }
            if (forCreation || ForReapplying)
            {
                var state = new MovementConfirmationLineState(ForReapplying);
                state.MovementConfirmationLineId = globalId;
                _loadedMovementConfirmationLineStates.Add(globalId, state);
                return state;
            }
            else
            {
                var state = MovementConfirmationLineStateDao.Get(globalId, nullAllowed);
                if (state != null)
                {
                    _loadedMovementConfirmationLineStates.Add(globalId, state);
                }
                return state;
            }
        }

        public virtual void AddToSave(IMovementConfirmationLineState state)
        {
            this._loadedMovementConfirmationLineStates[state.GlobalId] = state;
        }

		#region Saveable Implements

		public virtual void Save ()
		{
			foreach (IMovementConfirmationLineState s in this.LoadedMovementConfirmationLineStates) {
                MovementConfirmationLineStateDao.Save(s);
			}
            foreach(IMovementConfirmationLineState s in this._removedMovementConfirmationLineStates.Values)
            {
                MovementConfirmationLineStateDao.Delete(s);
            }
		}

		#endregion


    }



}


