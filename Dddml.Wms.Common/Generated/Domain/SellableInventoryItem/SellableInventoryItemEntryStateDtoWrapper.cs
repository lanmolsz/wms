// <autogenerated>
//   This file was generated by T4 code generator GenerateSellableInventoryItemDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.SellableInventoryItem;
using Dddml.Wms.Domain.InventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.SellableInventoryItem
{

	public partial class SellableInventoryItemEntryStateDtoWrapper : StateDtoWrapperBase, ISellableInventoryItemEntryStateDto, ISellableInventoryItemEntryState
	{

        internal static IList<string> _collectionFieldNames = new string[] {  };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private ISellableInventoryItemEntryState _state;

        public SellableInventoryItemEntryStateDtoWrapper()
        {
            this._state = new SellableInventoryItemEntryState();
        }

		public SellableInventoryItemEntryStateDtoWrapper(ISellableInventoryItemEntryState state)
		{
            this._state = state;
		}

		public ISellableInventoryItemEntryState ToSellableInventoryItemEntryState()
		{
			return this._state;
		}

		public virtual long? EntrySeqId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EntrySeqId"))
                {
                    return _state.EntrySeqId;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.EntrySeqId = value.Value;
                }
            }
        }

        long ISellableInventoryItemEntryStateProperties.EntrySeqId
        {
            get 
            {
                return (this._state as ISellableInventoryItemEntryStateProperties).EntrySeqId;
            }
            set 
            {
                (this._state as ISellableInventoryItemEntryStateProperties).EntrySeqId = value;
            }
        }

		public virtual decimal? QuantitySellable
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("QuantitySellable"))
                {
                    return _state.QuantitySellable;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.QuantitySellable = value.Value;
                }
            }
        }

        decimal ISellableInventoryItemEntryStateProperties.QuantitySellable
        {
            get 
            {
                return (this._state as ISellableInventoryItemEntryStateProperties).QuantitySellable;
            }
            set 
            {
                (this._state as ISellableInventoryItemEntryStateProperties).QuantitySellable = value;
            }
        }

        public InventoryPRTriggeredIdDto SourceEventId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SourceEventId"))
                {
					return (_state.SourceEventId == null) ? null : new InventoryPRTriggeredIdDtoWrapper(_state.SourceEventId);
                }
                return null;
            }
            set
            {
                _state.SourceEventId = (value == null) ? null : value.ToInventoryPRTriggeredId();
            }
        }

        InventoryPRTriggeredId ISellableInventoryItemEntryStateProperties.SourceEventId
        {
            get 
            {
                return (this._state as ISellableInventoryItemEntryStateProperties).SourceEventId;
            }
            set 
            {
                (this._state as ISellableInventoryItemEntryStateProperties).SourceEventId = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as ISellableInventoryItemEntryStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as ISellableInventoryItemEntryStateProperties).Version = value.Value;
                }
            }
        }

        long ISellableInventoryItemEntryStateProperties.Version
        {
            get 
            {
                return (this._state as ISellableInventoryItemEntryStateProperties).Version;
            }
            set 
            {
                (this._state as ISellableInventoryItemEntryStateProperties).Version = value;
            }
        }

        public InventoryItemIdDto SellableInventoryItemId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SellableInventoryItemId"))
                {
					return (_state.SellableInventoryItemId == null) ? null : new InventoryItemIdDtoWrapper(_state.SellableInventoryItemId);
                }
                return null;
            }
            set
            {
                _state.SellableInventoryItemId = (value == null) ? null : value.ToInventoryItemId();
            }
        }

        InventoryItemId ISellableInventoryItemEntryStateProperties.SellableInventoryItemId
        {
            get 
            {
                return (this._state as ISellableInventoryItemEntryStateProperties).SellableInventoryItemId;
            }
            set 
            {
                (this._state as ISellableInventoryItemEntryStateProperties).SellableInventoryItemId = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation


		SellableInventoryItemEntryId IGlobalIdentity<SellableInventoryItemEntryId>.GlobalId {
			get { return (_state as ISellableInventoryItemEntryState).GlobalId; }
		}

        long ILocalIdentity<long>.LocalId
        {
			get { return (_state as ISellableInventoryItemEntryState).LocalId; }
        }

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as ISellableInventoryItemEntryState).CreatedBy; }
            set { (_state as ISellableInventoryItemEntryState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as ISellableInventoryItemEntryState).CreatedAt; }
            set { (_state as ISellableInventoryItemEntryState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as ISellableInventoryItemEntryState).UpdatedBy; }
            set { (_state as ISellableInventoryItemEntryState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as ISellableInventoryItemEntryState).UpdatedAt; }
            set { (_state as ISellableInventoryItemEntryState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IEntityVersioned<long>.EntityVersion
		{
            get { return (_state as ISellableInventoryItemEntryStateProperties).Version; }
		}

		#endregion

        bool ISellableInventoryItemEntryState.IsUnsaved
        {
            get { return this.Version == SellableInventoryItemEntryState.VersionZero; }
        }

		void ISellableInventoryItemEntryState.When(ISellableInventoryItemEntryStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool ISellableInventoryItemEntryState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

        public virtual string CommandId
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CommandId"))
                {
                    return _state.CommandId; 
                }
                return null;
            }
            set { _state.CommandId = value; }
        }

		void ISellableInventoryItemEntryState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

	}

    partial class SellableInventoryItemEntryStateDtoWrapperCollection : StateDtoWrapperCollectionBase<SellableInventoryItemEntryStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(SellableInventoryItemEntryStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

