// <autogenerated>
//   This file was generated by T4 code generator GenerateSellableInventoryItemDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.SellableInventoryItem;
using Dddml.Wms.Domain.InventoryItem;
using Dddml.Wms.Domain.InventoryPRTriggered;

namespace Dddml.Wms.Domain.SellableInventoryItem
{

    public class SellableInventoryItemEntryStateEventDtoConverter
    {
        public virtual SellableInventoryItemEntryStateCreatedOrMergePatchedOrRemovedDto ToSellableInventoryItemEntryStateEventDto(ISellableInventoryItemEntryEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (ISellableInventoryItemEntryStateCreated)stateEvent;
                return ToSellableInventoryItemEntryStateCreatedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual SellableInventoryItemEntryStateCreatedDto ToSellableInventoryItemEntryStateCreatedDto(ISellableInventoryItemEntryStateCreated e)
        {
            var dto = new SellableInventoryItemEntryStateCreatedDto();
            dto.SellableInventoryItemEntryEventId = e.SellableInventoryItemEntryEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.SellableQuantity = e.SellableQuantity;
            dto.SourceEventId = e.SourceEventId;
            return dto;
        }


    }


}

