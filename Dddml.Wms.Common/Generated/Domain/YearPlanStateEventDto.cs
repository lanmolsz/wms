// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public abstract class YearPlanStateEventDtoBase : IStateEventDto, IYearPlanStateCreated, IYearPlanStateMergePatched, IYearPlanStateRemoved
	{

        private YearPlanStateEventIdDto _stateEventId;

		protected internal virtual YearPlanStateEventIdDto StateEventId 
        {
            get 
            {
                if (_stateEventId == null) { _stateEventId = new YearPlanStateEventIdDto(); }
                return _stateEventId;
            }
            set
            {
                _stateEventId = value;
            }
        }

        public virtual int Year
        {
            get { return StateEventId.Year; }
            set { StateEventId.Year = value; }
        }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

		YearPlanStateEventId IGlobalIdentity<YearPlanStateEventId>.GlobalId {
			get {
				return this.StateEventId.ToYearPlanStateEventId();
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IYearPlanStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IYearPlanStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IYearPlanStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        private MonthPlanStateCreatedOrMergePatchedOrRemovedDtos _monthPlanEvents = new MonthPlanStateCreatedOrMergePatchedOrRemovedDtos();

        public virtual MonthPlanStateCreatedOrMergePatchedOrRemovedDto[] MonthPlanEvents
        {
            get
            {
                return _monthPlanEvents.ToArray();
            }
            set
            {
                _monthPlanEvents.Clear();
                _monthPlanEvents.AddRange(value);
            }
        }



        private MonthPlanStateEventIdDto NewMonthPlanStateEventId(int month)
        {
            var eId = new MonthPlanStateEventIdDto();
            eId.PersonalName = this.StateEventId.PersonalName;
            eId.Year = this.StateEventId.Year;
            eId.Month = month;
            eId.PersonVersion = this.StateEventId.PersonVersion;
            return eId;
        }

        public virtual MonthPlanStateCreatedDto NewMonthPlanStateCreated(int month)
        {
            var e = new MonthPlanStateCreatedDto();
            var eId = NewMonthPlanStateEventId(month);
            e.StateEventId = eId;
            return e;
        }

        public virtual MonthPlanStateMergePatchedDto NewMonthPlanStateMergePatched(int month)
        {
            var e = new MonthPlanStateMergePatchedDto();
            var eId = NewMonthPlanStateEventId(month);
            e.StateEventId = eId;
            return e;
        }

        public virtual MonthPlanStateRemovedDto NewMonthPlanStateRemoved(int month)
        {
            var e = new MonthPlanStateRemovedDto();
            var eId = NewMonthPlanStateEventId(month);
            e.StateEventId = eId;
            return e;
        }

        IEnumerable<IMonthPlanStateCreated> IYearPlanStateCreated.MonthPlanEvents
        {
            get { return this._monthPlanEvents; }
        }

        void IYearPlanStateCreated.AddMonthPlanEvent(IMonthPlanStateCreated e)
        {
            this._monthPlanEvents.AddMonthPlanEvent(e);
        }

        IMonthPlanStateCreated IYearPlanStateCreated.NewMonthPlanStateCreated(int month)
        {
            return NewMonthPlanStateCreated(month);
        }

        IEnumerable<IMonthPlanStateEvent> IYearPlanStateMergePatched.MonthPlanEvents
        {
            get { return this._monthPlanEvents; }
        }

        void IYearPlanStateMergePatched.AddMonthPlanEvent(IMonthPlanStateEvent e)
        {
            this._monthPlanEvents.AddMonthPlanEvent(e);
        }

        IMonthPlanStateCreated IYearPlanStateMergePatched.NewMonthPlanStateCreated(int month)
        {
            return NewMonthPlanStateCreated(month);
        }

        IMonthPlanStateMergePatched IYearPlanStateMergePatched.NewMonthPlanStateMergePatched(int month)
        {
            return NewMonthPlanStateMergePatched(month);
        }

        IMonthPlanStateRemoved IYearPlanStateMergePatched.NewMonthPlanStateRemoved(int month)
        {
            return NewMonthPlanStateRemoved(month);
        }


        IEnumerable<IMonthPlanStateRemoved> IYearPlanStateRemoved.MonthPlanEvents
        {
            get { return this._monthPlanEvents; }
        }

        void IYearPlanStateRemoved.AddMonthPlanEvent(IMonthPlanStateRemoved e)
        {
            this._monthPlanEvents.AddMonthPlanEvent(e);
        }

        IMonthPlanStateRemoved IYearPlanStateRemoved.NewMonthPlanStateRemoved(int month)
        {
            return NewMonthPlanStateRemoved(month);
        }


        YearPlanStateEventId IYearPlanStateEvent.StateEventId
        {
            get { return this.StateEventId.ToYearPlanStateEventId(); }
        }

        protected YearPlanStateEventDtoBase()
        {
        }

        protected YearPlanStateEventDtoBase(YearPlanStateEventIdDto stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class YearPlanStateCreatedOrMergePatchedOrRemovedDto : YearPlanStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class YearPlanStateCreatedDto : YearPlanStateCreatedOrMergePatchedOrRemovedDto
	{
		public YearPlanStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class YearPlanStateMergePatchedDto : YearPlanStateCreatedOrMergePatchedOrRemovedDto
	{
		public YearPlanStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class YearPlanStateRemovedDto : YearPlanStateCreatedOrMergePatchedOrRemovedDto
	{
		public YearPlanStateRemovedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }

	}


    public partial class YearPlanStateCreatedOrMergePatchedOrRemovedDtos : IEnumerable<IYearPlanStateCreated>, IEnumerable<IYearPlanStateMergePatched>, IEnumerable<IYearPlanStateRemoved>
    {
        private List<YearPlanStateCreatedOrMergePatchedOrRemovedDto> _innerStateEvents = new List<YearPlanStateCreatedOrMergePatchedOrRemovedDto>();

        public virtual YearPlanStateCreatedOrMergePatchedOrRemovedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<YearPlanStateCreatedOrMergePatchedOrRemovedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IYearPlanStateCreated> IEnumerable<IYearPlanStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IYearPlanStateMergePatched> IEnumerable<IYearPlanStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IYearPlanStateRemoved> IEnumerable<IYearPlanStateRemoved>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddYearPlanEvent(IYearPlanStateCreated e)
        {
            _innerStateEvents.Add((YearPlanStateCreatedDto)e);
        }

        public void AddYearPlanEvent(IYearPlanStateEvent e)
        {
            _innerStateEvents.Add((YearPlanStateCreatedOrMergePatchedOrRemovedDto)e);
        }

        public void AddYearPlanEvent(IYearPlanStateRemoved e)
        {
            _innerStateEvents.Add((YearPlanStateRemovedDto)e);
        }

    }


}

