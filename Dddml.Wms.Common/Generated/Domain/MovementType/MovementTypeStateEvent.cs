// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementType;

namespace Dddml.Wms.Domain.MovementType
{

	public abstract class MovementTypeStateEventBase : IMovementTypeStateEvent
	{

		public virtual MovementTypeEventId MovementTypeEventId { get; set; }

        public virtual string MovementTypeId
        {
            get { return MovementTypeEventId.MovementTypeId; }
            set { MovementTypeEventId.MovementTypeId = value; }
        }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		MovementTypeEventId IGlobalIdentity<MovementTypeEventId>.GlobalId {
			get
			{
				return this.MovementTypeEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IMovementTypeStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}

        protected MovementTypeStateEventBase()
        {
        }

        protected MovementTypeStateEventBase(MovementTypeEventId stateEventId)
        {
            this.MovementTypeEventId = stateEventId;
        }


        string IStateEventDto.StateEventType
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}

	public class MovementTypeStateCreated : MovementTypeStateEventBase, IMovementTypeStateCreated
	{
		public MovementTypeStateCreated () : this(new MovementTypeEventId())
		{
		}

		public MovementTypeStateCreated (MovementTypeEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class MovementTypeStateMergePatched : MovementTypeStateEventBase, IMovementTypeStateMergePatched
	{
		public virtual bool IsPropertyDescriptionRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MovementTypeStateMergePatched ()
		{
		}

		public MovementTypeStateMergePatched (MovementTypeEventId stateEventId) : base(stateEventId)
		{
		}


        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class MovementTypeStateDeleted : MovementTypeStateEventBase, IMovementTypeStateDeleted
	{
		public MovementTypeStateDeleted ()
		{
		}

		public MovementTypeStateDeleted (MovementTypeEventId stateEventId) : base(stateEventId)
		{
		}

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }



	}



}

