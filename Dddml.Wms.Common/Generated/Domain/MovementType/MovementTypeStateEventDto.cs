// <autogenerated>
//   This file was generated by T4 code generator GenerateMovementTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.MovementType;

namespace Dddml.Wms.Domain.MovementType
{

	public abstract class MovementTypeStateEventDtoBase : IEventDto, IMovementTypeStateCreated, IMovementTypeStateMergePatched, IMovementTypeStateDeleted
	{

        private MovementTypeEventId _movementTypeEventId;

		protected internal virtual MovementTypeEventId MovementTypeEventId 
        {
            get 
            {
                if (_movementTypeEventId == null) { _movementTypeEventId = new MovementTypeEventId(); }
                return _movementTypeEventId;
            }
            set
            {
                _movementTypeEventId = value;
            }
        }

        public virtual string MovementTypeId
        {
            get { return MovementTypeEventId.MovementTypeId; }
            set { MovementTypeEventId.MovementTypeId = value; }
        }

        public virtual long Version
        {
            get { return MovementTypeEventId.Version; }
            set { MovementTypeEventId.Version = value; }
        }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		MovementTypeEventId IGlobalIdentity<MovementTypeEventId>.GlobalId {
			get 
			{
				return this.MovementTypeEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IMovementTypeEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IMovementTypeStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMovementTypeStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        MovementTypeEventId IMovementTypeEvent.MovementTypeEventId
        {
            get { return this.MovementTypeEventId; }
        }

        protected MovementTypeStateEventDtoBase()
        {
        }

        protected MovementTypeStateEventDtoBase(MovementTypeEventId stateEventId)
        {
            this.MovementTypeEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IEventDto.EventType 
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}


    public class MovementTypeStateCreatedOrMergePatchedOrDeletedDto : MovementTypeStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetEventType()
        {
            return this._eventType;
        }

    }



	public class MovementTypeStateCreatedDto : MovementTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public MovementTypeStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class MovementTypeStateMergePatchedDto : MovementTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public MovementTypeStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class MovementTypeStateDeletedDto : MovementTypeStateCreatedOrMergePatchedOrDeletedDto
	{
		public MovementTypeStateDeletedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class MovementTypeStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IMovementTypeStateCreated>, IEnumerable<IMovementTypeStateMergePatched>, IEnumerable<IMovementTypeStateDeleted>
    {
        private List<MovementTypeStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<MovementTypeStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual MovementTypeStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<MovementTypeStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMovementTypeStateCreated> IEnumerable<IMovementTypeStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMovementTypeStateMergePatched> IEnumerable<IMovementTypeStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMovementTypeStateDeleted> IEnumerable<IMovementTypeStateDeleted>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddMovementTypeEvent(IMovementTypeStateCreated e)
        {
            _innerStateEvents.Add((MovementTypeStateCreatedDto)e);
        }

        public void AddMovementTypeEvent(IMovementTypeEvent e)
        {
            _innerStateEvents.Add((MovementTypeStateCreatedOrMergePatchedOrDeletedDto)e);
        }

        public void AddMovementTypeEvent(IMovementTypeStateDeleted e)
        {
            _innerStateEvents.Add((MovementTypeStateDeletedDto)e);
        }

    }


}

