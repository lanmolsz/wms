// <autogenerated>
//   This file was generated by T4 code generator GenerateDocumentTypeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.DocumentType;

namespace Dddml.Wms.Domain.DocumentType
{

    public class DocumentTypeStateEventDtoConverter
    {
        public virtual DocumentTypeStateCreatedOrMergePatchedOrDeletedDto ToDocumentTypeStateEventDto(IDocumentTypeStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IDocumentTypeStateCreated)stateEvent;
                return ToDocumentTypeStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IDocumentTypeStateMergePatched)stateEvent;
                return ToDocumentTypeStateMergePatchedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.Deleted)
            {
                var e = (IDocumentTypeStateDeleted)stateEvent;
                return ToDocumentTypeStateDeletedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual DocumentTypeStateCreatedDto ToDocumentTypeStateCreatedDto(IDocumentTypeStateCreated e)
        {
            var dto = new DocumentTypeStateCreatedDto();
            dto.DocumentTypeEventId = new DocumentTypeEventIdDtoWrapper(e.DocumentTypeEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Description = e.Description;
            dto.ParentDocumentTypeId = e.ParentDocumentTypeId;
            dto.Active = e.Active;
            return dto;
        }

        public virtual DocumentTypeStateMergePatchedDto ToDocumentTypeStateMergePatchedDto(IDocumentTypeStateMergePatched e)
        {
            var dto = new DocumentTypeStateMergePatchedDto();
            dto.DocumentTypeEventId = new DocumentTypeEventIdDtoWrapper(e.DocumentTypeEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.Description = e.Description;
            dto.ParentDocumentTypeId = e.ParentDocumentTypeId;
            dto.Active = e.Active;
            dto.IsPropertyDescriptionRemoved = e.IsPropertyDescriptionRemoved;
            dto.IsPropertyParentDocumentTypeIdRemoved = e.IsPropertyParentDocumentTypeIdRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual DocumentTypeStateDeletedDto ToDocumentTypeStateDeletedDto(IDocumentTypeStateDeleted e)
        {
            var dto = new DocumentTypeStateDeletedDto();
            dto.DocumentTypeEventId = new DocumentTypeEventIdDtoWrapper(e.DocumentTypeEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

