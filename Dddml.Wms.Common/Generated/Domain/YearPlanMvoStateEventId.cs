// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public class YearPlanMvoStateEventId
	{

		private YearPlanId _yearPlanId = new YearPlanId();

		public virtual YearPlanId YearPlanId { 
			get { return this._yearPlanId; } 
			internal set { _yearPlanId = value; } 
		}

		private long _personVersion;

		public virtual long PersonVersion { 
			get { return this._personVersion; } 
			internal set { _personVersion = value; } 
		}


        #region  Flattened Properties


		public virtual string YearPlanIdPersonalNameFirstName {
			get { return YearPlanId.PersonalName.FirstName; }
			internal set { YearPlanId.PersonalName.FirstName = value; }
		}

		public virtual string YearPlanIdPersonalNameLastName {
			get { return YearPlanId.PersonalName.LastName; }
			internal set { YearPlanId.PersonalName.LastName = value; }
		}

		public virtual int YearPlanIdYear {
			get { return YearPlanId.Year; }
			internal set { YearPlanId.Year = value; }
		}

        #endregion

		internal YearPlanMvoStateEventId ()
		{
		}

		public YearPlanMvoStateEventId (YearPlanId yearPlanId, long personVersion)
		{
			this._yearPlanId = yearPlanId;
			this._personVersion = personVersion;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			YearPlanMvoStateEventId other = obj as YearPlanMvoStateEventId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.YearPlanId, other.YearPlanId)
				&& Object.Equals (this.PersonVersion, other.PersonVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.YearPlanId != null) {
				hash += 13 * this.YearPlanId.GetHashCode ();
			}
			if (this.PersonVersion != null) {
				hash += 13 * this.PersonVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


