// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentPackageDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentPackage;

namespace Dddml.Wms.Domain.ShipmentPackage
{

	public partial class ShipmentPackageStateDtoWrapper : StateDtoWrapperBase, IShipmentPackageStateDto, IShipmentPackageState
	{

        internal static IList<string> _collectionFieldNames = new string[] { "ShipmentPackageContents" };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IShipmentPackageState _state;

        public ShipmentPackageStateDtoWrapper()
        {
            this._state = new ShipmentPackageState();
        }

		public ShipmentPackageStateDtoWrapper(IShipmentPackageState state)
		{
            this._state = state;
		}

		public IShipmentPackageState ToShipmentPackageState()
		{
			return this._state;
		}

		public virtual ShipmentPackageId ShipmentPackageId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentPackageId"))
                {
                    return _state.ShipmentPackageId;
                }
                return null;
            }
            set
            {
                _state.ShipmentPackageId = value;
            }
        }

        ShipmentPackageId IShipmentPackageStateProperties.ShipmentPackageId
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).ShipmentPackageId;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).ShipmentPackageId = value;
            }
        }

		public virtual string ShipmentBoxTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentBoxTypeId"))
                {
                    return _state.ShipmentBoxTypeId;
                }
                return null;
            }
            set
            {
                _state.ShipmentBoxTypeId = value;
            }
        }

        string IShipmentPackageStateProperties.ShipmentBoxTypeId
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).ShipmentBoxTypeId;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).ShipmentBoxTypeId = value;
            }
        }

		public virtual DateTime? DateCreated
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DateCreated"))
                {
                    return _state.DateCreated;
                }
                return null;
            }
            set
            {
                _state.DateCreated = value;
            }
        }

        DateTime? IShipmentPackageStateProperties.DateCreated
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).DateCreated;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).DateCreated = value;
            }
        }

		public virtual decimal? BoxLength
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("BoxLength"))
                {
                    return _state.BoxLength;
                }
                return null;
            }
            set
            {
                _state.BoxLength = value;
            }
        }

        decimal? IShipmentPackageStateProperties.BoxLength
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).BoxLength;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).BoxLength = value;
            }
        }

		public virtual decimal? BoxHeight
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("BoxHeight"))
                {
                    return _state.BoxHeight;
                }
                return null;
            }
            set
            {
                _state.BoxHeight = value;
            }
        }

        decimal? IShipmentPackageStateProperties.BoxHeight
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).BoxHeight;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).BoxHeight = value;
            }
        }

		public virtual decimal? BoxWidth
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("BoxWidth"))
                {
                    return _state.BoxWidth;
                }
                return null;
            }
            set
            {
                _state.BoxWidth = value;
            }
        }

        decimal? IShipmentPackageStateProperties.BoxWidth
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).BoxWidth;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).BoxWidth = value;
            }
        }

		public virtual string DimensionUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DimensionUomId"))
                {
                    return _state.DimensionUomId;
                }
                return null;
            }
            set
            {
                _state.DimensionUomId = value;
            }
        }

        string IShipmentPackageStateProperties.DimensionUomId
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).DimensionUomId;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).DimensionUomId = value;
            }
        }

		public virtual decimal? Weight
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Weight"))
                {
                    return _state.Weight;
                }
                return null;
            }
            set
            {
                _state.Weight = value;
            }
        }

        decimal? IShipmentPackageStateProperties.Weight
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).Weight;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).Weight = value;
            }
        }

		public virtual string WeightUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("WeightUomId"))
                {
                    return _state.WeightUomId;
                }
                return null;
            }
            set
            {
                _state.WeightUomId = value;
            }
        }

        string IShipmentPackageStateProperties.WeightUomId
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).WeightUomId;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).WeightUomId = value;
            }
        }

		public virtual decimal? InsuredValue
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("InsuredValue"))
                {
                    return _state.InsuredValue;
                }
                return null;
            }
            set
            {
                _state.InsuredValue = value;
            }
        }

        decimal? IShipmentPackageStateProperties.InsuredValue
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).InsuredValue;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).InsuredValue = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IShipmentPackageStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IShipmentPackageStateProperties).Active = value.Value;
                }
            }
        }

        bool IShipmentPackageStateProperties.Active
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).Active;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IShipmentPackageStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IShipmentPackageStateProperties).Version = value.Value;
                }
            }
        }

        long IShipmentPackageStateProperties.Version
        {
            get 
            {
                return (this._state as IShipmentPackageStateProperties).Version;
            }
            set 
            {
                (this._state as IShipmentPackageStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		ShipmentPackageId IGlobalIdentity<ShipmentPackageId>.GlobalId
		{
			get { return (_state as IShipmentPackageState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
            get { return (_state as IDeleted).Deleted; }
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IShipmentPackageState).CreatedBy; }
            set { (_state as IShipmentPackageState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IShipmentPackageState).CreatedAt; }
            set { (_state as IShipmentPackageState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IShipmentPackageState).UpdatedBy; }
            set { (_state as IShipmentPackageState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IShipmentPackageState).UpdatedAt; }
            set { (_state as IShipmentPackageState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IShipmentPackageStateProperties).Version; }
		}

		#endregion

        bool IShipmentPackageState.IsUnsaved
        {
            get { return this.Version == ShipmentPackageState.VersionZero; }
        }

        public virtual IShipmentPackageContentStateDto[] ShipmentPackageContents
        {
            get 
            {
                if (!(this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentPackageContents"))
                {
                    return null;
                }
                var dtos = new List<IShipmentPackageContentStateDto>();
                if (this._state.ShipmentPackageContents != null)
                {
                    foreach (var s in this._state.ShipmentPackageContents)
                    {
                        var dto = new ShipmentPackageContentStateDtoWrapper((ShipmentPackageContentState)s);
                        var returnFS = CollectionUtils.DictionaryGetValueIgnoringCase(ReturnedFields, "ShipmentPackageContents");
                        if (!String.IsNullOrWhiteSpace(returnFS))
                        {
                            (dto as IStateDtoWrapper).ReturnedFieldsString = returnFS;
                        }
                        else
                        {
                            (dto as IStateDtoWrapper).AllFieldsReturned = this.AllFieldsReturned;
                        }
                        dtos.Add(dto);
                    }
                }
                return dtos.ToArray();
            }
            set 
            {
                if (value == null) { value = new ShipmentPackageContentStateDtoWrapper[0]; }
                var states = new List<IShipmentPackageContentState>();
                foreach (var s in value)
                {
                    states.Add(s.ToShipmentPackageContentState());
                }
                this._state.ShipmentPackageContents = new DtoShipmentPackageContentStates(this._state, states);
            }
        }

        IShipmentPackageContentStates IShipmentPackageState.ShipmentPackageContents
        {
            get { return _state.ShipmentPackageContents; }
            set { _state.ShipmentPackageContents = value; }
        }

		void IShipmentPackageState.When(IShipmentPackageStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IShipmentPackageState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IShipmentPackageState.When(IShipmentPackageStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IShipmentPackageState.When(IShipmentPackageStateDeleted e)
		{
            throw new NotSupportedException();
		}

		void IShipmentPackageState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

        public class DtoShipmentPackageContentStates : IShipmentPackageContentStates
        {

            private IShipmentPackageState _outerState;

            private IEnumerable<IShipmentPackageContentState> _innerStates;

            public DtoShipmentPackageContentStates(IShipmentPackageState outerState, IEnumerable<IShipmentPackageContentState> innerStates)
            {
                this._outerState = outerState;
                if (innerStates == null)
                {
                    this._innerStates = new IShipmentPackageContentState[] { };
                }
                else
                {
                    this._innerStates = innerStates;
                }
            }

            public IEnumerator<IShipmentPackageContentState> GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            public IShipmentPackageContentState Get(string shipmentItemSeqId)
            {
                throw new NotSupportedException();
            }

            public IShipmentPackageContentState Get(string shipmentItemSeqId, bool forCreation)
            {
                throw new NotSupportedException();
            }

            public IShipmentPackageContentState Get(string shipmentItemSeqId, bool forCreation, bool nullAllowed)
            {
                throw new NotSupportedException();
            }

            public void Remove(IShipmentPackageContentState state)
            {
                throw new NotSupportedException();
            }

            public void AddToSave(IShipmentPackageContentState state)
            {
                throw new NotSupportedException();
            }

            public void Save()
            {
                throw new NotSupportedException();
            }
        }

	}

    partial class ShipmentPackageStateDtoWrapperCollection : StateDtoWrapperCollectionBase<ShipmentPackageStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(ShipmentPackageStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

