// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentPackageDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentPackage;

namespace Dddml.Wms.Domain.ShipmentPackage
{

	public abstract class ShipmentPackageContentStateEventDtoBase : IStateEventDto, IShipmentPackageContentStateCreated, IShipmentPackageContentStateMergePatched, IShipmentPackageContentStateRemoved
	{

        private ShipmentPackageContentEventId _shipmentPackageContentEventId;

		protected internal virtual ShipmentPackageContentEventId ShipmentPackageContentEventId 
        {
            get 
            {
                if (_shipmentPackageContentEventId == null) { _shipmentPackageContentEventId = new ShipmentPackageContentEventId(); }
                return _shipmentPackageContentEventId;
            }
            set
            {
                _shipmentPackageContentEventId = value;
            }
        }

        public virtual string ShipmentItemSeqId
        {
            get { return ShipmentPackageContentEventId.ShipmentItemSeqId; }
            set { ShipmentPackageContentEventId.ShipmentItemSeqId = value; }
        }

		public virtual decimal? Quantity { get; set; }

		public virtual string SubProductId { get; set; }

		public virtual decimal? SubProductQuantity { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		ShipmentPackageContentEventId IGlobalIdentity<ShipmentPackageContentEventId>.GlobalId {
			get 
			{
				return this.ShipmentPackageContentEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IShipmentPackageContentStateEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }

		public virtual bool? IsPropertyQuantityRemoved { get; set; }

        bool IShipmentPackageContentStateMergePatched.IsPropertyQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertyQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertySubProductIdRemoved { get; set; }

        bool IShipmentPackageContentStateMergePatched.IsPropertySubProductIdRemoved
        {
            get 
            {
                var b = this.IsPropertySubProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertySubProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertySubProductQuantityRemoved { get; set; }

        bool IShipmentPackageContentStateMergePatched.IsPropertySubProductQuantityRemoved
        {
            get 
            {
                var b = this.IsPropertySubProductQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertySubProductQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IShipmentPackageContentStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        ShipmentPackageContentEventId IShipmentPackageContentStateEvent.ShipmentPackageContentEventId
        {
            get { return this.ShipmentPackageContentEventId; }
        }

        protected ShipmentPackageContentStateEventDtoBase()
        {
        }

        protected ShipmentPackageContentStateEventDtoBase(ShipmentPackageContentEventId stateEventId)
        {
            this.ShipmentPackageContentEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto : ShipmentPackageContentStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._eventType;
        }

    }



	public class ShipmentPackageContentStateCreatedDto : ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto
	{
		public ShipmentPackageContentStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class ShipmentPackageContentStateMergePatchedDto : ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto
	{
		public ShipmentPackageContentStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class ShipmentPackageContentStateRemovedDto : ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto
	{
		public ShipmentPackageContentStateRemovedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }

	}


    public partial class ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDtos : IEnumerable<IShipmentPackageContentStateCreated>, IEnumerable<IShipmentPackageContentStateMergePatched>, IEnumerable<IShipmentPackageContentStateRemoved>
    {
        private List<ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto> _innerStateEvents = new List<ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto>();

        public virtual ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentPackageContentStateCreated> IEnumerable<IShipmentPackageContentStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentPackageContentStateMergePatched> IEnumerable<IShipmentPackageContentStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IShipmentPackageContentStateRemoved> IEnumerable<IShipmentPackageContentStateRemoved>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddShipmentPackageContentEvent(IShipmentPackageContentStateCreated e)
        {
            _innerStateEvents.Add((ShipmentPackageContentStateCreatedDto)e);
        }

        public void AddShipmentPackageContentEvent(IShipmentPackageContentStateEvent e)
        {
            _innerStateEvents.Add((ShipmentPackageContentStateCreatedOrMergePatchedOrRemovedDto)e);
        }

        public void AddShipmentPackageContentEvent(IShipmentPackageContentStateRemoved e)
        {
            _innerStateEvents.Add((ShipmentPackageContentStateRemovedDto)e);
        }

    }


}

