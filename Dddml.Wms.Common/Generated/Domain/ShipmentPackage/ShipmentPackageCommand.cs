// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentPackageDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentPackage;

namespace Dddml.Wms.Domain.ShipmentPackage
{

	public abstract class ShipmentPackageCommandBase : IShipmentPackageCommand
	{
		public virtual ShipmentPackageId ShipmentPackageId { get; set; }


		ShipmentPackageId IAggregateCommand<ShipmentPackageId, long>.AggregateId
		{
			get
			{
				return this.ShipmentPackageId;
			}
		}


		long IAggregateCommand<ShipmentPackageId, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string ShipmentBoxTypeId { get; set; }

		public virtual DateTime? DateCreated { get; set; }

		public virtual decimal? BoxLength { get; set; }

		public virtual decimal? BoxHeight { get; set; }

		public virtual decimal? BoxWidth { get; set; }

		public virtual string DimensionUomId { get; set; }

		public virtual decimal? Weight { get; set; }

		public virtual string WeightUomId { get; set; }

		public virtual decimal? InsuredValue { get; set; }

		public virtual bool? Active { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreateShipmentPackage : ShipmentPackageCommandBase, ICreateShipmentPackage
	{
		
		public CreateShipmentPackage ()
		{
		}


        private CreateShipmentPackageContentCommands _shipmentPackageContents = new CreateShipmentPackageContentCommands();

        public ICreateShipmentPackageContentCommands ShipmentPackageContents
        {
            get
            {
                return this._shipmentPackageContents;
            }
        }

        public CreateShipmentPackageContent NewCreateShipmentPackageContent()
        {
            var c = new CreateShipmentPackageContent();
            c.ShipmentPackageId = this.ShipmentPackageId;

            return c;
        }

        ICreateShipmentPackageContent ICreateShipmentPackage.NewCreateShipmentPackageContent()
        {
            return this.NewCreateShipmentPackageContent();
        }



        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchShipmentPackage :ShipmentPackageCommandBase, IMergePatchShipmentPackage
	{

		public virtual bool IsPropertyShipmentBoxTypeIdRemoved { get; set; }

		public virtual bool IsPropertyDateCreatedRemoved { get; set; }

		public virtual bool IsPropertyBoxLengthRemoved { get; set; }

		public virtual bool IsPropertyBoxHeightRemoved { get; set; }

		public virtual bool IsPropertyBoxWidthRemoved { get; set; }

		public virtual bool IsPropertyDimensionUomIdRemoved { get; set; }

		public virtual bool IsPropertyWeightRemoved { get; set; }

		public virtual bool IsPropertyWeightUomIdRemoved { get; set; }

		public virtual bool IsPropertyInsuredValueRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchShipmentPackage ()
		{
		}

        private ShipmentPackageContentCommands _shipmentPackageContentCommands = new ShipmentPackageContentCommands();

        public IShipmentPackageContentCommands ShipmentPackageContentCommands
        {
            get
            {
                return this._shipmentPackageContentCommands;
            }
        }


        public CreateShipmentPackageContent NewCreateShipmentPackageContent()
        {
            var c = new CreateShipmentPackageContent();
            c.ShipmentPackageId = this.ShipmentPackageId;

            return c;
        }

        ICreateShipmentPackageContent IMergePatchShipmentPackage.NewCreateShipmentPackageContent()
        {
            return this.NewCreateShipmentPackageContent();
        }

        public MergePatchShipmentPackageContent NewMergePatchShipmentPackageContent()
        {
            var c = new MergePatchShipmentPackageContent();
            c.ShipmentPackageId = this.ShipmentPackageId;

            return c;
        }

        IMergePatchShipmentPackageContent IMergePatchShipmentPackage.NewMergePatchShipmentPackageContent()
        {
            return this.NewMergePatchShipmentPackageContent();
        }


        public RemoveShipmentPackageContent NewRemoveShipmentPackageContent()
        {
            var c = new RemoveShipmentPackageContent();
            c.ShipmentPackageId = this.ShipmentPackageId;

            return c;
        }

        IRemoveShipmentPackageContent IMergePatchShipmentPackage.NewRemoveShipmentPackageContent()
        {
            return this.NewRemoveShipmentPackageContent();
        }


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteShipmentPackage : ShipmentPackageCommandBase, IDeleteShipmentPackage
	{
		public DeleteShipmentPackage ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }

	}


    public class CreateShipmentPackageContentCommands : ICreateShipmentPackageContentCommands
    {
        private List<ICreateShipmentPackageContent> _innerCommands = new List<ICreateShipmentPackageContent>();

        public void Add(ICreateShipmentPackageContent c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreateShipmentPackageContent c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreateShipmentPackageContent> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class ShipmentPackageContentCommands : IShipmentPackageContentCommands
    {
        private List<IShipmentPackageContentCommand> _innerCommands = new List<IShipmentPackageContentCommand>();

        public void Add(IShipmentPackageContentCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IShipmentPackageContentCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IShipmentPackageContentCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public static partial class ShipmentPackageCommands
    {
    }

}
