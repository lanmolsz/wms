// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public static partial class DayPlanMvoStateInterfaceExtensions
	{

        public static IDayPlanMvoCommand ToCreateOrMergePatchDayPlanMvo<TCreateDayPlanMvo, TMergePatchDayPlanMvo>(this IDayPlanMvoState state)
            where TCreateDayPlanMvo : ICreateDayPlanMvo, new()
            where TMergePatchDayPlanMvo : IMergePatchDayPlanMvo, new()
        {
            bool bUnsaved = ((IDayPlanMvoState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateDayPlanMvo<TCreateDayPlanMvo>();
            }
            else 
            {
                return state.ToMergePatchDayPlanMvo<TMergePatchDayPlanMvo>();
            }
        }

        public static TDeleteDayPlanMvo ToDeleteDayPlanMvo<TDeleteDayPlanMvo>(this IDayPlanMvoState state)
            where TDeleteDayPlanMvo : IDeleteDayPlanMvo, new()
        {
            var cmd = new TDeleteDayPlanMvo();
            cmd.DayPlanId = state.DayPlanId;
            cmd.PersonVersion = ((IDayPlanMvoStateProperties)state).PersonVersion;

            return cmd;
        }

        public static TMergePatchDayPlanMvo ToMergePatchDayPlanMvo<TMergePatchDayPlanMvo>(this IDayPlanMvoState state)
            where TMergePatchDayPlanMvo : IMergePatchDayPlanMvo, new()
        {
            var cmd = new TMergePatchDayPlanMvo();

            cmd.PersonVersion = ((IDayPlanMvoStateProperties)state).PersonVersion;

            cmd.DayPlanId = state.DayPlanId;
            cmd.Description = state.Description;
            cmd.Version = ((IDayPlanMvoStateProperties)state).Version;
            cmd.Active = ((IDayPlanMvoStateProperties)state).Active;
            cmd.MonthPlanDescription = state.MonthPlanDescription;
            cmd.MonthPlanVersion = state.MonthPlanVersion;
            cmd.MonthPlanCreatedBy = state.MonthPlanCreatedBy;
            cmd.MonthPlanCreatedAt = state.MonthPlanCreatedAt;
            cmd.MonthPlanUpdatedBy = state.MonthPlanUpdatedBy;
            cmd.MonthPlanUpdatedAt = state.MonthPlanUpdatedAt;
            cmd.MonthPlanActive = state.MonthPlanActive;
            cmd.MonthPlanDeleted = state.MonthPlanDeleted;
            cmd.YearPlanDescription = state.YearPlanDescription;
            cmd.YearPlanVersion = state.YearPlanVersion;
            cmd.YearPlanCreatedBy = state.YearPlanCreatedBy;
            cmd.YearPlanCreatedAt = state.YearPlanCreatedAt;
            cmd.YearPlanUpdatedBy = state.YearPlanUpdatedBy;
            cmd.YearPlanUpdatedAt = state.YearPlanUpdatedAt;
            cmd.YearPlanActive = state.YearPlanActive;
            cmd.YearPlanDeleted = state.YearPlanDeleted;
            cmd.PersonBirthDate = state.PersonBirthDate;
            cmd.PersonLoves = state.PersonLoves;
            cmd.PersonEmergencyContact = state.PersonEmergencyContact;
            cmd.PersonCreatedBy = state.PersonCreatedBy;
            cmd.PersonCreatedAt = state.PersonCreatedAt;
            cmd.PersonUpdatedBy = state.PersonUpdatedBy;
            cmd.PersonUpdatedAt = state.PersonUpdatedAt;
            cmd.PersonActive = state.PersonActive;
            cmd.PersonDeleted = state.PersonDeleted;
            
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            if (state.MonthPlanDescription == null) { cmd.IsPropertyMonthPlanDescriptionRemoved = true; }
            if (state.MonthPlanCreatedBy == null) { cmd.IsPropertyMonthPlanCreatedByRemoved = true; }
            if (state.MonthPlanUpdatedBy == null) { cmd.IsPropertyMonthPlanUpdatedByRemoved = true; }
            if (state.YearPlanDescription == null) { cmd.IsPropertyYearPlanDescriptionRemoved = true; }
            if (state.YearPlanCreatedBy == null) { cmd.IsPropertyYearPlanCreatedByRemoved = true; }
            if (state.YearPlanUpdatedBy == null) { cmd.IsPropertyYearPlanUpdatedByRemoved = true; }
            if (state.PersonLoves == null) { cmd.IsPropertyPersonLovesRemoved = true; }
            if (state.PersonEmergencyContact == null) { cmd.IsPropertyPersonEmergencyContactRemoved = true; }
            if (state.PersonCreatedBy == null) { cmd.IsPropertyPersonCreatedByRemoved = true; }
            if (state.PersonUpdatedBy == null) { cmd.IsPropertyPersonUpdatedByRemoved = true; }
            return cmd;
        }

        public static TCreateDayPlanMvo ToCreateDayPlanMvo<TCreateDayPlanMvo>(this IDayPlanMvoState state)
            where TCreateDayPlanMvo : ICreateDayPlanMvo, new()
        {
            var cmd = new TCreateDayPlanMvo();

            cmd.PersonVersion = ((IDayPlanMvoStateProperties)state).PersonVersion;

            cmd.DayPlanId = state.DayPlanId;
            cmd.Description = state.Description;
            cmd.Version = ((IDayPlanMvoStateProperties)state).Version;
            cmd.Active = ((IDayPlanMvoStateProperties)state).Active;
            cmd.MonthPlanDescription = state.MonthPlanDescription;
            cmd.MonthPlanVersion = state.MonthPlanVersion;
            cmd.MonthPlanCreatedBy = state.MonthPlanCreatedBy;
            cmd.MonthPlanCreatedAt = state.MonthPlanCreatedAt;
            cmd.MonthPlanUpdatedBy = state.MonthPlanUpdatedBy;
            cmd.MonthPlanUpdatedAt = state.MonthPlanUpdatedAt;
            cmd.MonthPlanActive = state.MonthPlanActive;
            cmd.MonthPlanDeleted = state.MonthPlanDeleted;
            cmd.YearPlanDescription = state.YearPlanDescription;
            cmd.YearPlanVersion = state.YearPlanVersion;
            cmd.YearPlanCreatedBy = state.YearPlanCreatedBy;
            cmd.YearPlanCreatedAt = state.YearPlanCreatedAt;
            cmd.YearPlanUpdatedBy = state.YearPlanUpdatedBy;
            cmd.YearPlanUpdatedAt = state.YearPlanUpdatedAt;
            cmd.YearPlanActive = state.YearPlanActive;
            cmd.YearPlanDeleted = state.YearPlanDeleted;
            cmd.PersonBirthDate = state.PersonBirthDate;
            cmd.PersonLoves = state.PersonLoves;
            cmd.PersonEmergencyContact = state.PersonEmergencyContact;
            cmd.PersonCreatedBy = state.PersonCreatedBy;
            cmd.PersonCreatedAt = state.PersonCreatedAt;
            cmd.PersonUpdatedBy = state.PersonUpdatedBy;
            cmd.PersonUpdatedAt = state.PersonUpdatedAt;
            cmd.PersonActive = state.PersonActive;
            cmd.PersonDeleted = state.PersonDeleted;
            return cmd;
        }
		

	}

}

