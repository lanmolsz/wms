// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentReceiptMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.ShipmentReceiptMvo;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.ShipmentReceiptMvo
{

    public class ShipmentReceiptMvoStateEventDtoConverter
    {
        public virtual ShipmentReceiptMvoStateCreatedOrMergePatchedOrDeletedDto ToShipmentReceiptMvoStateEventDto(IShipmentReceiptMvoStateEvent stateEvent)
        {
            if (stateEvent.StateEventType == StateEventType.Created)
            {
                var e = (IShipmentReceiptMvoStateCreated)stateEvent;
                return ToShipmentReceiptMvoStateCreatedDto(e);
            }
            else if (stateEvent.StateEventType == StateEventType.MergePatched)
            {
                var e = (IShipmentReceiptMvoStateMergePatched)stateEvent;
                return ToShipmentReceiptMvoStateMergePatchedDto(e);
            }
            throw DomainError.Named("invalidStateEventType", String.Format("Invalid state event type: {0}", stateEvent.StateEventType));
        }

        public virtual ShipmentReceiptMvoStateCreatedDto ToShipmentReceiptMvoStateCreatedDto(IShipmentReceiptMvoStateCreated e)
        {
            var dto = new ShipmentReceiptMvoStateCreatedDto();
            dto.StateEventId = new ShipmentReceiptMvoStateEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.ProductId = e.ProductId;
            dto.AttributeSetInstanceId = e.AttributeSetInstanceId;
            dto.ShipmentItemSeqId = e.ShipmentItemSeqId;
            dto.RejectionReasonId = e.RejectionReasonId;
            dto.DamageStatusId = e.DamageStatusId;
            dto.DamageReasonId = e.DamageReasonId;
            dto.ReceivedBy = e.ReceivedBy;
            dto.DatetimeReceived = e.DatetimeReceived;
            dto.ItemDescription = e.ItemDescription;
            dto.AcceptedQuantity = e.AcceptedQuantity;
            dto.RejectedQuantity = e.RejectedQuantity;
            dto.DamagedQuantity = e.DamagedQuantity;
            dto.Version = e.Version;
            dto.Active = e.Active;
            dto.ShipmentShipmentTypeId = e.ShipmentShipmentTypeId;
            dto.ShipmentStatusId = e.ShipmentStatusId;
            dto.ShipmentPrimaryOrderId = e.ShipmentPrimaryOrderId;
            dto.ShipmentPrimaryReturnId = e.ShipmentPrimaryReturnId;
            dto.ShipmentPicklistBinId = e.ShipmentPicklistBinId;
            dto.ShipmentEstimatedReadyDate = e.ShipmentEstimatedReadyDate;
            dto.ShipmentEstimatedShipDate = e.ShipmentEstimatedShipDate;
            dto.ShipmentEstimatedShipWorkEffId = e.ShipmentEstimatedShipWorkEffId;
            dto.ShipmentEstimatedArrivalDate = e.ShipmentEstimatedArrivalDate;
            dto.ShipmentEstimatedArrivalWorkEffId = e.ShipmentEstimatedArrivalWorkEffId;
            dto.ShipmentLatestCancelDate = e.ShipmentLatestCancelDate;
            dto.ShipmentEstimatedShipCost = e.ShipmentEstimatedShipCost;
            dto.ShipmentCurrencyUomId = e.ShipmentCurrencyUomId;
            dto.ShipmentHandlingInstructions = e.ShipmentHandlingInstructions;
            dto.ShipmentOriginFacilityId = e.ShipmentOriginFacilityId;
            dto.ShipmentDestinationFacilityId = e.ShipmentDestinationFacilityId;
            dto.ShipmentOriginContactMechId = e.ShipmentOriginContactMechId;
            dto.ShipmentOriginTelecomNumberId = e.ShipmentOriginTelecomNumberId;
            dto.ShipmentDestinationContactMechId = e.ShipmentDestinationContactMechId;
            dto.ShipmentDestinationTelecomNumberId = e.ShipmentDestinationTelecomNumberId;
            dto.ShipmentPartyIdTo = e.ShipmentPartyIdTo;
            dto.ShipmentPartyIdFrom = e.ShipmentPartyIdFrom;
            dto.ShipmentAdditionalShippingCharge = e.ShipmentAdditionalShippingCharge;
            dto.ShipmentAddtlShippingChargeDesc = e.ShipmentAddtlShippingChargeDesc;
            dto.ShipmentShipperId = e.ShipmentShipperId;
            dto.ShipmentCreatedBy = e.ShipmentCreatedBy;
            dto.ShipmentCreatedAt = e.ShipmentCreatedAt;
            dto.ShipmentUpdatedBy = e.ShipmentUpdatedBy;
            dto.ShipmentUpdatedAt = e.ShipmentUpdatedAt;
            dto.ShipmentActive = e.ShipmentActive;
            return dto;
        }

        public virtual ShipmentReceiptMvoStateMergePatchedDto ToShipmentReceiptMvoStateMergePatchedDto(IShipmentReceiptMvoStateMergePatched e)
        {
            var dto = new ShipmentReceiptMvoStateMergePatchedDto();
            dto.StateEventId = new ShipmentReceiptMvoStateEventIdDtoWrapper(e.StateEventId);
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.ProductId = e.ProductId;
            dto.AttributeSetInstanceId = e.AttributeSetInstanceId;
            dto.ShipmentItemSeqId = e.ShipmentItemSeqId;
            dto.RejectionReasonId = e.RejectionReasonId;
            dto.DamageStatusId = e.DamageStatusId;
            dto.DamageReasonId = e.DamageReasonId;
            dto.ReceivedBy = e.ReceivedBy;
            dto.DatetimeReceived = e.DatetimeReceived;
            dto.ItemDescription = e.ItemDescription;
            dto.AcceptedQuantity = e.AcceptedQuantity;
            dto.RejectedQuantity = e.RejectedQuantity;
            dto.DamagedQuantity = e.DamagedQuantity;
            dto.Version = e.Version;
            dto.Active = e.Active;
            dto.ShipmentShipmentTypeId = e.ShipmentShipmentTypeId;
            dto.ShipmentStatusId = e.ShipmentStatusId;
            dto.ShipmentPrimaryOrderId = e.ShipmentPrimaryOrderId;
            dto.ShipmentPrimaryReturnId = e.ShipmentPrimaryReturnId;
            dto.ShipmentPicklistBinId = e.ShipmentPicklistBinId;
            dto.ShipmentEstimatedReadyDate = e.ShipmentEstimatedReadyDate;
            dto.ShipmentEstimatedShipDate = e.ShipmentEstimatedShipDate;
            dto.ShipmentEstimatedShipWorkEffId = e.ShipmentEstimatedShipWorkEffId;
            dto.ShipmentEstimatedArrivalDate = e.ShipmentEstimatedArrivalDate;
            dto.ShipmentEstimatedArrivalWorkEffId = e.ShipmentEstimatedArrivalWorkEffId;
            dto.ShipmentLatestCancelDate = e.ShipmentLatestCancelDate;
            dto.ShipmentEstimatedShipCost = e.ShipmentEstimatedShipCost;
            dto.ShipmentCurrencyUomId = e.ShipmentCurrencyUomId;
            dto.ShipmentHandlingInstructions = e.ShipmentHandlingInstructions;
            dto.ShipmentOriginFacilityId = e.ShipmentOriginFacilityId;
            dto.ShipmentDestinationFacilityId = e.ShipmentDestinationFacilityId;
            dto.ShipmentOriginContactMechId = e.ShipmentOriginContactMechId;
            dto.ShipmentOriginTelecomNumberId = e.ShipmentOriginTelecomNumberId;
            dto.ShipmentDestinationContactMechId = e.ShipmentDestinationContactMechId;
            dto.ShipmentDestinationTelecomNumberId = e.ShipmentDestinationTelecomNumberId;
            dto.ShipmentPartyIdTo = e.ShipmentPartyIdTo;
            dto.ShipmentPartyIdFrom = e.ShipmentPartyIdFrom;
            dto.ShipmentAdditionalShippingCharge = e.ShipmentAdditionalShippingCharge;
            dto.ShipmentAddtlShippingChargeDesc = e.ShipmentAddtlShippingChargeDesc;
            dto.ShipmentShipperId = e.ShipmentShipperId;
            dto.ShipmentCreatedBy = e.ShipmentCreatedBy;
            dto.ShipmentCreatedAt = e.ShipmentCreatedAt;
            dto.ShipmentUpdatedBy = e.ShipmentUpdatedBy;
            dto.ShipmentUpdatedAt = e.ShipmentUpdatedAt;
            dto.ShipmentActive = e.ShipmentActive;
            dto.IsPropertyProductIdRemoved = e.IsPropertyProductIdRemoved;
            dto.IsPropertyAttributeSetInstanceIdRemoved = e.IsPropertyAttributeSetInstanceIdRemoved;
            dto.IsPropertyShipmentItemSeqIdRemoved = e.IsPropertyShipmentItemSeqIdRemoved;
            dto.IsPropertyRejectionReasonIdRemoved = e.IsPropertyRejectionReasonIdRemoved;
            dto.IsPropertyDamageStatusIdRemoved = e.IsPropertyDamageStatusIdRemoved;
            dto.IsPropertyDamageReasonIdRemoved = e.IsPropertyDamageReasonIdRemoved;
            dto.IsPropertyReceivedByRemoved = e.IsPropertyReceivedByRemoved;
            dto.IsPropertyDatetimeReceivedRemoved = e.IsPropertyDatetimeReceivedRemoved;
            dto.IsPropertyItemDescriptionRemoved = e.IsPropertyItemDescriptionRemoved;
            dto.IsPropertyAcceptedQuantityRemoved = e.IsPropertyAcceptedQuantityRemoved;
            dto.IsPropertyRejectedQuantityRemoved = e.IsPropertyRejectedQuantityRemoved;
            dto.IsPropertyDamagedQuantityRemoved = e.IsPropertyDamagedQuantityRemoved;
            dto.IsPropertyVersionRemoved = e.IsPropertyVersionRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;
            dto.IsPropertyShipmentShipmentTypeIdRemoved = e.IsPropertyShipmentShipmentTypeIdRemoved;
            dto.IsPropertyShipmentStatusIdRemoved = e.IsPropertyShipmentStatusIdRemoved;
            dto.IsPropertyShipmentPrimaryOrderIdRemoved = e.IsPropertyShipmentPrimaryOrderIdRemoved;
            dto.IsPropertyShipmentPrimaryReturnIdRemoved = e.IsPropertyShipmentPrimaryReturnIdRemoved;
            dto.IsPropertyShipmentPicklistBinIdRemoved = e.IsPropertyShipmentPicklistBinIdRemoved;
            dto.IsPropertyShipmentEstimatedReadyDateRemoved = e.IsPropertyShipmentEstimatedReadyDateRemoved;
            dto.IsPropertyShipmentEstimatedShipDateRemoved = e.IsPropertyShipmentEstimatedShipDateRemoved;
            dto.IsPropertyShipmentEstimatedShipWorkEffIdRemoved = e.IsPropertyShipmentEstimatedShipWorkEffIdRemoved;
            dto.IsPropertyShipmentEstimatedArrivalDateRemoved = e.IsPropertyShipmentEstimatedArrivalDateRemoved;
            dto.IsPropertyShipmentEstimatedArrivalWorkEffIdRemoved = e.IsPropertyShipmentEstimatedArrivalWorkEffIdRemoved;
            dto.IsPropertyShipmentLatestCancelDateRemoved = e.IsPropertyShipmentLatestCancelDateRemoved;
            dto.IsPropertyShipmentEstimatedShipCostRemoved = e.IsPropertyShipmentEstimatedShipCostRemoved;
            dto.IsPropertyShipmentCurrencyUomIdRemoved = e.IsPropertyShipmentCurrencyUomIdRemoved;
            dto.IsPropertyShipmentHandlingInstructionsRemoved = e.IsPropertyShipmentHandlingInstructionsRemoved;
            dto.IsPropertyShipmentOriginFacilityIdRemoved = e.IsPropertyShipmentOriginFacilityIdRemoved;
            dto.IsPropertyShipmentDestinationFacilityIdRemoved = e.IsPropertyShipmentDestinationFacilityIdRemoved;
            dto.IsPropertyShipmentOriginContactMechIdRemoved = e.IsPropertyShipmentOriginContactMechIdRemoved;
            dto.IsPropertyShipmentOriginTelecomNumberIdRemoved = e.IsPropertyShipmentOriginTelecomNumberIdRemoved;
            dto.IsPropertyShipmentDestinationContactMechIdRemoved = e.IsPropertyShipmentDestinationContactMechIdRemoved;
            dto.IsPropertyShipmentDestinationTelecomNumberIdRemoved = e.IsPropertyShipmentDestinationTelecomNumberIdRemoved;
            dto.IsPropertyShipmentPartyIdToRemoved = e.IsPropertyShipmentPartyIdToRemoved;
            dto.IsPropertyShipmentPartyIdFromRemoved = e.IsPropertyShipmentPartyIdFromRemoved;
            dto.IsPropertyShipmentAdditionalShippingChargeRemoved = e.IsPropertyShipmentAdditionalShippingChargeRemoved;
            dto.IsPropertyShipmentAddtlShippingChargeDescRemoved = e.IsPropertyShipmentAddtlShippingChargeDescRemoved;
            dto.IsPropertyShipmentShipperIdRemoved = e.IsPropertyShipmentShipperIdRemoved;
            dto.IsPropertyShipmentCreatedByRemoved = e.IsPropertyShipmentCreatedByRemoved;
            dto.IsPropertyShipmentCreatedAtRemoved = e.IsPropertyShipmentCreatedAtRemoved;
            dto.IsPropertyShipmentUpdatedByRemoved = e.IsPropertyShipmentUpdatedByRemoved;
            dto.IsPropertyShipmentUpdatedAtRemoved = e.IsPropertyShipmentUpdatedAtRemoved;
            dto.IsPropertyShipmentActiveRemoved = e.IsPropertyShipmentActiveRemoved;

            return dto;
        }



    }


}

