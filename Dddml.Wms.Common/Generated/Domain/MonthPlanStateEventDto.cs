// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public abstract class MonthPlanStateEventDtoBase : IStateEventDto, IMonthPlanStateCreated, IMonthPlanStateMergePatched, IMonthPlanStateRemoved
	{

        private MonthPlanStateEventIdDto _stateEventId;

		protected internal virtual MonthPlanStateEventIdDto StateEventId 
        {
            get 
            {
                if (_stateEventId == null) { _stateEventId = new MonthPlanStateEventIdDto(); }
                return _stateEventId;
            }
            set
            {
                _stateEventId = value;
            }
        }

        public virtual int Month
        {
            get { return StateEventId.Month; }
            set { StateEventId.Month = value; }
        }

		public virtual string Description { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

		MonthPlanStateEventId IGlobalIdentity<MonthPlanStateEventId>.GlobalId {
			get {
				return this.StateEventId.ToMonthPlanStateEventId();
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IMonthPlanStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }

		public virtual long Version { get; set; }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IMonthPlanStateMergePatched.IsPropertyDescriptionRemoved
        {
            get 
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMonthPlanStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        private DayPlanStateCreatedOrMergePatchedOrRemovedDtos _dayPlanEvents = new DayPlanStateCreatedOrMergePatchedOrRemovedDtos();

        public virtual DayPlanStateCreatedOrMergePatchedOrRemovedDto[] DayPlanEvents
        {
            get
            {
                return _dayPlanEvents.ToArray();
            }
            set
            {
                _dayPlanEvents.Clear();
                _dayPlanEvents.AddRange(value);
            }
        }



        private DayPlanStateEventIdDto NewDayPlanStateEventId(int day)
        {
            var eId = new DayPlanStateEventIdDto();
            eId.PersonalName = this.StateEventId.PersonalName;
            eId.Year = this.StateEventId.Year;
            eId.Month = this.StateEventId.Month;
            eId.Day = day;
            eId.PersonVersion = this.StateEventId.PersonVersion;
            return eId;
        }

        public virtual DayPlanStateCreatedDto NewDayPlanStateCreated(int day)
        {
            var e = new DayPlanStateCreatedDto();
            var eId = NewDayPlanStateEventId(day);
            e.StateEventId = eId;
            return e;
        }

        public virtual DayPlanStateMergePatchedDto NewDayPlanStateMergePatched(int day)
        {
            var e = new DayPlanStateMergePatchedDto();
            var eId = NewDayPlanStateEventId(day);
            e.StateEventId = eId;
            return e;
        }

        public virtual DayPlanStateRemovedDto NewDayPlanStateRemoved(int day)
        {
            var e = new DayPlanStateRemovedDto();
            var eId = NewDayPlanStateEventId(day);
            e.StateEventId = eId;
            return e;
        }

        IEnumerable<IDayPlanStateCreated> IMonthPlanStateCreated.DayPlanEvents
        {
            get { return this._dayPlanEvents; }
        }

        void IMonthPlanStateCreated.AddDayPlanEvent(IDayPlanStateCreated e)
        {
            this._dayPlanEvents.AddDayPlanEvent(e);
        }

        IDayPlanStateCreated IMonthPlanStateCreated.NewDayPlanStateCreated(int day)
        {
            return NewDayPlanStateCreated(day);
        }

        IEnumerable<IDayPlanStateEvent> IMonthPlanStateMergePatched.DayPlanEvents
        {
            get { return this._dayPlanEvents; }
        }

        void IMonthPlanStateMergePatched.AddDayPlanEvent(IDayPlanStateEvent e)
        {
            this._dayPlanEvents.AddDayPlanEvent(e);
        }

        IDayPlanStateCreated IMonthPlanStateMergePatched.NewDayPlanStateCreated(int day)
        {
            return NewDayPlanStateCreated(day);
        }

        IDayPlanStateMergePatched IMonthPlanStateMergePatched.NewDayPlanStateMergePatched(int day)
        {
            return NewDayPlanStateMergePatched(day);
        }

        IDayPlanStateRemoved IMonthPlanStateMergePatched.NewDayPlanStateRemoved(int day)
        {
            return NewDayPlanStateRemoved(day);
        }


        IEnumerable<IDayPlanStateRemoved> IMonthPlanStateRemoved.DayPlanEvents
        {
            get { return this._dayPlanEvents; }
        }

        void IMonthPlanStateRemoved.AddDayPlanEvent(IDayPlanStateRemoved e)
        {
            this._dayPlanEvents.AddDayPlanEvent(e);
        }

        IDayPlanStateRemoved IMonthPlanStateRemoved.NewDayPlanStateRemoved(int day)
        {
            return NewDayPlanStateRemoved(day);
        }


        MonthPlanStateEventId IMonthPlanStateEvent.StateEventId
        {
            get { return this.StateEventId.ToMonthPlanStateEventId(); }
        }

        protected MonthPlanStateEventDtoBase()
        {
        }

        protected MonthPlanStateEventDtoBase(MonthPlanStateEventIdDto stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IStateEventDto.StateEventType 
        {
            get { return this.GetStateEventType(); }
        }

        protected abstract string GetStateEventType();

	}


    public class MonthPlanStateCreatedOrMergePatchedOrRemovedDto : MonthPlanStateEventDtoBase
    {
        private string _stateEventType;

        public virtual string StateEventType
        {
            get { return _stateEventType; }
            set { _stateEventType = value; }
        }

        protected override string GetStateEventType()
        {
            return this._stateEventType;
        }

    }



	public class MonthPlanStateCreatedDto : MonthPlanStateCreatedOrMergePatchedOrRemovedDto
	{
		public MonthPlanStateCreatedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class MonthPlanStateMergePatchedDto : MonthPlanStateCreatedOrMergePatchedOrRemovedDto
	{
		public MonthPlanStateMergePatchedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class MonthPlanStateRemovedDto : MonthPlanStateCreatedOrMergePatchedOrRemovedDto
	{
		public MonthPlanStateRemovedDto()
		{
		}

        public override string StateEventType
        {
            get { return this.GetStateEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetStateEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Removed;
        }

	}


    public partial class MonthPlanStateCreatedOrMergePatchedOrRemovedDtos : IEnumerable<IMonthPlanStateCreated>, IEnumerable<IMonthPlanStateMergePatched>, IEnumerable<IMonthPlanStateRemoved>
    {
        private List<MonthPlanStateCreatedOrMergePatchedOrRemovedDto> _innerStateEvents = new List<MonthPlanStateCreatedOrMergePatchedOrRemovedDto>();

        public virtual MonthPlanStateCreatedOrMergePatchedOrRemovedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<MonthPlanStateCreatedOrMergePatchedOrRemovedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMonthPlanStateCreated> IEnumerable<IMonthPlanStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMonthPlanStateMergePatched> IEnumerable<IMonthPlanStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IMonthPlanStateRemoved> IEnumerable<IMonthPlanStateRemoved>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        public void AddMonthPlanEvent(IMonthPlanStateCreated e)
        {
            _innerStateEvents.Add((MonthPlanStateCreatedDto)e);
        }

        public void AddMonthPlanEvent(IMonthPlanStateEvent e)
        {
            _innerStateEvents.Add((MonthPlanStateCreatedOrMergePatchedOrRemovedDto)e);
        }

        public void AddMonthPlanEvent(IMonthPlanStateRemoved e)
        {
            _innerStateEvents.Add((MonthPlanStateRemovedDto)e);
        }

    }


}

