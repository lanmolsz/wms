// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public class AttributeSetInstanceExtensionFieldStateEventIdDto
	{

		public AttributeSetInstanceExtensionFieldStateEventIdDto()
		{
		}

        public virtual AttributeSetInstanceExtensionFieldStateEventId ToAttributeSetInstanceExtensionFieldStateEventId()
        {
            AttributeSetInstanceExtensionFieldStateEventId v = new AttributeSetInstanceExtensionFieldStateEventId();
            v.GroupId = this.GroupId;
            v.Index = this.Index;
            v.AttributeSetInstanceExtensionFieldGroupVersion = this.AttributeSetInstanceExtensionFieldGroupVersion;
            return v;
        }

		public virtual string GroupId { 
			get;
			set;
		}

		public virtual string Index { 
			get;
			set;
		}

		public virtual long AttributeSetInstanceExtensionFieldGroupVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			AttributeSetInstanceExtensionFieldStateEventIdDto other = obj as AttributeSetInstanceExtensionFieldStateEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.GroupId, other.GroupId)
				&& Object.Equals (this.Index, other.Index)
				&& Object.Equals (this.AttributeSetInstanceExtensionFieldGroupVersion, other.AttributeSetInstanceExtensionFieldGroupVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.GroupId != null) {
				hash += 13 * this.GroupId.GetHashCode ();
			}
			if (this.Index != null) {
				hash += 13 * this.Index.GetHashCode ();
			}
			if (this.AttributeSetInstanceExtensionFieldGroupVersion != null) {
				hash += 13 * this.AttributeSetInstanceExtensionFieldGroupVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


