// <autogenerated>
//   This file was generated by T4 code generator GenerateAttributeUseMvoDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.AttributeUseMvo;
using Dddml.Wms.Domain.AttributeSet;

namespace Dddml.Wms.Domain.AttributeUseMvo
{

	public class AttributeUseMvoEventIdDto
	{

		public AttributeUseMvoEventIdDto()
		{
		}

        public virtual AttributeUseMvoEventId ToAttributeUseMvoEventId()
        {
            AttributeUseMvoEventId v = new AttributeUseMvoEventId();
            v.AttributeSetAttributeUseId = this.AttributeSetAttributeUseId.ToAttributeSetAttributeUseId();
            v.AttributeSetVersion = this.AttributeSetVersion;
            return v;
        }

		private AttributeSetAttributeUseIdDto _attributeSetAttributeUseId = new AttributeSetAttributeUseIdDto();

		public virtual AttributeSetAttributeUseIdDto AttributeSetAttributeUseId { 
			get { return this._attributeSetAttributeUseId; } 
			set { this._attributeSetAttributeUseId = value; } 
		}

		public virtual long AttributeSetVersion { 
			get;
			set;
		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			AttributeUseMvoEventIdDto other = obj as AttributeUseMvoEventIdDto;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.AttributeSetAttributeUseId, other.AttributeSetAttributeUseId)
				&& Object.Equals (this.AttributeSetVersion, other.AttributeSetVersion)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.AttributeSetAttributeUseId != null) {
				hash += 13 * this.AttributeSetAttributeUseId.GetHashCode ();
			}
			if (this.AttributeSetVersion != null) {
				hash += 13 * this.AttributeSetVersion.GetHashCode ();
			}
			return hash;
		}

	}

}


